
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Moneda
 * 
 */
export type Moneda = $Result.DefaultSelection<Prisma.$MonedaPayload>
/**
 * Model CobroCliente
 * 
 */
export type CobroCliente = $Result.DefaultSelection<Prisma.$CobroClientePayload>
/**
 * Model TipoCambio
 * 
 */
export type TipoCambio = $Result.DefaultSelection<Prisma.$TipoCambioPayload>
/**
 * Model Persona
 * 
 */
export type Persona = $Result.DefaultSelection<Prisma.$PersonaPayload>
/**
 * Model Empresa
 * 
 */
export type Empresa = $Result.DefaultSelection<Prisma.$EmpresaPayload>
/**
 * Model Producto
 * 
 */
export type Producto = $Result.DefaultSelection<Prisma.$ProductoPayload>
/**
 * Model Servicio
 * 
 */
export type Servicio = $Result.DefaultSelection<Prisma.$ServicioPayload>
/**
 * Model Presupuesto
 * 
 */
export type Presupuesto = $Result.DefaultSelection<Prisma.$PresupuestoPayload>
/**
 * Model Item
 * 
 */
export type Item = $Result.DefaultSelection<Prisma.$ItemPayload>
/**
 * Model Factura
 * 
 */
export type Factura = $Result.DefaultSelection<Prisma.$FacturaPayload>
/**
 * Model Recibo
 * 
 */
export type Recibo = $Result.DefaultSelection<Prisma.$ReciboPayload>
/**
 * Model Impuesto
 * 
 */
export type Impuesto = $Result.DefaultSelection<Prisma.$ImpuestoPayload>
/**
 * Model PresupuestoImpuesto
 * 
 */
export type PresupuestoImpuesto = $Result.DefaultSelection<Prisma.$PresupuestoImpuestoPayload>
/**
 * Model GastoOperativo
 * 
 */
export type GastoOperativo = $Result.DefaultSelection<Prisma.$GastoOperativoPayload>
/**
 * Model AsignacionGastoProyecto
 * 
 */
export type AsignacionGastoProyecto = $Result.DefaultSelection<Prisma.$AsignacionGastoProyectoPayload>
/**
 * Model HistorialPrecio
 * 
 */
export type HistorialPrecio = $Result.DefaultSelection<Prisma.$HistorialPrecioPayload>
/**
 * Model PagoAdmin
 * 
 */
export type PagoAdmin = $Result.DefaultSelection<Prisma.$PagoAdminPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const TipoPersona: {
  CLIENTE: 'CLIENTE',
  PROVEEDOR: 'PROVEEDOR',
  INTERNO: 'INTERNO'
};

export type TipoPersona = (typeof TipoPersona)[keyof typeof TipoPersona]


export const RolUsuario: {
  ADMIN: 'ADMIN',
  CONTADOR: 'CONTADOR',
  PROVEEDOR: 'PROVEEDOR'
};

export type RolUsuario = (typeof RolUsuario)[keyof typeof RolUsuario]


export const EstadoPresupuesto: {
  BORRADOR: 'BORRADOR',
  ENVIADO: 'ENVIADO',
  APROBADO: 'APROBADO',
  FACTURADO: 'FACTURADO'
};

export type EstadoPresupuesto = (typeof EstadoPresupuesto)[keyof typeof EstadoPresupuesto]


export const EstadoFactura: {
  EMITIDA: 'EMITIDA',
  PAGADA: 'PAGADA',
  ANULADA: 'ANULADA'
};

export type EstadoFactura = (typeof EstadoFactura)[keyof typeof EstadoFactura]


export const CodigoMoneda: {
  ARS: 'ARS',
  USD: 'USD',
  EUR: 'EUR'
};

export type CodigoMoneda = (typeof CodigoMoneda)[keyof typeof CodigoMoneda]


export const CategoriaGasto: {
  OFICINA: 'OFICINA',
  PERSONAL: 'PERSONAL',
  MARKETING: 'MARKETING',
  TECNOLOGIA: 'TECNOLOGIA',
  SERVICIOS: 'SERVICIOS',
  TRANSPORTE: 'TRANSPORTE',
  COMUNICACION: 'COMUNICACION',
  OTROS: 'OTROS'
};

export type CategoriaGasto = (typeof CategoriaGasto)[keyof typeof CategoriaGasto]


export const TipoCotizacion: {
  OFICIAL: 'OFICIAL',
  BLUE: 'BLUE',
  TARJETA: 'TARJETA'
};

export type TipoCotizacion = (typeof TipoCotizacion)[keyof typeof TipoCotizacion]


export const ReciboTipo: {
  PROVEEDOR: 'PROVEEDOR',
  ADMIN: 'ADMIN'
};

export type ReciboTipo = (typeof ReciboTipo)[keyof typeof ReciboTipo]


export const FrecuenciaContrato: {
  UNICO: 'UNICO',
  MENSUAL: 'MENSUAL',
  TRIMESTRAL: 'TRIMESTRAL',
  ANUAL: 'ANUAL'
};

export type FrecuenciaContrato = (typeof FrecuenciaContrato)[keyof typeof FrecuenciaContrato]

}

export type TipoPersona = $Enums.TipoPersona

export const TipoPersona: typeof $Enums.TipoPersona

export type RolUsuario = $Enums.RolUsuario

export const RolUsuario: typeof $Enums.RolUsuario

export type EstadoPresupuesto = $Enums.EstadoPresupuesto

export const EstadoPresupuesto: typeof $Enums.EstadoPresupuesto

export type EstadoFactura = $Enums.EstadoFactura

export const EstadoFactura: typeof $Enums.EstadoFactura

export type CodigoMoneda = $Enums.CodigoMoneda

export const CodigoMoneda: typeof $Enums.CodigoMoneda

export type CategoriaGasto = $Enums.CategoriaGasto

export const CategoriaGasto: typeof $Enums.CategoriaGasto

export type TipoCotizacion = $Enums.TipoCotizacion

export const TipoCotizacion: typeof $Enums.TipoCotizacion

export type ReciboTipo = $Enums.ReciboTipo

export const ReciboTipo: typeof $Enums.ReciboTipo

export type FrecuenciaContrato = $Enums.FrecuenciaContrato

export const FrecuenciaContrato: typeof $Enums.FrecuenciaContrato

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Monedas
 * const monedas = await prisma.moneda.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Monedas
   * const monedas = await prisma.moneda.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.moneda`: Exposes CRUD operations for the **Moneda** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Monedas
    * const monedas = await prisma.moneda.findMany()
    * ```
    */
  get moneda(): Prisma.MonedaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cobroCliente`: Exposes CRUD operations for the **CobroCliente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CobroClientes
    * const cobroClientes = await prisma.cobroCliente.findMany()
    * ```
    */
  get cobroCliente(): Prisma.CobroClienteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipoCambio`: Exposes CRUD operations for the **TipoCambio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TipoCambios
    * const tipoCambios = await prisma.tipoCambio.findMany()
    * ```
    */
  get tipoCambio(): Prisma.TipoCambioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.persona`: Exposes CRUD operations for the **Persona** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Personas
    * const personas = await prisma.persona.findMany()
    * ```
    */
  get persona(): Prisma.PersonaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.empresa`: Exposes CRUD operations for the **Empresa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Empresas
    * const empresas = await prisma.empresa.findMany()
    * ```
    */
  get empresa(): Prisma.EmpresaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.producto`: Exposes CRUD operations for the **Producto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Productos
    * const productos = await prisma.producto.findMany()
    * ```
    */
  get producto(): Prisma.ProductoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.servicio`: Exposes CRUD operations for the **Servicio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Servicios
    * const servicios = await prisma.servicio.findMany()
    * ```
    */
  get servicio(): Prisma.ServicioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.presupuesto`: Exposes CRUD operations for the **Presupuesto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Presupuestos
    * const presupuestos = await prisma.presupuesto.findMany()
    * ```
    */
  get presupuesto(): Prisma.PresupuestoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.item`: Exposes CRUD operations for the **Item** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Items
    * const items = await prisma.item.findMany()
    * ```
    */
  get item(): Prisma.ItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.factura`: Exposes CRUD operations for the **Factura** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Facturas
    * const facturas = await prisma.factura.findMany()
    * ```
    */
  get factura(): Prisma.FacturaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.recibo`: Exposes CRUD operations for the **Recibo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Recibos
    * const recibos = await prisma.recibo.findMany()
    * ```
    */
  get recibo(): Prisma.ReciboDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.impuesto`: Exposes CRUD operations for the **Impuesto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Impuestos
    * const impuestos = await prisma.impuesto.findMany()
    * ```
    */
  get impuesto(): Prisma.ImpuestoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.presupuestoImpuesto`: Exposes CRUD operations for the **PresupuestoImpuesto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PresupuestoImpuestos
    * const presupuestoImpuestos = await prisma.presupuestoImpuesto.findMany()
    * ```
    */
  get presupuestoImpuesto(): Prisma.PresupuestoImpuestoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.gastoOperativo`: Exposes CRUD operations for the **GastoOperativo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more GastoOperativos
    * const gastoOperativos = await prisma.gastoOperativo.findMany()
    * ```
    */
  get gastoOperativo(): Prisma.GastoOperativoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.asignacionGastoProyecto`: Exposes CRUD operations for the **AsignacionGastoProyecto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AsignacionGastoProyectos
    * const asignacionGastoProyectos = await prisma.asignacionGastoProyecto.findMany()
    * ```
    */
  get asignacionGastoProyecto(): Prisma.AsignacionGastoProyectoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.historialPrecio`: Exposes CRUD operations for the **HistorialPrecio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HistorialPrecios
    * const historialPrecios = await prisma.historialPrecio.findMany()
    * ```
    */
  get historialPrecio(): Prisma.HistorialPrecioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pagoAdmin`: Exposes CRUD operations for the **PagoAdmin** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PagoAdmins
    * const pagoAdmins = await prisma.pagoAdmin.findMany()
    * ```
    */
  get pagoAdmin(): Prisma.PagoAdminDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.11.1
   * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Moneda: 'Moneda',
    CobroCliente: 'CobroCliente',
    TipoCambio: 'TipoCambio',
    Persona: 'Persona',
    Empresa: 'Empresa',
    Producto: 'Producto',
    Servicio: 'Servicio',
    Presupuesto: 'Presupuesto',
    Item: 'Item',
    Factura: 'Factura',
    Recibo: 'Recibo',
    Impuesto: 'Impuesto',
    PresupuestoImpuesto: 'PresupuestoImpuesto',
    GastoOperativo: 'GastoOperativo',
    AsignacionGastoProyecto: 'AsignacionGastoProyecto',
    HistorialPrecio: 'HistorialPrecio',
    PagoAdmin: 'PagoAdmin'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "moneda" | "cobroCliente" | "tipoCambio" | "persona" | "empresa" | "producto" | "servicio" | "presupuesto" | "item" | "factura" | "recibo" | "impuesto" | "presupuestoImpuesto" | "gastoOperativo" | "asignacionGastoProyecto" | "historialPrecio" | "pagoAdmin"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Moneda: {
        payload: Prisma.$MonedaPayload<ExtArgs>
        fields: Prisma.MonedaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MonedaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MonedaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MonedaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MonedaPayload>
          }
          findFirst: {
            args: Prisma.MonedaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MonedaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MonedaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MonedaPayload>
          }
          findMany: {
            args: Prisma.MonedaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MonedaPayload>[]
          }
          create: {
            args: Prisma.MonedaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MonedaPayload>
          }
          createMany: {
            args: Prisma.MonedaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MonedaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MonedaPayload>[]
          }
          delete: {
            args: Prisma.MonedaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MonedaPayload>
          }
          update: {
            args: Prisma.MonedaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MonedaPayload>
          }
          deleteMany: {
            args: Prisma.MonedaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MonedaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MonedaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MonedaPayload>[]
          }
          upsert: {
            args: Prisma.MonedaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MonedaPayload>
          }
          aggregate: {
            args: Prisma.MonedaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMoneda>
          }
          groupBy: {
            args: Prisma.MonedaGroupByArgs<ExtArgs>
            result: $Utils.Optional<MonedaGroupByOutputType>[]
          }
          count: {
            args: Prisma.MonedaCountArgs<ExtArgs>
            result: $Utils.Optional<MonedaCountAggregateOutputType> | number
          }
        }
      }
      CobroCliente: {
        payload: Prisma.$CobroClientePayload<ExtArgs>
        fields: Prisma.CobroClienteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CobroClienteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobroClientePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CobroClienteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobroClientePayload>
          }
          findFirst: {
            args: Prisma.CobroClienteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobroClientePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CobroClienteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobroClientePayload>
          }
          findMany: {
            args: Prisma.CobroClienteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobroClientePayload>[]
          }
          create: {
            args: Prisma.CobroClienteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobroClientePayload>
          }
          createMany: {
            args: Prisma.CobroClienteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CobroClienteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobroClientePayload>[]
          }
          delete: {
            args: Prisma.CobroClienteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobroClientePayload>
          }
          update: {
            args: Prisma.CobroClienteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobroClientePayload>
          }
          deleteMany: {
            args: Prisma.CobroClienteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CobroClienteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CobroClienteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobroClientePayload>[]
          }
          upsert: {
            args: Prisma.CobroClienteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CobroClientePayload>
          }
          aggregate: {
            args: Prisma.CobroClienteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCobroCliente>
          }
          groupBy: {
            args: Prisma.CobroClienteGroupByArgs<ExtArgs>
            result: $Utils.Optional<CobroClienteGroupByOutputType>[]
          }
          count: {
            args: Prisma.CobroClienteCountArgs<ExtArgs>
            result: $Utils.Optional<CobroClienteCountAggregateOutputType> | number
          }
        }
      }
      TipoCambio: {
        payload: Prisma.$TipoCambioPayload<ExtArgs>
        fields: Prisma.TipoCambioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TipoCambioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TipoCambioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload>
          }
          findFirst: {
            args: Prisma.TipoCambioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TipoCambioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload>
          }
          findMany: {
            args: Prisma.TipoCambioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload>[]
          }
          create: {
            args: Prisma.TipoCambioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload>
          }
          createMany: {
            args: Prisma.TipoCambioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TipoCambioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload>[]
          }
          delete: {
            args: Prisma.TipoCambioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload>
          }
          update: {
            args: Prisma.TipoCambioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload>
          }
          deleteMany: {
            args: Prisma.TipoCambioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TipoCambioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TipoCambioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload>[]
          }
          upsert: {
            args: Prisma.TipoCambioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoCambioPayload>
          }
          aggregate: {
            args: Prisma.TipoCambioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipoCambio>
          }
          groupBy: {
            args: Prisma.TipoCambioGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipoCambioGroupByOutputType>[]
          }
          count: {
            args: Prisma.TipoCambioCountArgs<ExtArgs>
            result: $Utils.Optional<TipoCambioCountAggregateOutputType> | number
          }
        }
      }
      Persona: {
        payload: Prisma.$PersonaPayload<ExtArgs>
        fields: Prisma.PersonaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PersonaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PersonaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload>
          }
          findFirst: {
            args: Prisma.PersonaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PersonaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload>
          }
          findMany: {
            args: Prisma.PersonaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload>[]
          }
          create: {
            args: Prisma.PersonaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload>
          }
          createMany: {
            args: Prisma.PersonaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PersonaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload>[]
          }
          delete: {
            args: Prisma.PersonaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload>
          }
          update: {
            args: Prisma.PersonaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload>
          }
          deleteMany: {
            args: Prisma.PersonaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PersonaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PersonaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload>[]
          }
          upsert: {
            args: Prisma.PersonaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PersonaPayload>
          }
          aggregate: {
            args: Prisma.PersonaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePersona>
          }
          groupBy: {
            args: Prisma.PersonaGroupByArgs<ExtArgs>
            result: $Utils.Optional<PersonaGroupByOutputType>[]
          }
          count: {
            args: Prisma.PersonaCountArgs<ExtArgs>
            result: $Utils.Optional<PersonaCountAggregateOutputType> | number
          }
        }
      }
      Empresa: {
        payload: Prisma.$EmpresaPayload<ExtArgs>
        fields: Prisma.EmpresaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EmpresaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EmpresaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>
          }
          findFirst: {
            args: Prisma.EmpresaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EmpresaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>
          }
          findMany: {
            args: Prisma.EmpresaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>[]
          }
          create: {
            args: Prisma.EmpresaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>
          }
          createMany: {
            args: Prisma.EmpresaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EmpresaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>[]
          }
          delete: {
            args: Prisma.EmpresaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>
          }
          update: {
            args: Prisma.EmpresaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>
          }
          deleteMany: {
            args: Prisma.EmpresaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EmpresaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EmpresaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>[]
          }
          upsert: {
            args: Prisma.EmpresaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>
          }
          aggregate: {
            args: Prisma.EmpresaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmpresa>
          }
          groupBy: {
            args: Prisma.EmpresaGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmpresaGroupByOutputType>[]
          }
          count: {
            args: Prisma.EmpresaCountArgs<ExtArgs>
            result: $Utils.Optional<EmpresaCountAggregateOutputType> | number
          }
        }
      }
      Producto: {
        payload: Prisma.$ProductoPayload<ExtArgs>
        fields: Prisma.ProductoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          findFirst: {
            args: Prisma.ProductoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          findMany: {
            args: Prisma.ProductoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>[]
          }
          create: {
            args: Prisma.ProductoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          createMany: {
            args: Prisma.ProductoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>[]
          }
          delete: {
            args: Prisma.ProductoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          update: {
            args: Prisma.ProductoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          deleteMany: {
            args: Prisma.ProductoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>[]
          }
          upsert: {
            args: Prisma.ProductoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          aggregate: {
            args: Prisma.ProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProducto>
          }
          groupBy: {
            args: Prisma.ProductoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductoCountArgs<ExtArgs>
            result: $Utils.Optional<ProductoCountAggregateOutputType> | number
          }
        }
      }
      Servicio: {
        payload: Prisma.$ServicioPayload<ExtArgs>
        fields: Prisma.ServicioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ServicioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ServicioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicioPayload>
          }
          findFirst: {
            args: Prisma.ServicioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ServicioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicioPayload>
          }
          findMany: {
            args: Prisma.ServicioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicioPayload>[]
          }
          create: {
            args: Prisma.ServicioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicioPayload>
          }
          createMany: {
            args: Prisma.ServicioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ServicioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicioPayload>[]
          }
          delete: {
            args: Prisma.ServicioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicioPayload>
          }
          update: {
            args: Prisma.ServicioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicioPayload>
          }
          deleteMany: {
            args: Prisma.ServicioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ServicioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ServicioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicioPayload>[]
          }
          upsert: {
            args: Prisma.ServicioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicioPayload>
          }
          aggregate: {
            args: Prisma.ServicioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateServicio>
          }
          groupBy: {
            args: Prisma.ServicioGroupByArgs<ExtArgs>
            result: $Utils.Optional<ServicioGroupByOutputType>[]
          }
          count: {
            args: Prisma.ServicioCountArgs<ExtArgs>
            result: $Utils.Optional<ServicioCountAggregateOutputType> | number
          }
        }
      }
      Presupuesto: {
        payload: Prisma.$PresupuestoPayload<ExtArgs>
        fields: Prisma.PresupuestoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PresupuestoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PresupuestoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoPayload>
          }
          findFirst: {
            args: Prisma.PresupuestoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PresupuestoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoPayload>
          }
          findMany: {
            args: Prisma.PresupuestoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoPayload>[]
          }
          create: {
            args: Prisma.PresupuestoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoPayload>
          }
          createMany: {
            args: Prisma.PresupuestoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PresupuestoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoPayload>[]
          }
          delete: {
            args: Prisma.PresupuestoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoPayload>
          }
          update: {
            args: Prisma.PresupuestoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoPayload>
          }
          deleteMany: {
            args: Prisma.PresupuestoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PresupuestoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PresupuestoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoPayload>[]
          }
          upsert: {
            args: Prisma.PresupuestoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoPayload>
          }
          aggregate: {
            args: Prisma.PresupuestoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePresupuesto>
          }
          groupBy: {
            args: Prisma.PresupuestoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PresupuestoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PresupuestoCountArgs<ExtArgs>
            result: $Utils.Optional<PresupuestoCountAggregateOutputType> | number
          }
        }
      }
      Item: {
        payload: Prisma.$ItemPayload<ExtArgs>
        fields: Prisma.ItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>
          }
          findFirst: {
            args: Prisma.ItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>
          }
          findMany: {
            args: Prisma.ItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>[]
          }
          create: {
            args: Prisma.ItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>
          }
          createMany: {
            args: Prisma.ItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>[]
          }
          delete: {
            args: Prisma.ItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>
          }
          update: {
            args: Prisma.ItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>
          }
          deleteMany: {
            args: Prisma.ItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>[]
          }
          upsert: {
            args: Prisma.ItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>
          }
          aggregate: {
            args: Prisma.ItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateItem>
          }
          groupBy: {
            args: Prisma.ItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<ItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.ItemCountArgs<ExtArgs>
            result: $Utils.Optional<ItemCountAggregateOutputType> | number
          }
        }
      }
      Factura: {
        payload: Prisma.$FacturaPayload<ExtArgs>
        fields: Prisma.FacturaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FacturaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacturaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FacturaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacturaPayload>
          }
          findFirst: {
            args: Prisma.FacturaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacturaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FacturaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacturaPayload>
          }
          findMany: {
            args: Prisma.FacturaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacturaPayload>[]
          }
          create: {
            args: Prisma.FacturaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacturaPayload>
          }
          createMany: {
            args: Prisma.FacturaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FacturaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacturaPayload>[]
          }
          delete: {
            args: Prisma.FacturaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacturaPayload>
          }
          update: {
            args: Prisma.FacturaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacturaPayload>
          }
          deleteMany: {
            args: Prisma.FacturaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FacturaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FacturaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacturaPayload>[]
          }
          upsert: {
            args: Prisma.FacturaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacturaPayload>
          }
          aggregate: {
            args: Prisma.FacturaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFactura>
          }
          groupBy: {
            args: Prisma.FacturaGroupByArgs<ExtArgs>
            result: $Utils.Optional<FacturaGroupByOutputType>[]
          }
          count: {
            args: Prisma.FacturaCountArgs<ExtArgs>
            result: $Utils.Optional<FacturaCountAggregateOutputType> | number
          }
        }
      }
      Recibo: {
        payload: Prisma.$ReciboPayload<ExtArgs>
        fields: Prisma.ReciboFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReciboFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReciboPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReciboFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReciboPayload>
          }
          findFirst: {
            args: Prisma.ReciboFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReciboPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReciboFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReciboPayload>
          }
          findMany: {
            args: Prisma.ReciboFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReciboPayload>[]
          }
          create: {
            args: Prisma.ReciboCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReciboPayload>
          }
          createMany: {
            args: Prisma.ReciboCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReciboCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReciboPayload>[]
          }
          delete: {
            args: Prisma.ReciboDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReciboPayload>
          }
          update: {
            args: Prisma.ReciboUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReciboPayload>
          }
          deleteMany: {
            args: Prisma.ReciboDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReciboUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReciboUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReciboPayload>[]
          }
          upsert: {
            args: Prisma.ReciboUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReciboPayload>
          }
          aggregate: {
            args: Prisma.ReciboAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRecibo>
          }
          groupBy: {
            args: Prisma.ReciboGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReciboGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReciboCountArgs<ExtArgs>
            result: $Utils.Optional<ReciboCountAggregateOutputType> | number
          }
        }
      }
      Impuesto: {
        payload: Prisma.$ImpuestoPayload<ExtArgs>
        fields: Prisma.ImpuestoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ImpuestoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImpuestoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ImpuestoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImpuestoPayload>
          }
          findFirst: {
            args: Prisma.ImpuestoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImpuestoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ImpuestoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImpuestoPayload>
          }
          findMany: {
            args: Prisma.ImpuestoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImpuestoPayload>[]
          }
          create: {
            args: Prisma.ImpuestoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImpuestoPayload>
          }
          createMany: {
            args: Prisma.ImpuestoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ImpuestoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImpuestoPayload>[]
          }
          delete: {
            args: Prisma.ImpuestoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImpuestoPayload>
          }
          update: {
            args: Prisma.ImpuestoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImpuestoPayload>
          }
          deleteMany: {
            args: Prisma.ImpuestoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ImpuestoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ImpuestoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImpuestoPayload>[]
          }
          upsert: {
            args: Prisma.ImpuestoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImpuestoPayload>
          }
          aggregate: {
            args: Prisma.ImpuestoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateImpuesto>
          }
          groupBy: {
            args: Prisma.ImpuestoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ImpuestoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ImpuestoCountArgs<ExtArgs>
            result: $Utils.Optional<ImpuestoCountAggregateOutputType> | number
          }
        }
      }
      PresupuestoImpuesto: {
        payload: Prisma.$PresupuestoImpuestoPayload<ExtArgs>
        fields: Prisma.PresupuestoImpuestoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PresupuestoImpuestoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoImpuestoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PresupuestoImpuestoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoImpuestoPayload>
          }
          findFirst: {
            args: Prisma.PresupuestoImpuestoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoImpuestoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PresupuestoImpuestoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoImpuestoPayload>
          }
          findMany: {
            args: Prisma.PresupuestoImpuestoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoImpuestoPayload>[]
          }
          create: {
            args: Prisma.PresupuestoImpuestoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoImpuestoPayload>
          }
          createMany: {
            args: Prisma.PresupuestoImpuestoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PresupuestoImpuestoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoImpuestoPayload>[]
          }
          delete: {
            args: Prisma.PresupuestoImpuestoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoImpuestoPayload>
          }
          update: {
            args: Prisma.PresupuestoImpuestoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoImpuestoPayload>
          }
          deleteMany: {
            args: Prisma.PresupuestoImpuestoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PresupuestoImpuestoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PresupuestoImpuestoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoImpuestoPayload>[]
          }
          upsert: {
            args: Prisma.PresupuestoImpuestoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PresupuestoImpuestoPayload>
          }
          aggregate: {
            args: Prisma.PresupuestoImpuestoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePresupuestoImpuesto>
          }
          groupBy: {
            args: Prisma.PresupuestoImpuestoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PresupuestoImpuestoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PresupuestoImpuestoCountArgs<ExtArgs>
            result: $Utils.Optional<PresupuestoImpuestoCountAggregateOutputType> | number
          }
        }
      }
      GastoOperativo: {
        payload: Prisma.$GastoOperativoPayload<ExtArgs>
        fields: Prisma.GastoOperativoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.GastoOperativoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GastoOperativoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.GastoOperativoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GastoOperativoPayload>
          }
          findFirst: {
            args: Prisma.GastoOperativoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GastoOperativoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.GastoOperativoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GastoOperativoPayload>
          }
          findMany: {
            args: Prisma.GastoOperativoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GastoOperativoPayload>[]
          }
          create: {
            args: Prisma.GastoOperativoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GastoOperativoPayload>
          }
          createMany: {
            args: Prisma.GastoOperativoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.GastoOperativoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GastoOperativoPayload>[]
          }
          delete: {
            args: Prisma.GastoOperativoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GastoOperativoPayload>
          }
          update: {
            args: Prisma.GastoOperativoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GastoOperativoPayload>
          }
          deleteMany: {
            args: Prisma.GastoOperativoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.GastoOperativoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.GastoOperativoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GastoOperativoPayload>[]
          }
          upsert: {
            args: Prisma.GastoOperativoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GastoOperativoPayload>
          }
          aggregate: {
            args: Prisma.GastoOperativoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGastoOperativo>
          }
          groupBy: {
            args: Prisma.GastoOperativoGroupByArgs<ExtArgs>
            result: $Utils.Optional<GastoOperativoGroupByOutputType>[]
          }
          count: {
            args: Prisma.GastoOperativoCountArgs<ExtArgs>
            result: $Utils.Optional<GastoOperativoCountAggregateOutputType> | number
          }
        }
      }
      AsignacionGastoProyecto: {
        payload: Prisma.$AsignacionGastoProyectoPayload<ExtArgs>
        fields: Prisma.AsignacionGastoProyectoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AsignacionGastoProyectoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsignacionGastoProyectoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AsignacionGastoProyectoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsignacionGastoProyectoPayload>
          }
          findFirst: {
            args: Prisma.AsignacionGastoProyectoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsignacionGastoProyectoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AsignacionGastoProyectoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsignacionGastoProyectoPayload>
          }
          findMany: {
            args: Prisma.AsignacionGastoProyectoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsignacionGastoProyectoPayload>[]
          }
          create: {
            args: Prisma.AsignacionGastoProyectoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsignacionGastoProyectoPayload>
          }
          createMany: {
            args: Prisma.AsignacionGastoProyectoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AsignacionGastoProyectoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsignacionGastoProyectoPayload>[]
          }
          delete: {
            args: Prisma.AsignacionGastoProyectoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsignacionGastoProyectoPayload>
          }
          update: {
            args: Prisma.AsignacionGastoProyectoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsignacionGastoProyectoPayload>
          }
          deleteMany: {
            args: Prisma.AsignacionGastoProyectoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AsignacionGastoProyectoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AsignacionGastoProyectoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsignacionGastoProyectoPayload>[]
          }
          upsert: {
            args: Prisma.AsignacionGastoProyectoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsignacionGastoProyectoPayload>
          }
          aggregate: {
            args: Prisma.AsignacionGastoProyectoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAsignacionGastoProyecto>
          }
          groupBy: {
            args: Prisma.AsignacionGastoProyectoGroupByArgs<ExtArgs>
            result: $Utils.Optional<AsignacionGastoProyectoGroupByOutputType>[]
          }
          count: {
            args: Prisma.AsignacionGastoProyectoCountArgs<ExtArgs>
            result: $Utils.Optional<AsignacionGastoProyectoCountAggregateOutputType> | number
          }
        }
      }
      HistorialPrecio: {
        payload: Prisma.$HistorialPrecioPayload<ExtArgs>
        fields: Prisma.HistorialPrecioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HistorialPrecioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HistorialPrecioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload>
          }
          findFirst: {
            args: Prisma.HistorialPrecioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HistorialPrecioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload>
          }
          findMany: {
            args: Prisma.HistorialPrecioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload>[]
          }
          create: {
            args: Prisma.HistorialPrecioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload>
          }
          createMany: {
            args: Prisma.HistorialPrecioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HistorialPrecioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload>[]
          }
          delete: {
            args: Prisma.HistorialPrecioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload>
          }
          update: {
            args: Prisma.HistorialPrecioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload>
          }
          deleteMany: {
            args: Prisma.HistorialPrecioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HistorialPrecioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.HistorialPrecioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload>[]
          }
          upsert: {
            args: Prisma.HistorialPrecioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialPrecioPayload>
          }
          aggregate: {
            args: Prisma.HistorialPrecioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHistorialPrecio>
          }
          groupBy: {
            args: Prisma.HistorialPrecioGroupByArgs<ExtArgs>
            result: $Utils.Optional<HistorialPrecioGroupByOutputType>[]
          }
          count: {
            args: Prisma.HistorialPrecioCountArgs<ExtArgs>
            result: $Utils.Optional<HistorialPrecioCountAggregateOutputType> | number
          }
        }
      }
      PagoAdmin: {
        payload: Prisma.$PagoAdminPayload<ExtArgs>
        fields: Prisma.PagoAdminFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PagoAdminFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoAdminPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PagoAdminFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoAdminPayload>
          }
          findFirst: {
            args: Prisma.PagoAdminFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoAdminPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PagoAdminFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoAdminPayload>
          }
          findMany: {
            args: Prisma.PagoAdminFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoAdminPayload>[]
          }
          create: {
            args: Prisma.PagoAdminCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoAdminPayload>
          }
          createMany: {
            args: Prisma.PagoAdminCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PagoAdminCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoAdminPayload>[]
          }
          delete: {
            args: Prisma.PagoAdminDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoAdminPayload>
          }
          update: {
            args: Prisma.PagoAdminUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoAdminPayload>
          }
          deleteMany: {
            args: Prisma.PagoAdminDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PagoAdminUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PagoAdminUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoAdminPayload>[]
          }
          upsert: {
            args: Prisma.PagoAdminUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoAdminPayload>
          }
          aggregate: {
            args: Prisma.PagoAdminAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePagoAdmin>
          }
          groupBy: {
            args: Prisma.PagoAdminGroupByArgs<ExtArgs>
            result: $Utils.Optional<PagoAdminGroupByOutputType>[]
          }
          count: {
            args: Prisma.PagoAdminCountArgs<ExtArgs>
            result: $Utils.Optional<PagoAdminCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    moneda?: MonedaOmit
    cobroCliente?: CobroClienteOmit
    tipoCambio?: TipoCambioOmit
    persona?: PersonaOmit
    empresa?: EmpresaOmit
    producto?: ProductoOmit
    servicio?: ServicioOmit
    presupuesto?: PresupuestoOmit
    item?: ItemOmit
    factura?: FacturaOmit
    recibo?: ReciboOmit
    impuesto?: ImpuestoOmit
    presupuestoImpuesto?: PresupuestoImpuestoOmit
    gastoOperativo?: GastoOperativoOmit
    asignacionGastoProyecto?: AsignacionGastoProyectoOmit
    historialPrecio?: HistorialPrecioOmit
    pagoAdmin?: PagoAdminOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type MonedaCountOutputType
   */

  export type MonedaCountOutputType = {
    facturas: number
    gastosOperativos: number
    historialPrecios: number
    presupuestos: number
    productos: number
    servicios: number
    recibos: number
    pagosAdmin: number
    cobrosCliente: number
    tiposCambio: number
    tiposCambioDestino: number
  }

  export type MonedaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    facturas?: boolean | MonedaCountOutputTypeCountFacturasArgs
    gastosOperativos?: boolean | MonedaCountOutputTypeCountGastosOperativosArgs
    historialPrecios?: boolean | MonedaCountOutputTypeCountHistorialPreciosArgs
    presupuestos?: boolean | MonedaCountOutputTypeCountPresupuestosArgs
    productos?: boolean | MonedaCountOutputTypeCountProductosArgs
    servicios?: boolean | MonedaCountOutputTypeCountServiciosArgs
    recibos?: boolean | MonedaCountOutputTypeCountRecibosArgs
    pagosAdmin?: boolean | MonedaCountOutputTypeCountPagosAdminArgs
    cobrosCliente?: boolean | MonedaCountOutputTypeCountCobrosClienteArgs
    tiposCambio?: boolean | MonedaCountOutputTypeCountTiposCambioArgs
    tiposCambioDestino?: boolean | MonedaCountOutputTypeCountTiposCambioDestinoArgs
  }

  // Custom InputTypes
  /**
   * MonedaCountOutputType without action
   */
  export type MonedaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MonedaCountOutputType
     */
    select?: MonedaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MonedaCountOutputType without action
   */
  export type MonedaCountOutputTypeCountFacturasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FacturaWhereInput
  }

  /**
   * MonedaCountOutputType without action
   */
  export type MonedaCountOutputTypeCountGastosOperativosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GastoOperativoWhereInput
  }

  /**
   * MonedaCountOutputType without action
   */
  export type MonedaCountOutputTypeCountHistorialPreciosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialPrecioWhereInput
  }

  /**
   * MonedaCountOutputType without action
   */
  export type MonedaCountOutputTypeCountPresupuestosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PresupuestoWhereInput
  }

  /**
   * MonedaCountOutputType without action
   */
  export type MonedaCountOutputTypeCountProductosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
  }

  /**
   * MonedaCountOutputType without action
   */
  export type MonedaCountOutputTypeCountServiciosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServicioWhereInput
  }

  /**
   * MonedaCountOutputType without action
   */
  export type MonedaCountOutputTypeCountRecibosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReciboWhereInput
  }

  /**
   * MonedaCountOutputType without action
   */
  export type MonedaCountOutputTypeCountPagosAdminArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagoAdminWhereInput
  }

  /**
   * MonedaCountOutputType without action
   */
  export type MonedaCountOutputTypeCountCobrosClienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CobroClienteWhereInput
  }

  /**
   * MonedaCountOutputType without action
   */
  export type MonedaCountOutputTypeCountTiposCambioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipoCambioWhereInput
  }

  /**
   * MonedaCountOutputType without action
   */
  export type MonedaCountOutputTypeCountTiposCambioDestinoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipoCambioWhereInput
  }


  /**
   * Count Type PersonaCountOutputType
   */

  export type PersonaCountOutputType = {
    gastosComoProveedor: number
    historialPreciosUsuario: number
    presupuestos: number
    productos: number
    recibos: number
    pagosAdmin: number
    servicios: number
    empresas: number
  }

  export type PersonaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    gastosComoProveedor?: boolean | PersonaCountOutputTypeCountGastosComoProveedorArgs
    historialPreciosUsuario?: boolean | PersonaCountOutputTypeCountHistorialPreciosUsuarioArgs
    presupuestos?: boolean | PersonaCountOutputTypeCountPresupuestosArgs
    productos?: boolean | PersonaCountOutputTypeCountProductosArgs
    recibos?: boolean | PersonaCountOutputTypeCountRecibosArgs
    pagosAdmin?: boolean | PersonaCountOutputTypeCountPagosAdminArgs
    servicios?: boolean | PersonaCountOutputTypeCountServiciosArgs
    empresas?: boolean | PersonaCountOutputTypeCountEmpresasArgs
  }

  // Custom InputTypes
  /**
   * PersonaCountOutputType without action
   */
  export type PersonaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PersonaCountOutputType
     */
    select?: PersonaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PersonaCountOutputType without action
   */
  export type PersonaCountOutputTypeCountGastosComoProveedorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GastoOperativoWhereInput
  }

  /**
   * PersonaCountOutputType without action
   */
  export type PersonaCountOutputTypeCountHistorialPreciosUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialPrecioWhereInput
  }

  /**
   * PersonaCountOutputType without action
   */
  export type PersonaCountOutputTypeCountPresupuestosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PresupuestoWhereInput
  }

  /**
   * PersonaCountOutputType without action
   */
  export type PersonaCountOutputTypeCountProductosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
  }

  /**
   * PersonaCountOutputType without action
   */
  export type PersonaCountOutputTypeCountRecibosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReciboWhereInput
  }

  /**
   * PersonaCountOutputType without action
   */
  export type PersonaCountOutputTypeCountPagosAdminArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagoAdminWhereInput
  }

  /**
   * PersonaCountOutputType without action
   */
  export type PersonaCountOutputTypeCountServiciosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServicioWhereInput
  }

  /**
   * PersonaCountOutputType without action
   */
  export type PersonaCountOutputTypeCountEmpresasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmpresaWhereInput
  }


  /**
   * Count Type EmpresaCountOutputType
   */

  export type EmpresaCountOutputType = {
    presupuestos: number
    facturas: number
  }

  export type EmpresaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    presupuestos?: boolean | EmpresaCountOutputTypeCountPresupuestosArgs
    facturas?: boolean | EmpresaCountOutputTypeCountFacturasArgs
  }

  // Custom InputTypes
  /**
   * EmpresaCountOutputType without action
   */
  export type EmpresaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmpresaCountOutputType
     */
    select?: EmpresaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EmpresaCountOutputType without action
   */
  export type EmpresaCountOutputTypeCountPresupuestosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PresupuestoWhereInput
  }

  /**
   * EmpresaCountOutputType without action
   */
  export type EmpresaCountOutputTypeCountFacturasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FacturaWhereInput
  }


  /**
   * Count Type ProductoCountOutputType
   */

  export type ProductoCountOutputType = {
    historialPrecios: number
    items: number
  }

  export type ProductoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    historialPrecios?: boolean | ProductoCountOutputTypeCountHistorialPreciosArgs
    items?: boolean | ProductoCountOutputTypeCountItemsArgs
  }

  // Custom InputTypes
  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoCountOutputType
     */
    select?: ProductoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountHistorialPreciosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialPrecioWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItemWhereInput
  }


  /**
   * Count Type ServicioCountOutputType
   */

  export type ServicioCountOutputType = {
    historialPrecios: number
    items: number
  }

  export type ServicioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    historialPrecios?: boolean | ServicioCountOutputTypeCountHistorialPreciosArgs
    items?: boolean | ServicioCountOutputTypeCountItemsArgs
  }

  // Custom InputTypes
  /**
   * ServicioCountOutputType without action
   */
  export type ServicioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServicioCountOutputType
     */
    select?: ServicioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ServicioCountOutputType without action
   */
  export type ServicioCountOutputTypeCountHistorialPreciosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialPrecioWhereInput
  }

  /**
   * ServicioCountOutputType without action
   */
  export type ServicioCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItemWhereInput
  }


  /**
   * Count Type PresupuestoCountOutputType
   */

  export type PresupuestoCountOutputType = {
    asignacionesGasto: number
    facturas: number
    items: number
    presupuestoImpuestos: number
    recibos: number
    pagosAdmin: number
    cobrosCliente: number
  }

  export type PresupuestoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asignacionesGasto?: boolean | PresupuestoCountOutputTypeCountAsignacionesGastoArgs
    facturas?: boolean | PresupuestoCountOutputTypeCountFacturasArgs
    items?: boolean | PresupuestoCountOutputTypeCountItemsArgs
    presupuestoImpuestos?: boolean | PresupuestoCountOutputTypeCountPresupuestoImpuestosArgs
    recibos?: boolean | PresupuestoCountOutputTypeCountRecibosArgs
    pagosAdmin?: boolean | PresupuestoCountOutputTypeCountPagosAdminArgs
    cobrosCliente?: boolean | PresupuestoCountOutputTypeCountCobrosClienteArgs
  }

  // Custom InputTypes
  /**
   * PresupuestoCountOutputType without action
   */
  export type PresupuestoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PresupuestoCountOutputType
     */
    select?: PresupuestoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PresupuestoCountOutputType without action
   */
  export type PresupuestoCountOutputTypeCountAsignacionesGastoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AsignacionGastoProyectoWhereInput
  }

  /**
   * PresupuestoCountOutputType without action
   */
  export type PresupuestoCountOutputTypeCountFacturasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FacturaWhereInput
  }

  /**
   * PresupuestoCountOutputType without action
   */
  export type PresupuestoCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItemWhereInput
  }

  /**
   * PresupuestoCountOutputType without action
   */
  export type PresupuestoCountOutputTypeCountPresupuestoImpuestosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PresupuestoImpuestoWhereInput
  }

  /**
   * PresupuestoCountOutputType without action
   */
  export type PresupuestoCountOutputTypeCountRecibosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReciboWhereInput
  }

  /**
   * PresupuestoCountOutputType without action
   */
  export type PresupuestoCountOutputTypeCountPagosAdminArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagoAdminWhereInput
  }

  /**
   * PresupuestoCountOutputType without action
   */
  export type PresupuestoCountOutputTypeCountCobrosClienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CobroClienteWhereInput
  }


  /**
   * Count Type ImpuestoCountOutputType
   */

  export type ImpuestoCountOutputType = {
    facturas: number
    presupuestoImpuestos: number
  }

  export type ImpuestoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    facturas?: boolean | ImpuestoCountOutputTypeCountFacturasArgs
    presupuestoImpuestos?: boolean | ImpuestoCountOutputTypeCountPresupuestoImpuestosArgs
  }

  // Custom InputTypes
  /**
   * ImpuestoCountOutputType without action
   */
  export type ImpuestoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImpuestoCountOutputType
     */
    select?: ImpuestoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ImpuestoCountOutputType without action
   */
  export type ImpuestoCountOutputTypeCountFacturasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FacturaWhereInput
  }

  /**
   * ImpuestoCountOutputType without action
   */
  export type ImpuestoCountOutputTypeCountPresupuestoImpuestosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PresupuestoImpuestoWhereInput
  }


  /**
   * Count Type GastoOperativoCountOutputType
   */

  export type GastoOperativoCountOutputType = {
    asignaciones: number
  }

  export type GastoOperativoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asignaciones?: boolean | GastoOperativoCountOutputTypeCountAsignacionesArgs
  }

  // Custom InputTypes
  /**
   * GastoOperativoCountOutputType without action
   */
  export type GastoOperativoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GastoOperativoCountOutputType
     */
    select?: GastoOperativoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * GastoOperativoCountOutputType without action
   */
  export type GastoOperativoCountOutputTypeCountAsignacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AsignacionGastoProyectoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Moneda
   */

  export type AggregateMoneda = {
    _count: MonedaCountAggregateOutputType | null
    _avg: MonedaAvgAggregateOutputType | null
    _sum: MonedaSumAggregateOutputType | null
    _min: MonedaMinAggregateOutputType | null
    _max: MonedaMaxAggregateOutputType | null
  }

  export type MonedaAvgAggregateOutputType = {
    id: number | null
  }

  export type MonedaSumAggregateOutputType = {
    id: number | null
  }

  export type MonedaMinAggregateOutputType = {
    id: number | null
    codigo: $Enums.CodigoMoneda | null
    nombre: string | null
    simbolo: string | null
    activo: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MonedaMaxAggregateOutputType = {
    id: number | null
    codigo: $Enums.CodigoMoneda | null
    nombre: string | null
    simbolo: string | null
    activo: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MonedaCountAggregateOutputType = {
    id: number
    codigo: number
    nombre: number
    simbolo: number
    activo: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type MonedaAvgAggregateInputType = {
    id?: true
  }

  export type MonedaSumAggregateInputType = {
    id?: true
  }

  export type MonedaMinAggregateInputType = {
    id?: true
    codigo?: true
    nombre?: true
    simbolo?: true
    activo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MonedaMaxAggregateInputType = {
    id?: true
    codigo?: true
    nombre?: true
    simbolo?: true
    activo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MonedaCountAggregateInputType = {
    id?: true
    codigo?: true
    nombre?: true
    simbolo?: true
    activo?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type MonedaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Moneda to aggregate.
     */
    where?: MonedaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Monedas to fetch.
     */
    orderBy?: MonedaOrderByWithRelationInput | MonedaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MonedaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Monedas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Monedas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Monedas
    **/
    _count?: true | MonedaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MonedaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MonedaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MonedaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MonedaMaxAggregateInputType
  }

  export type GetMonedaAggregateType<T extends MonedaAggregateArgs> = {
        [P in keyof T & keyof AggregateMoneda]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMoneda[P]>
      : GetScalarType<T[P], AggregateMoneda[P]>
  }




  export type MonedaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MonedaWhereInput
    orderBy?: MonedaOrderByWithAggregationInput | MonedaOrderByWithAggregationInput[]
    by: MonedaScalarFieldEnum[] | MonedaScalarFieldEnum
    having?: MonedaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MonedaCountAggregateInputType | true
    _avg?: MonedaAvgAggregateInputType
    _sum?: MonedaSumAggregateInputType
    _min?: MonedaMinAggregateInputType
    _max?: MonedaMaxAggregateInputType
  }

  export type MonedaGroupByOutputType = {
    id: number
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo: boolean
    createdAt: Date
    updatedAt: Date
    _count: MonedaCountAggregateOutputType | null
    _avg: MonedaAvgAggregateOutputType | null
    _sum: MonedaSumAggregateOutputType | null
    _min: MonedaMinAggregateOutputType | null
    _max: MonedaMaxAggregateOutputType | null
  }

  type GetMonedaGroupByPayload<T extends MonedaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MonedaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MonedaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MonedaGroupByOutputType[P]>
            : GetScalarType<T[P], MonedaGroupByOutputType[P]>
        }
      >
    >


  export type MonedaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    nombre?: boolean
    simbolo?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    facturas?: boolean | Moneda$facturasArgs<ExtArgs>
    gastosOperativos?: boolean | Moneda$gastosOperativosArgs<ExtArgs>
    historialPrecios?: boolean | Moneda$historialPreciosArgs<ExtArgs>
    presupuestos?: boolean | Moneda$presupuestosArgs<ExtArgs>
    productos?: boolean | Moneda$productosArgs<ExtArgs>
    servicios?: boolean | Moneda$serviciosArgs<ExtArgs>
    recibos?: boolean | Moneda$recibosArgs<ExtArgs>
    pagosAdmin?: boolean | Moneda$pagosAdminArgs<ExtArgs>
    cobrosCliente?: boolean | Moneda$cobrosClienteArgs<ExtArgs>
    tiposCambio?: boolean | Moneda$tiposCambioArgs<ExtArgs>
    tiposCambioDestino?: boolean | Moneda$tiposCambioDestinoArgs<ExtArgs>
    _count?: boolean | MonedaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["moneda"]>

  export type MonedaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    nombre?: boolean
    simbolo?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["moneda"]>

  export type MonedaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo?: boolean
    nombre?: boolean
    simbolo?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["moneda"]>

  export type MonedaSelectScalar = {
    id?: boolean
    codigo?: boolean
    nombre?: boolean
    simbolo?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type MonedaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "codigo" | "nombre" | "simbolo" | "activo" | "createdAt" | "updatedAt", ExtArgs["result"]["moneda"]>
  export type MonedaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    facturas?: boolean | Moneda$facturasArgs<ExtArgs>
    gastosOperativos?: boolean | Moneda$gastosOperativosArgs<ExtArgs>
    historialPrecios?: boolean | Moneda$historialPreciosArgs<ExtArgs>
    presupuestos?: boolean | Moneda$presupuestosArgs<ExtArgs>
    productos?: boolean | Moneda$productosArgs<ExtArgs>
    servicios?: boolean | Moneda$serviciosArgs<ExtArgs>
    recibos?: boolean | Moneda$recibosArgs<ExtArgs>
    pagosAdmin?: boolean | Moneda$pagosAdminArgs<ExtArgs>
    cobrosCliente?: boolean | Moneda$cobrosClienteArgs<ExtArgs>
    tiposCambio?: boolean | Moneda$tiposCambioArgs<ExtArgs>
    tiposCambioDestino?: boolean | Moneda$tiposCambioDestinoArgs<ExtArgs>
    _count?: boolean | MonedaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MonedaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type MonedaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $MonedaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Moneda"
    objects: {
      facturas: Prisma.$FacturaPayload<ExtArgs>[]
      gastosOperativos: Prisma.$GastoOperativoPayload<ExtArgs>[]
      historialPrecios: Prisma.$HistorialPrecioPayload<ExtArgs>[]
      presupuestos: Prisma.$PresupuestoPayload<ExtArgs>[]
      productos: Prisma.$ProductoPayload<ExtArgs>[]
      servicios: Prisma.$ServicioPayload<ExtArgs>[]
      recibos: Prisma.$ReciboPayload<ExtArgs>[]
      pagosAdmin: Prisma.$PagoAdminPayload<ExtArgs>[]
      cobrosCliente: Prisma.$CobroClientePayload<ExtArgs>[]
      tiposCambio: Prisma.$TipoCambioPayload<ExtArgs>[]
      tiposCambioDestino: Prisma.$TipoCambioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigo: $Enums.CodigoMoneda
      nombre: string
      simbolo: string
      activo: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["moneda"]>
    composites: {}
  }

  type MonedaGetPayload<S extends boolean | null | undefined | MonedaDefaultArgs> = $Result.GetResult<Prisma.$MonedaPayload, S>

  type MonedaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MonedaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MonedaCountAggregateInputType | true
    }

  export interface MonedaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Moneda'], meta: { name: 'Moneda' } }
    /**
     * Find zero or one Moneda that matches the filter.
     * @param {MonedaFindUniqueArgs} args - Arguments to find a Moneda
     * @example
     * // Get one Moneda
     * const moneda = await prisma.moneda.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MonedaFindUniqueArgs>(args: SelectSubset<T, MonedaFindUniqueArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Moneda that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MonedaFindUniqueOrThrowArgs} args - Arguments to find a Moneda
     * @example
     * // Get one Moneda
     * const moneda = await prisma.moneda.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MonedaFindUniqueOrThrowArgs>(args: SelectSubset<T, MonedaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Moneda that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MonedaFindFirstArgs} args - Arguments to find a Moneda
     * @example
     * // Get one Moneda
     * const moneda = await prisma.moneda.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MonedaFindFirstArgs>(args?: SelectSubset<T, MonedaFindFirstArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Moneda that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MonedaFindFirstOrThrowArgs} args - Arguments to find a Moneda
     * @example
     * // Get one Moneda
     * const moneda = await prisma.moneda.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MonedaFindFirstOrThrowArgs>(args?: SelectSubset<T, MonedaFindFirstOrThrowArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Monedas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MonedaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Monedas
     * const monedas = await prisma.moneda.findMany()
     * 
     * // Get first 10 Monedas
     * const monedas = await prisma.moneda.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const monedaWithIdOnly = await prisma.moneda.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MonedaFindManyArgs>(args?: SelectSubset<T, MonedaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Moneda.
     * @param {MonedaCreateArgs} args - Arguments to create a Moneda.
     * @example
     * // Create one Moneda
     * const Moneda = await prisma.moneda.create({
     *   data: {
     *     // ... data to create a Moneda
     *   }
     * })
     * 
     */
    create<T extends MonedaCreateArgs>(args: SelectSubset<T, MonedaCreateArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Monedas.
     * @param {MonedaCreateManyArgs} args - Arguments to create many Monedas.
     * @example
     * // Create many Monedas
     * const moneda = await prisma.moneda.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MonedaCreateManyArgs>(args?: SelectSubset<T, MonedaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Monedas and returns the data saved in the database.
     * @param {MonedaCreateManyAndReturnArgs} args - Arguments to create many Monedas.
     * @example
     * // Create many Monedas
     * const moneda = await prisma.moneda.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Monedas and only return the `id`
     * const monedaWithIdOnly = await prisma.moneda.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MonedaCreateManyAndReturnArgs>(args?: SelectSubset<T, MonedaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Moneda.
     * @param {MonedaDeleteArgs} args - Arguments to delete one Moneda.
     * @example
     * // Delete one Moneda
     * const Moneda = await prisma.moneda.delete({
     *   where: {
     *     // ... filter to delete one Moneda
     *   }
     * })
     * 
     */
    delete<T extends MonedaDeleteArgs>(args: SelectSubset<T, MonedaDeleteArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Moneda.
     * @param {MonedaUpdateArgs} args - Arguments to update one Moneda.
     * @example
     * // Update one Moneda
     * const moneda = await prisma.moneda.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MonedaUpdateArgs>(args: SelectSubset<T, MonedaUpdateArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Monedas.
     * @param {MonedaDeleteManyArgs} args - Arguments to filter Monedas to delete.
     * @example
     * // Delete a few Monedas
     * const { count } = await prisma.moneda.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MonedaDeleteManyArgs>(args?: SelectSubset<T, MonedaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Monedas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MonedaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Monedas
     * const moneda = await prisma.moneda.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MonedaUpdateManyArgs>(args: SelectSubset<T, MonedaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Monedas and returns the data updated in the database.
     * @param {MonedaUpdateManyAndReturnArgs} args - Arguments to update many Monedas.
     * @example
     * // Update many Monedas
     * const moneda = await prisma.moneda.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Monedas and only return the `id`
     * const monedaWithIdOnly = await prisma.moneda.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MonedaUpdateManyAndReturnArgs>(args: SelectSubset<T, MonedaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Moneda.
     * @param {MonedaUpsertArgs} args - Arguments to update or create a Moneda.
     * @example
     * // Update or create a Moneda
     * const moneda = await prisma.moneda.upsert({
     *   create: {
     *     // ... data to create a Moneda
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Moneda we want to update
     *   }
     * })
     */
    upsert<T extends MonedaUpsertArgs>(args: SelectSubset<T, MonedaUpsertArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Monedas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MonedaCountArgs} args - Arguments to filter Monedas to count.
     * @example
     * // Count the number of Monedas
     * const count = await prisma.moneda.count({
     *   where: {
     *     // ... the filter for the Monedas we want to count
     *   }
     * })
    **/
    count<T extends MonedaCountArgs>(
      args?: Subset<T, MonedaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MonedaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Moneda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MonedaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MonedaAggregateArgs>(args: Subset<T, MonedaAggregateArgs>): Prisma.PrismaPromise<GetMonedaAggregateType<T>>

    /**
     * Group by Moneda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MonedaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MonedaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MonedaGroupByArgs['orderBy'] }
        : { orderBy?: MonedaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MonedaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMonedaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Moneda model
   */
  readonly fields: MonedaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Moneda.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MonedaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    facturas<T extends Moneda$facturasArgs<ExtArgs> = {}>(args?: Subset<T, Moneda$facturasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FacturaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    gastosOperativos<T extends Moneda$gastosOperativosArgs<ExtArgs> = {}>(args?: Subset<T, Moneda$gastosOperativosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GastoOperativoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    historialPrecios<T extends Moneda$historialPreciosArgs<ExtArgs> = {}>(args?: Subset<T, Moneda$historialPreciosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    presupuestos<T extends Moneda$presupuestosArgs<ExtArgs> = {}>(args?: Subset<T, Moneda$presupuestosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productos<T extends Moneda$productosArgs<ExtArgs> = {}>(args?: Subset<T, Moneda$productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    servicios<T extends Moneda$serviciosArgs<ExtArgs> = {}>(args?: Subset<T, Moneda$serviciosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    recibos<T extends Moneda$recibosArgs<ExtArgs> = {}>(args?: Subset<T, Moneda$recibosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReciboPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pagosAdmin<T extends Moneda$pagosAdminArgs<ExtArgs> = {}>(args?: Subset<T, Moneda$pagosAdminArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoAdminPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cobrosCliente<T extends Moneda$cobrosClienteArgs<ExtArgs> = {}>(args?: Subset<T, Moneda$cobrosClienteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CobroClientePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tiposCambio<T extends Moneda$tiposCambioArgs<ExtArgs> = {}>(args?: Subset<T, Moneda$tiposCambioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tiposCambioDestino<T extends Moneda$tiposCambioDestinoArgs<ExtArgs> = {}>(args?: Subset<T, Moneda$tiposCambioDestinoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Moneda model
   */
  interface MonedaFieldRefs {
    readonly id: FieldRef<"Moneda", 'Int'>
    readonly codigo: FieldRef<"Moneda", 'CodigoMoneda'>
    readonly nombre: FieldRef<"Moneda", 'String'>
    readonly simbolo: FieldRef<"Moneda", 'String'>
    readonly activo: FieldRef<"Moneda", 'Boolean'>
    readonly createdAt: FieldRef<"Moneda", 'DateTime'>
    readonly updatedAt: FieldRef<"Moneda", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Moneda findUnique
   */
  export type MonedaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moneda
     */
    select?: MonedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moneda
     */
    omit?: MonedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MonedaInclude<ExtArgs> | null
    /**
     * Filter, which Moneda to fetch.
     */
    where: MonedaWhereUniqueInput
  }

  /**
   * Moneda findUniqueOrThrow
   */
  export type MonedaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moneda
     */
    select?: MonedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moneda
     */
    omit?: MonedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MonedaInclude<ExtArgs> | null
    /**
     * Filter, which Moneda to fetch.
     */
    where: MonedaWhereUniqueInput
  }

  /**
   * Moneda findFirst
   */
  export type MonedaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moneda
     */
    select?: MonedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moneda
     */
    omit?: MonedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MonedaInclude<ExtArgs> | null
    /**
     * Filter, which Moneda to fetch.
     */
    where?: MonedaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Monedas to fetch.
     */
    orderBy?: MonedaOrderByWithRelationInput | MonedaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Monedas.
     */
    cursor?: MonedaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Monedas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Monedas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Monedas.
     */
    distinct?: MonedaScalarFieldEnum | MonedaScalarFieldEnum[]
  }

  /**
   * Moneda findFirstOrThrow
   */
  export type MonedaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moneda
     */
    select?: MonedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moneda
     */
    omit?: MonedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MonedaInclude<ExtArgs> | null
    /**
     * Filter, which Moneda to fetch.
     */
    where?: MonedaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Monedas to fetch.
     */
    orderBy?: MonedaOrderByWithRelationInput | MonedaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Monedas.
     */
    cursor?: MonedaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Monedas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Monedas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Monedas.
     */
    distinct?: MonedaScalarFieldEnum | MonedaScalarFieldEnum[]
  }

  /**
   * Moneda findMany
   */
  export type MonedaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moneda
     */
    select?: MonedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moneda
     */
    omit?: MonedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MonedaInclude<ExtArgs> | null
    /**
     * Filter, which Monedas to fetch.
     */
    where?: MonedaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Monedas to fetch.
     */
    orderBy?: MonedaOrderByWithRelationInput | MonedaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Monedas.
     */
    cursor?: MonedaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Monedas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Monedas.
     */
    skip?: number
    distinct?: MonedaScalarFieldEnum | MonedaScalarFieldEnum[]
  }

  /**
   * Moneda create
   */
  export type MonedaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moneda
     */
    select?: MonedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moneda
     */
    omit?: MonedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MonedaInclude<ExtArgs> | null
    /**
     * The data needed to create a Moneda.
     */
    data: XOR<MonedaCreateInput, MonedaUncheckedCreateInput>
  }

  /**
   * Moneda createMany
   */
  export type MonedaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Monedas.
     */
    data: MonedaCreateManyInput | MonedaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Moneda createManyAndReturn
   */
  export type MonedaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moneda
     */
    select?: MonedaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Moneda
     */
    omit?: MonedaOmit<ExtArgs> | null
    /**
     * The data used to create many Monedas.
     */
    data: MonedaCreateManyInput | MonedaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Moneda update
   */
  export type MonedaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moneda
     */
    select?: MonedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moneda
     */
    omit?: MonedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MonedaInclude<ExtArgs> | null
    /**
     * The data needed to update a Moneda.
     */
    data: XOR<MonedaUpdateInput, MonedaUncheckedUpdateInput>
    /**
     * Choose, which Moneda to update.
     */
    where: MonedaWhereUniqueInput
  }

  /**
   * Moneda updateMany
   */
  export type MonedaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Monedas.
     */
    data: XOR<MonedaUpdateManyMutationInput, MonedaUncheckedUpdateManyInput>
    /**
     * Filter which Monedas to update
     */
    where?: MonedaWhereInput
    /**
     * Limit how many Monedas to update.
     */
    limit?: number
  }

  /**
   * Moneda updateManyAndReturn
   */
  export type MonedaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moneda
     */
    select?: MonedaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Moneda
     */
    omit?: MonedaOmit<ExtArgs> | null
    /**
     * The data used to update Monedas.
     */
    data: XOR<MonedaUpdateManyMutationInput, MonedaUncheckedUpdateManyInput>
    /**
     * Filter which Monedas to update
     */
    where?: MonedaWhereInput
    /**
     * Limit how many Monedas to update.
     */
    limit?: number
  }

  /**
   * Moneda upsert
   */
  export type MonedaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moneda
     */
    select?: MonedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moneda
     */
    omit?: MonedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MonedaInclude<ExtArgs> | null
    /**
     * The filter to search for the Moneda to update in case it exists.
     */
    where: MonedaWhereUniqueInput
    /**
     * In case the Moneda found by the `where` argument doesn't exist, create a new Moneda with this data.
     */
    create: XOR<MonedaCreateInput, MonedaUncheckedCreateInput>
    /**
     * In case the Moneda was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MonedaUpdateInput, MonedaUncheckedUpdateInput>
  }

  /**
   * Moneda delete
   */
  export type MonedaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moneda
     */
    select?: MonedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moneda
     */
    omit?: MonedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MonedaInclude<ExtArgs> | null
    /**
     * Filter which Moneda to delete.
     */
    where: MonedaWhereUniqueInput
  }

  /**
   * Moneda deleteMany
   */
  export type MonedaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Monedas to delete
     */
    where?: MonedaWhereInput
    /**
     * Limit how many Monedas to delete.
     */
    limit?: number
  }

  /**
   * Moneda.facturas
   */
  export type Moneda$facturasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura
     */
    select?: FacturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura
     */
    omit?: FacturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacturaInclude<ExtArgs> | null
    where?: FacturaWhereInput
    orderBy?: FacturaOrderByWithRelationInput | FacturaOrderByWithRelationInput[]
    cursor?: FacturaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FacturaScalarFieldEnum | FacturaScalarFieldEnum[]
  }

  /**
   * Moneda.gastosOperativos
   */
  export type Moneda$gastosOperativosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GastoOperativo
     */
    select?: GastoOperativoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GastoOperativo
     */
    omit?: GastoOperativoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GastoOperativoInclude<ExtArgs> | null
    where?: GastoOperativoWhereInput
    orderBy?: GastoOperativoOrderByWithRelationInput | GastoOperativoOrderByWithRelationInput[]
    cursor?: GastoOperativoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GastoOperativoScalarFieldEnum | GastoOperativoScalarFieldEnum[]
  }

  /**
   * Moneda.historialPrecios
   */
  export type Moneda$historialPreciosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialPrecio
     */
    omit?: HistorialPrecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    where?: HistorialPrecioWhereInput
    orderBy?: HistorialPrecioOrderByWithRelationInput | HistorialPrecioOrderByWithRelationInput[]
    cursor?: HistorialPrecioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialPrecioScalarFieldEnum | HistorialPrecioScalarFieldEnum[]
  }

  /**
   * Moneda.presupuestos
   */
  export type Moneda$presupuestosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Presupuesto
     */
    select?: PresupuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Presupuesto
     */
    omit?: PresupuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoInclude<ExtArgs> | null
    where?: PresupuestoWhereInput
    orderBy?: PresupuestoOrderByWithRelationInput | PresupuestoOrderByWithRelationInput[]
    cursor?: PresupuestoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PresupuestoScalarFieldEnum | PresupuestoScalarFieldEnum[]
  }

  /**
   * Moneda.productos
   */
  export type Moneda$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    cursor?: ProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Moneda.servicios
   */
  export type Moneda$serviciosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicio
     */
    select?: ServicioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Servicio
     */
    omit?: ServicioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicioInclude<ExtArgs> | null
    where?: ServicioWhereInput
    orderBy?: ServicioOrderByWithRelationInput | ServicioOrderByWithRelationInput[]
    cursor?: ServicioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServicioScalarFieldEnum | ServicioScalarFieldEnum[]
  }

  /**
   * Moneda.recibos
   */
  export type Moneda$recibosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recibo
     */
    select?: ReciboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recibo
     */
    omit?: ReciboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReciboInclude<ExtArgs> | null
    where?: ReciboWhereInput
    orderBy?: ReciboOrderByWithRelationInput | ReciboOrderByWithRelationInput[]
    cursor?: ReciboWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReciboScalarFieldEnum | ReciboScalarFieldEnum[]
  }

  /**
   * Moneda.pagosAdmin
   */
  export type Moneda$pagosAdminArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PagoAdmin
     */
    select?: PagoAdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PagoAdmin
     */
    omit?: PagoAdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoAdminInclude<ExtArgs> | null
    where?: PagoAdminWhereInput
    orderBy?: PagoAdminOrderByWithRelationInput | PagoAdminOrderByWithRelationInput[]
    cursor?: PagoAdminWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PagoAdminScalarFieldEnum | PagoAdminScalarFieldEnum[]
  }

  /**
   * Moneda.cobrosCliente
   */
  export type Moneda$cobrosClienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CobroCliente
     */
    select?: CobroClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CobroCliente
     */
    omit?: CobroClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobroClienteInclude<ExtArgs> | null
    where?: CobroClienteWhereInput
    orderBy?: CobroClienteOrderByWithRelationInput | CobroClienteOrderByWithRelationInput[]
    cursor?: CobroClienteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CobroClienteScalarFieldEnum | CobroClienteScalarFieldEnum[]
  }

  /**
   * Moneda.tiposCambio
   */
  export type Moneda$tiposCambioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoCambio
     */
    omit?: TipoCambioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoCambioInclude<ExtArgs> | null
    where?: TipoCambioWhereInput
    orderBy?: TipoCambioOrderByWithRelationInput | TipoCambioOrderByWithRelationInput[]
    cursor?: TipoCambioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TipoCambioScalarFieldEnum | TipoCambioScalarFieldEnum[]
  }

  /**
   * Moneda.tiposCambioDestino
   */
  export type Moneda$tiposCambioDestinoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoCambio
     */
    omit?: TipoCambioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoCambioInclude<ExtArgs> | null
    where?: TipoCambioWhereInput
    orderBy?: TipoCambioOrderByWithRelationInput | TipoCambioOrderByWithRelationInput[]
    cursor?: TipoCambioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TipoCambioScalarFieldEnum | TipoCambioScalarFieldEnum[]
  }

  /**
   * Moneda without action
   */
  export type MonedaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moneda
     */
    select?: MonedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moneda
     */
    omit?: MonedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MonedaInclude<ExtArgs> | null
  }


  /**
   * Model CobroCliente
   */

  export type AggregateCobroCliente = {
    _count: CobroClienteCountAggregateOutputType | null
    _avg: CobroClienteAvgAggregateOutputType | null
    _sum: CobroClienteSumAggregateOutputType | null
    _min: CobroClienteMinAggregateOutputType | null
    _max: CobroClienteMaxAggregateOutputType | null
  }

  export type CobroClienteAvgAggregateOutputType = {
    id: number | null
    presupuestoId: number | null
    monto: Decimal | null
    monedaId: number | null
  }

  export type CobroClienteSumAggregateOutputType = {
    id: number | null
    presupuestoId: number | null
    monto: Decimal | null
    monedaId: number | null
  }

  export type CobroClienteMinAggregateOutputType = {
    id: number | null
    presupuestoId: number | null
    monto: Decimal | null
    monedaId: number | null
    fecha: Date | null
    metodoPago: string | null
    concepto: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CobroClienteMaxAggregateOutputType = {
    id: number | null
    presupuestoId: number | null
    monto: Decimal | null
    monedaId: number | null
    fecha: Date | null
    metodoPago: string | null
    concepto: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CobroClienteCountAggregateOutputType = {
    id: number
    presupuestoId: number
    monto: number
    monedaId: number
    fecha: number
    metodoPago: number
    concepto: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CobroClienteAvgAggregateInputType = {
    id?: true
    presupuestoId?: true
    monto?: true
    monedaId?: true
  }

  export type CobroClienteSumAggregateInputType = {
    id?: true
    presupuestoId?: true
    monto?: true
    monedaId?: true
  }

  export type CobroClienteMinAggregateInputType = {
    id?: true
    presupuestoId?: true
    monto?: true
    monedaId?: true
    fecha?: true
    metodoPago?: true
    concepto?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CobroClienteMaxAggregateInputType = {
    id?: true
    presupuestoId?: true
    monto?: true
    monedaId?: true
    fecha?: true
    metodoPago?: true
    concepto?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CobroClienteCountAggregateInputType = {
    id?: true
    presupuestoId?: true
    monto?: true
    monedaId?: true
    fecha?: true
    metodoPago?: true
    concepto?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CobroClienteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CobroCliente to aggregate.
     */
    where?: CobroClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CobroClientes to fetch.
     */
    orderBy?: CobroClienteOrderByWithRelationInput | CobroClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CobroClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CobroClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CobroClientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CobroClientes
    **/
    _count?: true | CobroClienteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CobroClienteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CobroClienteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CobroClienteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CobroClienteMaxAggregateInputType
  }

  export type GetCobroClienteAggregateType<T extends CobroClienteAggregateArgs> = {
        [P in keyof T & keyof AggregateCobroCliente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCobroCliente[P]>
      : GetScalarType<T[P], AggregateCobroCliente[P]>
  }




  export type CobroClienteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CobroClienteWhereInput
    orderBy?: CobroClienteOrderByWithAggregationInput | CobroClienteOrderByWithAggregationInput[]
    by: CobroClienteScalarFieldEnum[] | CobroClienteScalarFieldEnum
    having?: CobroClienteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CobroClienteCountAggregateInputType | true
    _avg?: CobroClienteAvgAggregateInputType
    _sum?: CobroClienteSumAggregateInputType
    _min?: CobroClienteMinAggregateInputType
    _max?: CobroClienteMaxAggregateInputType
  }

  export type CobroClienteGroupByOutputType = {
    id: number
    presupuestoId: number
    monto: Decimal
    monedaId: number
    fecha: Date
    metodoPago: string
    concepto: string | null
    createdAt: Date
    updatedAt: Date
    _count: CobroClienteCountAggregateOutputType | null
    _avg: CobroClienteAvgAggregateOutputType | null
    _sum: CobroClienteSumAggregateOutputType | null
    _min: CobroClienteMinAggregateOutputType | null
    _max: CobroClienteMaxAggregateOutputType | null
  }

  type GetCobroClienteGroupByPayload<T extends CobroClienteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CobroClienteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CobroClienteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CobroClienteGroupByOutputType[P]>
            : GetScalarType<T[P], CobroClienteGroupByOutputType[P]>
        }
      >
    >


  export type CobroClienteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    presupuestoId?: boolean
    monto?: boolean
    monedaId?: boolean
    fecha?: boolean
    metodoPago?: boolean
    concepto?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cobroCliente"]>

  export type CobroClienteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    presupuestoId?: boolean
    monto?: boolean
    monedaId?: boolean
    fecha?: boolean
    metodoPago?: boolean
    concepto?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cobroCliente"]>

  export type CobroClienteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    presupuestoId?: boolean
    monto?: boolean
    monedaId?: boolean
    fecha?: boolean
    metodoPago?: boolean
    concepto?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cobroCliente"]>

  export type CobroClienteSelectScalar = {
    id?: boolean
    presupuestoId?: boolean
    monto?: boolean
    monedaId?: boolean
    fecha?: boolean
    metodoPago?: boolean
    concepto?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CobroClienteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "presupuestoId" | "monto" | "monedaId" | "fecha" | "metodoPago" | "concepto" | "createdAt" | "updatedAt", ExtArgs["result"]["cobroCliente"]>
  export type CobroClienteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }
  export type CobroClienteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }
  export type CobroClienteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }

  export type $CobroClientePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CobroCliente"
    objects: {
      presupuesto: Prisma.$PresupuestoPayload<ExtArgs>
      moneda: Prisma.$MonedaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      presupuestoId: number
      monto: Prisma.Decimal
      monedaId: number
      fecha: Date
      metodoPago: string
      concepto: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["cobroCliente"]>
    composites: {}
  }

  type CobroClienteGetPayload<S extends boolean | null | undefined | CobroClienteDefaultArgs> = $Result.GetResult<Prisma.$CobroClientePayload, S>

  type CobroClienteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CobroClienteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CobroClienteCountAggregateInputType | true
    }

  export interface CobroClienteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CobroCliente'], meta: { name: 'CobroCliente' } }
    /**
     * Find zero or one CobroCliente that matches the filter.
     * @param {CobroClienteFindUniqueArgs} args - Arguments to find a CobroCliente
     * @example
     * // Get one CobroCliente
     * const cobroCliente = await prisma.cobroCliente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CobroClienteFindUniqueArgs>(args: SelectSubset<T, CobroClienteFindUniqueArgs<ExtArgs>>): Prisma__CobroClienteClient<$Result.GetResult<Prisma.$CobroClientePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CobroCliente that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CobroClienteFindUniqueOrThrowArgs} args - Arguments to find a CobroCliente
     * @example
     * // Get one CobroCliente
     * const cobroCliente = await prisma.cobroCliente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CobroClienteFindUniqueOrThrowArgs>(args: SelectSubset<T, CobroClienteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CobroClienteClient<$Result.GetResult<Prisma.$CobroClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CobroCliente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CobroClienteFindFirstArgs} args - Arguments to find a CobroCliente
     * @example
     * // Get one CobroCliente
     * const cobroCliente = await prisma.cobroCliente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CobroClienteFindFirstArgs>(args?: SelectSubset<T, CobroClienteFindFirstArgs<ExtArgs>>): Prisma__CobroClienteClient<$Result.GetResult<Prisma.$CobroClientePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CobroCliente that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CobroClienteFindFirstOrThrowArgs} args - Arguments to find a CobroCliente
     * @example
     * // Get one CobroCliente
     * const cobroCliente = await prisma.cobroCliente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CobroClienteFindFirstOrThrowArgs>(args?: SelectSubset<T, CobroClienteFindFirstOrThrowArgs<ExtArgs>>): Prisma__CobroClienteClient<$Result.GetResult<Prisma.$CobroClientePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CobroClientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CobroClienteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CobroClientes
     * const cobroClientes = await prisma.cobroCliente.findMany()
     * 
     * // Get first 10 CobroClientes
     * const cobroClientes = await prisma.cobroCliente.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cobroClienteWithIdOnly = await prisma.cobroCliente.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CobroClienteFindManyArgs>(args?: SelectSubset<T, CobroClienteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CobroClientePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CobroCliente.
     * @param {CobroClienteCreateArgs} args - Arguments to create a CobroCliente.
     * @example
     * // Create one CobroCliente
     * const CobroCliente = await prisma.cobroCliente.create({
     *   data: {
     *     // ... data to create a CobroCliente
     *   }
     * })
     * 
     */
    create<T extends CobroClienteCreateArgs>(args: SelectSubset<T, CobroClienteCreateArgs<ExtArgs>>): Prisma__CobroClienteClient<$Result.GetResult<Prisma.$CobroClientePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CobroClientes.
     * @param {CobroClienteCreateManyArgs} args - Arguments to create many CobroClientes.
     * @example
     * // Create many CobroClientes
     * const cobroCliente = await prisma.cobroCliente.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CobroClienteCreateManyArgs>(args?: SelectSubset<T, CobroClienteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CobroClientes and returns the data saved in the database.
     * @param {CobroClienteCreateManyAndReturnArgs} args - Arguments to create many CobroClientes.
     * @example
     * // Create many CobroClientes
     * const cobroCliente = await prisma.cobroCliente.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CobroClientes and only return the `id`
     * const cobroClienteWithIdOnly = await prisma.cobroCliente.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CobroClienteCreateManyAndReturnArgs>(args?: SelectSubset<T, CobroClienteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CobroClientePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CobroCliente.
     * @param {CobroClienteDeleteArgs} args - Arguments to delete one CobroCliente.
     * @example
     * // Delete one CobroCliente
     * const CobroCliente = await prisma.cobroCliente.delete({
     *   where: {
     *     // ... filter to delete one CobroCliente
     *   }
     * })
     * 
     */
    delete<T extends CobroClienteDeleteArgs>(args: SelectSubset<T, CobroClienteDeleteArgs<ExtArgs>>): Prisma__CobroClienteClient<$Result.GetResult<Prisma.$CobroClientePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CobroCliente.
     * @param {CobroClienteUpdateArgs} args - Arguments to update one CobroCliente.
     * @example
     * // Update one CobroCliente
     * const cobroCliente = await prisma.cobroCliente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CobroClienteUpdateArgs>(args: SelectSubset<T, CobroClienteUpdateArgs<ExtArgs>>): Prisma__CobroClienteClient<$Result.GetResult<Prisma.$CobroClientePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CobroClientes.
     * @param {CobroClienteDeleteManyArgs} args - Arguments to filter CobroClientes to delete.
     * @example
     * // Delete a few CobroClientes
     * const { count } = await prisma.cobroCliente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CobroClienteDeleteManyArgs>(args?: SelectSubset<T, CobroClienteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CobroClientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CobroClienteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CobroClientes
     * const cobroCliente = await prisma.cobroCliente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CobroClienteUpdateManyArgs>(args: SelectSubset<T, CobroClienteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CobroClientes and returns the data updated in the database.
     * @param {CobroClienteUpdateManyAndReturnArgs} args - Arguments to update many CobroClientes.
     * @example
     * // Update many CobroClientes
     * const cobroCliente = await prisma.cobroCliente.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CobroClientes and only return the `id`
     * const cobroClienteWithIdOnly = await prisma.cobroCliente.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CobroClienteUpdateManyAndReturnArgs>(args: SelectSubset<T, CobroClienteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CobroClientePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CobroCliente.
     * @param {CobroClienteUpsertArgs} args - Arguments to update or create a CobroCliente.
     * @example
     * // Update or create a CobroCliente
     * const cobroCliente = await prisma.cobroCliente.upsert({
     *   create: {
     *     // ... data to create a CobroCliente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CobroCliente we want to update
     *   }
     * })
     */
    upsert<T extends CobroClienteUpsertArgs>(args: SelectSubset<T, CobroClienteUpsertArgs<ExtArgs>>): Prisma__CobroClienteClient<$Result.GetResult<Prisma.$CobroClientePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CobroClientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CobroClienteCountArgs} args - Arguments to filter CobroClientes to count.
     * @example
     * // Count the number of CobroClientes
     * const count = await prisma.cobroCliente.count({
     *   where: {
     *     // ... the filter for the CobroClientes we want to count
     *   }
     * })
    **/
    count<T extends CobroClienteCountArgs>(
      args?: Subset<T, CobroClienteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CobroClienteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CobroCliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CobroClienteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CobroClienteAggregateArgs>(args: Subset<T, CobroClienteAggregateArgs>): Prisma.PrismaPromise<GetCobroClienteAggregateType<T>>

    /**
     * Group by CobroCliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CobroClienteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CobroClienteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CobroClienteGroupByArgs['orderBy'] }
        : { orderBy?: CobroClienteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CobroClienteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCobroClienteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CobroCliente model
   */
  readonly fields: CobroClienteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CobroCliente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CobroClienteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    presupuesto<T extends PresupuestoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PresupuestoDefaultArgs<ExtArgs>>): Prisma__PresupuestoClient<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    moneda<T extends MonedaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MonedaDefaultArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CobroCliente model
   */
  interface CobroClienteFieldRefs {
    readonly id: FieldRef<"CobroCliente", 'Int'>
    readonly presupuestoId: FieldRef<"CobroCliente", 'Int'>
    readonly monto: FieldRef<"CobroCliente", 'Decimal'>
    readonly monedaId: FieldRef<"CobroCliente", 'Int'>
    readonly fecha: FieldRef<"CobroCliente", 'DateTime'>
    readonly metodoPago: FieldRef<"CobroCliente", 'String'>
    readonly concepto: FieldRef<"CobroCliente", 'String'>
    readonly createdAt: FieldRef<"CobroCliente", 'DateTime'>
    readonly updatedAt: FieldRef<"CobroCliente", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CobroCliente findUnique
   */
  export type CobroClienteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CobroCliente
     */
    select?: CobroClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CobroCliente
     */
    omit?: CobroClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobroClienteInclude<ExtArgs> | null
    /**
     * Filter, which CobroCliente to fetch.
     */
    where: CobroClienteWhereUniqueInput
  }

  /**
   * CobroCliente findUniqueOrThrow
   */
  export type CobroClienteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CobroCliente
     */
    select?: CobroClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CobroCliente
     */
    omit?: CobroClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobroClienteInclude<ExtArgs> | null
    /**
     * Filter, which CobroCliente to fetch.
     */
    where: CobroClienteWhereUniqueInput
  }

  /**
   * CobroCliente findFirst
   */
  export type CobroClienteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CobroCliente
     */
    select?: CobroClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CobroCliente
     */
    omit?: CobroClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobroClienteInclude<ExtArgs> | null
    /**
     * Filter, which CobroCliente to fetch.
     */
    where?: CobroClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CobroClientes to fetch.
     */
    orderBy?: CobroClienteOrderByWithRelationInput | CobroClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CobroClientes.
     */
    cursor?: CobroClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CobroClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CobroClientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CobroClientes.
     */
    distinct?: CobroClienteScalarFieldEnum | CobroClienteScalarFieldEnum[]
  }

  /**
   * CobroCliente findFirstOrThrow
   */
  export type CobroClienteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CobroCliente
     */
    select?: CobroClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CobroCliente
     */
    omit?: CobroClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobroClienteInclude<ExtArgs> | null
    /**
     * Filter, which CobroCliente to fetch.
     */
    where?: CobroClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CobroClientes to fetch.
     */
    orderBy?: CobroClienteOrderByWithRelationInput | CobroClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CobroClientes.
     */
    cursor?: CobroClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CobroClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CobroClientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CobroClientes.
     */
    distinct?: CobroClienteScalarFieldEnum | CobroClienteScalarFieldEnum[]
  }

  /**
   * CobroCliente findMany
   */
  export type CobroClienteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CobroCliente
     */
    select?: CobroClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CobroCliente
     */
    omit?: CobroClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobroClienteInclude<ExtArgs> | null
    /**
     * Filter, which CobroClientes to fetch.
     */
    where?: CobroClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CobroClientes to fetch.
     */
    orderBy?: CobroClienteOrderByWithRelationInput | CobroClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CobroClientes.
     */
    cursor?: CobroClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CobroClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CobroClientes.
     */
    skip?: number
    distinct?: CobroClienteScalarFieldEnum | CobroClienteScalarFieldEnum[]
  }

  /**
   * CobroCliente create
   */
  export type CobroClienteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CobroCliente
     */
    select?: CobroClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CobroCliente
     */
    omit?: CobroClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobroClienteInclude<ExtArgs> | null
    /**
     * The data needed to create a CobroCliente.
     */
    data: XOR<CobroClienteCreateInput, CobroClienteUncheckedCreateInput>
  }

  /**
   * CobroCliente createMany
   */
  export type CobroClienteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CobroClientes.
     */
    data: CobroClienteCreateManyInput | CobroClienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CobroCliente createManyAndReturn
   */
  export type CobroClienteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CobroCliente
     */
    select?: CobroClienteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CobroCliente
     */
    omit?: CobroClienteOmit<ExtArgs> | null
    /**
     * The data used to create many CobroClientes.
     */
    data: CobroClienteCreateManyInput | CobroClienteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobroClienteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CobroCliente update
   */
  export type CobroClienteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CobroCliente
     */
    select?: CobroClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CobroCliente
     */
    omit?: CobroClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobroClienteInclude<ExtArgs> | null
    /**
     * The data needed to update a CobroCliente.
     */
    data: XOR<CobroClienteUpdateInput, CobroClienteUncheckedUpdateInput>
    /**
     * Choose, which CobroCliente to update.
     */
    where: CobroClienteWhereUniqueInput
  }

  /**
   * CobroCliente updateMany
   */
  export type CobroClienteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CobroClientes.
     */
    data: XOR<CobroClienteUpdateManyMutationInput, CobroClienteUncheckedUpdateManyInput>
    /**
     * Filter which CobroClientes to update
     */
    where?: CobroClienteWhereInput
    /**
     * Limit how many CobroClientes to update.
     */
    limit?: number
  }

  /**
   * CobroCliente updateManyAndReturn
   */
  export type CobroClienteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CobroCliente
     */
    select?: CobroClienteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CobroCliente
     */
    omit?: CobroClienteOmit<ExtArgs> | null
    /**
     * The data used to update CobroClientes.
     */
    data: XOR<CobroClienteUpdateManyMutationInput, CobroClienteUncheckedUpdateManyInput>
    /**
     * Filter which CobroClientes to update
     */
    where?: CobroClienteWhereInput
    /**
     * Limit how many CobroClientes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobroClienteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CobroCliente upsert
   */
  export type CobroClienteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CobroCliente
     */
    select?: CobroClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CobroCliente
     */
    omit?: CobroClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobroClienteInclude<ExtArgs> | null
    /**
     * The filter to search for the CobroCliente to update in case it exists.
     */
    where: CobroClienteWhereUniqueInput
    /**
     * In case the CobroCliente found by the `where` argument doesn't exist, create a new CobroCliente with this data.
     */
    create: XOR<CobroClienteCreateInput, CobroClienteUncheckedCreateInput>
    /**
     * In case the CobroCliente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CobroClienteUpdateInput, CobroClienteUncheckedUpdateInput>
  }

  /**
   * CobroCliente delete
   */
  export type CobroClienteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CobroCliente
     */
    select?: CobroClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CobroCliente
     */
    omit?: CobroClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobroClienteInclude<ExtArgs> | null
    /**
     * Filter which CobroCliente to delete.
     */
    where: CobroClienteWhereUniqueInput
  }

  /**
   * CobroCliente deleteMany
   */
  export type CobroClienteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CobroClientes to delete
     */
    where?: CobroClienteWhereInput
    /**
     * Limit how many CobroClientes to delete.
     */
    limit?: number
  }

  /**
   * CobroCliente without action
   */
  export type CobroClienteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CobroCliente
     */
    select?: CobroClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CobroCliente
     */
    omit?: CobroClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobroClienteInclude<ExtArgs> | null
  }


  /**
   * Model TipoCambio
   */

  export type AggregateTipoCambio = {
    _count: TipoCambioCountAggregateOutputType | null
    _avg: TipoCambioAvgAggregateOutputType | null
    _sum: TipoCambioSumAggregateOutputType | null
    _min: TipoCambioMinAggregateOutputType | null
    _max: TipoCambioMaxAggregateOutputType | null
  }

  export type TipoCambioAvgAggregateOutputType = {
    id: number | null
    monedaDesdeId: number | null
    monedaHaciaId: number | null
    valor: Decimal | null
  }

  export type TipoCambioSumAggregateOutputType = {
    id: number | null
    monedaDesdeId: number | null
    monedaHaciaId: number | null
    valor: Decimal | null
  }

  export type TipoCambioMinAggregateOutputType = {
    id: number | null
    monedaDesdeId: number | null
    monedaHaciaId: number | null
    valor: Decimal | null
    fecha: Date | null
    tipo: $Enums.TipoCotizacion | null
    fuente: string | null
    createdAt: Date | null
  }

  export type TipoCambioMaxAggregateOutputType = {
    id: number | null
    monedaDesdeId: number | null
    monedaHaciaId: number | null
    valor: Decimal | null
    fecha: Date | null
    tipo: $Enums.TipoCotizacion | null
    fuente: string | null
    createdAt: Date | null
  }

  export type TipoCambioCountAggregateOutputType = {
    id: number
    monedaDesdeId: number
    monedaHaciaId: number
    valor: number
    fecha: number
    tipo: number
    fuente: number
    createdAt: number
    _all: number
  }


  export type TipoCambioAvgAggregateInputType = {
    id?: true
    monedaDesdeId?: true
    monedaHaciaId?: true
    valor?: true
  }

  export type TipoCambioSumAggregateInputType = {
    id?: true
    monedaDesdeId?: true
    monedaHaciaId?: true
    valor?: true
  }

  export type TipoCambioMinAggregateInputType = {
    id?: true
    monedaDesdeId?: true
    monedaHaciaId?: true
    valor?: true
    fecha?: true
    tipo?: true
    fuente?: true
    createdAt?: true
  }

  export type TipoCambioMaxAggregateInputType = {
    id?: true
    monedaDesdeId?: true
    monedaHaciaId?: true
    valor?: true
    fecha?: true
    tipo?: true
    fuente?: true
    createdAt?: true
  }

  export type TipoCambioCountAggregateInputType = {
    id?: true
    monedaDesdeId?: true
    monedaHaciaId?: true
    valor?: true
    fecha?: true
    tipo?: true
    fuente?: true
    createdAt?: true
    _all?: true
  }

  export type TipoCambioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoCambio to aggregate.
     */
    where?: TipoCambioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoCambios to fetch.
     */
    orderBy?: TipoCambioOrderByWithRelationInput | TipoCambioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TipoCambioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoCambios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoCambios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TipoCambios
    **/
    _count?: true | TipoCambioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipoCambioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipoCambioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipoCambioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipoCambioMaxAggregateInputType
  }

  export type GetTipoCambioAggregateType<T extends TipoCambioAggregateArgs> = {
        [P in keyof T & keyof AggregateTipoCambio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipoCambio[P]>
      : GetScalarType<T[P], AggregateTipoCambio[P]>
  }




  export type TipoCambioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipoCambioWhereInput
    orderBy?: TipoCambioOrderByWithAggregationInput | TipoCambioOrderByWithAggregationInput[]
    by: TipoCambioScalarFieldEnum[] | TipoCambioScalarFieldEnum
    having?: TipoCambioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipoCambioCountAggregateInputType | true
    _avg?: TipoCambioAvgAggregateInputType
    _sum?: TipoCambioSumAggregateInputType
    _min?: TipoCambioMinAggregateInputType
    _max?: TipoCambioMaxAggregateInputType
  }

  export type TipoCambioGroupByOutputType = {
    id: number
    monedaDesdeId: number
    monedaHaciaId: number
    valor: Decimal
    fecha: Date
    tipo: $Enums.TipoCotizacion
    fuente: string | null
    createdAt: Date
    _count: TipoCambioCountAggregateOutputType | null
    _avg: TipoCambioAvgAggregateOutputType | null
    _sum: TipoCambioSumAggregateOutputType | null
    _min: TipoCambioMinAggregateOutputType | null
    _max: TipoCambioMaxAggregateOutputType | null
  }

  type GetTipoCambioGroupByPayload<T extends TipoCambioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipoCambioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipoCambioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipoCambioGroupByOutputType[P]>
            : GetScalarType<T[P], TipoCambioGroupByOutputType[P]>
        }
      >
    >


  export type TipoCambioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    monedaDesdeId?: boolean
    monedaHaciaId?: boolean
    valor?: boolean
    fecha?: boolean
    tipo?: boolean
    fuente?: boolean
    createdAt?: boolean
    monedaDesde?: boolean | MonedaDefaultArgs<ExtArgs>
    monedaHacia?: boolean | MonedaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipoCambio"]>

  export type TipoCambioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    monedaDesdeId?: boolean
    monedaHaciaId?: boolean
    valor?: boolean
    fecha?: boolean
    tipo?: boolean
    fuente?: boolean
    createdAt?: boolean
    monedaDesde?: boolean | MonedaDefaultArgs<ExtArgs>
    monedaHacia?: boolean | MonedaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipoCambio"]>

  export type TipoCambioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    monedaDesdeId?: boolean
    monedaHaciaId?: boolean
    valor?: boolean
    fecha?: boolean
    tipo?: boolean
    fuente?: boolean
    createdAt?: boolean
    monedaDesde?: boolean | MonedaDefaultArgs<ExtArgs>
    monedaHacia?: boolean | MonedaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipoCambio"]>

  export type TipoCambioSelectScalar = {
    id?: boolean
    monedaDesdeId?: boolean
    monedaHaciaId?: boolean
    valor?: boolean
    fecha?: boolean
    tipo?: boolean
    fuente?: boolean
    createdAt?: boolean
  }

  export type TipoCambioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "monedaDesdeId" | "monedaHaciaId" | "valor" | "fecha" | "tipo" | "fuente" | "createdAt", ExtArgs["result"]["tipoCambio"]>
  export type TipoCambioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    monedaDesde?: boolean | MonedaDefaultArgs<ExtArgs>
    monedaHacia?: boolean | MonedaDefaultArgs<ExtArgs>
  }
  export type TipoCambioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    monedaDesde?: boolean | MonedaDefaultArgs<ExtArgs>
    monedaHacia?: boolean | MonedaDefaultArgs<ExtArgs>
  }
  export type TipoCambioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    monedaDesde?: boolean | MonedaDefaultArgs<ExtArgs>
    monedaHacia?: boolean | MonedaDefaultArgs<ExtArgs>
  }

  export type $TipoCambioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TipoCambio"
    objects: {
      monedaDesde: Prisma.$MonedaPayload<ExtArgs>
      monedaHacia: Prisma.$MonedaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      monedaDesdeId: number
      monedaHaciaId: number
      valor: Prisma.Decimal
      fecha: Date
      tipo: $Enums.TipoCotizacion
      fuente: string | null
      createdAt: Date
    }, ExtArgs["result"]["tipoCambio"]>
    composites: {}
  }

  type TipoCambioGetPayload<S extends boolean | null | undefined | TipoCambioDefaultArgs> = $Result.GetResult<Prisma.$TipoCambioPayload, S>

  type TipoCambioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TipoCambioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TipoCambioCountAggregateInputType | true
    }

  export interface TipoCambioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TipoCambio'], meta: { name: 'TipoCambio' } }
    /**
     * Find zero or one TipoCambio that matches the filter.
     * @param {TipoCambioFindUniqueArgs} args - Arguments to find a TipoCambio
     * @example
     * // Get one TipoCambio
     * const tipoCambio = await prisma.tipoCambio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TipoCambioFindUniqueArgs>(args: SelectSubset<T, TipoCambioFindUniqueArgs<ExtArgs>>): Prisma__TipoCambioClient<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TipoCambio that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TipoCambioFindUniqueOrThrowArgs} args - Arguments to find a TipoCambio
     * @example
     * // Get one TipoCambio
     * const tipoCambio = await prisma.tipoCambio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TipoCambioFindUniqueOrThrowArgs>(args: SelectSubset<T, TipoCambioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TipoCambioClient<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipoCambio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoCambioFindFirstArgs} args - Arguments to find a TipoCambio
     * @example
     * // Get one TipoCambio
     * const tipoCambio = await prisma.tipoCambio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TipoCambioFindFirstArgs>(args?: SelectSubset<T, TipoCambioFindFirstArgs<ExtArgs>>): Prisma__TipoCambioClient<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipoCambio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoCambioFindFirstOrThrowArgs} args - Arguments to find a TipoCambio
     * @example
     * // Get one TipoCambio
     * const tipoCambio = await prisma.tipoCambio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TipoCambioFindFirstOrThrowArgs>(args?: SelectSubset<T, TipoCambioFindFirstOrThrowArgs<ExtArgs>>): Prisma__TipoCambioClient<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TipoCambios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoCambioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TipoCambios
     * const tipoCambios = await prisma.tipoCambio.findMany()
     * 
     * // Get first 10 TipoCambios
     * const tipoCambios = await prisma.tipoCambio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipoCambioWithIdOnly = await prisma.tipoCambio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TipoCambioFindManyArgs>(args?: SelectSubset<T, TipoCambioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TipoCambio.
     * @param {TipoCambioCreateArgs} args - Arguments to create a TipoCambio.
     * @example
     * // Create one TipoCambio
     * const TipoCambio = await prisma.tipoCambio.create({
     *   data: {
     *     // ... data to create a TipoCambio
     *   }
     * })
     * 
     */
    create<T extends TipoCambioCreateArgs>(args: SelectSubset<T, TipoCambioCreateArgs<ExtArgs>>): Prisma__TipoCambioClient<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TipoCambios.
     * @param {TipoCambioCreateManyArgs} args - Arguments to create many TipoCambios.
     * @example
     * // Create many TipoCambios
     * const tipoCambio = await prisma.tipoCambio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TipoCambioCreateManyArgs>(args?: SelectSubset<T, TipoCambioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TipoCambios and returns the data saved in the database.
     * @param {TipoCambioCreateManyAndReturnArgs} args - Arguments to create many TipoCambios.
     * @example
     * // Create many TipoCambios
     * const tipoCambio = await prisma.tipoCambio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TipoCambios and only return the `id`
     * const tipoCambioWithIdOnly = await prisma.tipoCambio.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TipoCambioCreateManyAndReturnArgs>(args?: SelectSubset<T, TipoCambioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a TipoCambio.
     * @param {TipoCambioDeleteArgs} args - Arguments to delete one TipoCambio.
     * @example
     * // Delete one TipoCambio
     * const TipoCambio = await prisma.tipoCambio.delete({
     *   where: {
     *     // ... filter to delete one TipoCambio
     *   }
     * })
     * 
     */
    delete<T extends TipoCambioDeleteArgs>(args: SelectSubset<T, TipoCambioDeleteArgs<ExtArgs>>): Prisma__TipoCambioClient<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TipoCambio.
     * @param {TipoCambioUpdateArgs} args - Arguments to update one TipoCambio.
     * @example
     * // Update one TipoCambio
     * const tipoCambio = await prisma.tipoCambio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TipoCambioUpdateArgs>(args: SelectSubset<T, TipoCambioUpdateArgs<ExtArgs>>): Prisma__TipoCambioClient<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TipoCambios.
     * @param {TipoCambioDeleteManyArgs} args - Arguments to filter TipoCambios to delete.
     * @example
     * // Delete a few TipoCambios
     * const { count } = await prisma.tipoCambio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TipoCambioDeleteManyArgs>(args?: SelectSubset<T, TipoCambioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TipoCambios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoCambioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TipoCambios
     * const tipoCambio = await prisma.tipoCambio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TipoCambioUpdateManyArgs>(args: SelectSubset<T, TipoCambioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TipoCambios and returns the data updated in the database.
     * @param {TipoCambioUpdateManyAndReturnArgs} args - Arguments to update many TipoCambios.
     * @example
     * // Update many TipoCambios
     * const tipoCambio = await prisma.tipoCambio.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more TipoCambios and only return the `id`
     * const tipoCambioWithIdOnly = await prisma.tipoCambio.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TipoCambioUpdateManyAndReturnArgs>(args: SelectSubset<T, TipoCambioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one TipoCambio.
     * @param {TipoCambioUpsertArgs} args - Arguments to update or create a TipoCambio.
     * @example
     * // Update or create a TipoCambio
     * const tipoCambio = await prisma.tipoCambio.upsert({
     *   create: {
     *     // ... data to create a TipoCambio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TipoCambio we want to update
     *   }
     * })
     */
    upsert<T extends TipoCambioUpsertArgs>(args: SelectSubset<T, TipoCambioUpsertArgs<ExtArgs>>): Prisma__TipoCambioClient<$Result.GetResult<Prisma.$TipoCambioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TipoCambios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoCambioCountArgs} args - Arguments to filter TipoCambios to count.
     * @example
     * // Count the number of TipoCambios
     * const count = await prisma.tipoCambio.count({
     *   where: {
     *     // ... the filter for the TipoCambios we want to count
     *   }
     * })
    **/
    count<T extends TipoCambioCountArgs>(
      args?: Subset<T, TipoCambioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipoCambioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TipoCambio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoCambioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipoCambioAggregateArgs>(args: Subset<T, TipoCambioAggregateArgs>): Prisma.PrismaPromise<GetTipoCambioAggregateType<T>>

    /**
     * Group by TipoCambio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoCambioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipoCambioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipoCambioGroupByArgs['orderBy'] }
        : { orderBy?: TipoCambioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipoCambioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipoCambioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TipoCambio model
   */
  readonly fields: TipoCambioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TipoCambio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TipoCambioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    monedaDesde<T extends MonedaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MonedaDefaultArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    monedaHacia<T extends MonedaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MonedaDefaultArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TipoCambio model
   */
  interface TipoCambioFieldRefs {
    readonly id: FieldRef<"TipoCambio", 'Int'>
    readonly monedaDesdeId: FieldRef<"TipoCambio", 'Int'>
    readonly monedaHaciaId: FieldRef<"TipoCambio", 'Int'>
    readonly valor: FieldRef<"TipoCambio", 'Decimal'>
    readonly fecha: FieldRef<"TipoCambio", 'DateTime'>
    readonly tipo: FieldRef<"TipoCambio", 'TipoCotizacion'>
    readonly fuente: FieldRef<"TipoCambio", 'String'>
    readonly createdAt: FieldRef<"TipoCambio", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TipoCambio findUnique
   */
  export type TipoCambioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoCambio
     */
    omit?: TipoCambioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoCambioInclude<ExtArgs> | null
    /**
     * Filter, which TipoCambio to fetch.
     */
    where: TipoCambioWhereUniqueInput
  }

  /**
   * TipoCambio findUniqueOrThrow
   */
  export type TipoCambioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoCambio
     */
    omit?: TipoCambioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoCambioInclude<ExtArgs> | null
    /**
     * Filter, which TipoCambio to fetch.
     */
    where: TipoCambioWhereUniqueInput
  }

  /**
   * TipoCambio findFirst
   */
  export type TipoCambioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoCambio
     */
    omit?: TipoCambioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoCambioInclude<ExtArgs> | null
    /**
     * Filter, which TipoCambio to fetch.
     */
    where?: TipoCambioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoCambios to fetch.
     */
    orderBy?: TipoCambioOrderByWithRelationInput | TipoCambioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoCambios.
     */
    cursor?: TipoCambioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoCambios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoCambios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoCambios.
     */
    distinct?: TipoCambioScalarFieldEnum | TipoCambioScalarFieldEnum[]
  }

  /**
   * TipoCambio findFirstOrThrow
   */
  export type TipoCambioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoCambio
     */
    omit?: TipoCambioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoCambioInclude<ExtArgs> | null
    /**
     * Filter, which TipoCambio to fetch.
     */
    where?: TipoCambioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoCambios to fetch.
     */
    orderBy?: TipoCambioOrderByWithRelationInput | TipoCambioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoCambios.
     */
    cursor?: TipoCambioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoCambios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoCambios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoCambios.
     */
    distinct?: TipoCambioScalarFieldEnum | TipoCambioScalarFieldEnum[]
  }

  /**
   * TipoCambio findMany
   */
  export type TipoCambioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoCambio
     */
    omit?: TipoCambioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoCambioInclude<ExtArgs> | null
    /**
     * Filter, which TipoCambios to fetch.
     */
    where?: TipoCambioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoCambios to fetch.
     */
    orderBy?: TipoCambioOrderByWithRelationInput | TipoCambioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TipoCambios.
     */
    cursor?: TipoCambioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoCambios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoCambios.
     */
    skip?: number
    distinct?: TipoCambioScalarFieldEnum | TipoCambioScalarFieldEnum[]
  }

  /**
   * TipoCambio create
   */
  export type TipoCambioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoCambio
     */
    omit?: TipoCambioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoCambioInclude<ExtArgs> | null
    /**
     * The data needed to create a TipoCambio.
     */
    data: XOR<TipoCambioCreateInput, TipoCambioUncheckedCreateInput>
  }

  /**
   * TipoCambio createMany
   */
  export type TipoCambioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TipoCambios.
     */
    data: TipoCambioCreateManyInput | TipoCambioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TipoCambio createManyAndReturn
   */
  export type TipoCambioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TipoCambio
     */
    omit?: TipoCambioOmit<ExtArgs> | null
    /**
     * The data used to create many TipoCambios.
     */
    data: TipoCambioCreateManyInput | TipoCambioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoCambioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TipoCambio update
   */
  export type TipoCambioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoCambio
     */
    omit?: TipoCambioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoCambioInclude<ExtArgs> | null
    /**
     * The data needed to update a TipoCambio.
     */
    data: XOR<TipoCambioUpdateInput, TipoCambioUncheckedUpdateInput>
    /**
     * Choose, which TipoCambio to update.
     */
    where: TipoCambioWhereUniqueInput
  }

  /**
   * TipoCambio updateMany
   */
  export type TipoCambioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TipoCambios.
     */
    data: XOR<TipoCambioUpdateManyMutationInput, TipoCambioUncheckedUpdateManyInput>
    /**
     * Filter which TipoCambios to update
     */
    where?: TipoCambioWhereInput
    /**
     * Limit how many TipoCambios to update.
     */
    limit?: number
  }

  /**
   * TipoCambio updateManyAndReturn
   */
  export type TipoCambioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TipoCambio
     */
    omit?: TipoCambioOmit<ExtArgs> | null
    /**
     * The data used to update TipoCambios.
     */
    data: XOR<TipoCambioUpdateManyMutationInput, TipoCambioUncheckedUpdateManyInput>
    /**
     * Filter which TipoCambios to update
     */
    where?: TipoCambioWhereInput
    /**
     * Limit how many TipoCambios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoCambioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * TipoCambio upsert
   */
  export type TipoCambioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoCambio
     */
    omit?: TipoCambioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoCambioInclude<ExtArgs> | null
    /**
     * The filter to search for the TipoCambio to update in case it exists.
     */
    where: TipoCambioWhereUniqueInput
    /**
     * In case the TipoCambio found by the `where` argument doesn't exist, create a new TipoCambio with this data.
     */
    create: XOR<TipoCambioCreateInput, TipoCambioUncheckedCreateInput>
    /**
     * In case the TipoCambio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TipoCambioUpdateInput, TipoCambioUncheckedUpdateInput>
  }

  /**
   * TipoCambio delete
   */
  export type TipoCambioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoCambio
     */
    omit?: TipoCambioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoCambioInclude<ExtArgs> | null
    /**
     * Filter which TipoCambio to delete.
     */
    where: TipoCambioWhereUniqueInput
  }

  /**
   * TipoCambio deleteMany
   */
  export type TipoCambioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoCambios to delete
     */
    where?: TipoCambioWhereInput
    /**
     * Limit how many TipoCambios to delete.
     */
    limit?: number
  }

  /**
   * TipoCambio without action
   */
  export type TipoCambioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoCambio
     */
    select?: TipoCambioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipoCambio
     */
    omit?: TipoCambioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoCambioInclude<ExtArgs> | null
  }


  /**
   * Model Persona
   */

  export type AggregatePersona = {
    _count: PersonaCountAggregateOutputType | null
    _avg: PersonaAvgAggregateOutputType | null
    _sum: PersonaSumAggregateOutputType | null
    _min: PersonaMinAggregateOutputType | null
    _max: PersonaMaxAggregateOutputType | null
  }

  export type PersonaAvgAggregateOutputType = {
    id: number | null
  }

  export type PersonaSumAggregateOutputType = {
    id: number | null
  }

  export type PersonaMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    tipo: $Enums.TipoPersona | null
    telefono: string | null
    cvu: string | null
    password: string | null
    email: string | null
    createdAt: Date | null
    updatedAt: Date | null
    activo: boolean | null
    esUsuario: boolean | null
  }

  export type PersonaMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    tipo: $Enums.TipoPersona | null
    telefono: string | null
    cvu: string | null
    password: string | null
    email: string | null
    createdAt: Date | null
    updatedAt: Date | null
    activo: boolean | null
    esUsuario: boolean | null
  }

  export type PersonaCountAggregateOutputType = {
    id: number
    nombre: number
    tipo: number
    telefono: number
    cvu: number
    roles: number
    password: number
    email: number
    createdAt: number
    updatedAt: number
    activo: number
    esUsuario: number
    _all: number
  }


  export type PersonaAvgAggregateInputType = {
    id?: true
  }

  export type PersonaSumAggregateInputType = {
    id?: true
  }

  export type PersonaMinAggregateInputType = {
    id?: true
    nombre?: true
    tipo?: true
    telefono?: true
    cvu?: true
    password?: true
    email?: true
    createdAt?: true
    updatedAt?: true
    activo?: true
    esUsuario?: true
  }

  export type PersonaMaxAggregateInputType = {
    id?: true
    nombre?: true
    tipo?: true
    telefono?: true
    cvu?: true
    password?: true
    email?: true
    createdAt?: true
    updatedAt?: true
    activo?: true
    esUsuario?: true
  }

  export type PersonaCountAggregateInputType = {
    id?: true
    nombre?: true
    tipo?: true
    telefono?: true
    cvu?: true
    roles?: true
    password?: true
    email?: true
    createdAt?: true
    updatedAt?: true
    activo?: true
    esUsuario?: true
    _all?: true
  }

  export type PersonaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Persona to aggregate.
     */
    where?: PersonaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Personas to fetch.
     */
    orderBy?: PersonaOrderByWithRelationInput | PersonaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PersonaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Personas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Personas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Personas
    **/
    _count?: true | PersonaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PersonaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PersonaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PersonaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PersonaMaxAggregateInputType
  }

  export type GetPersonaAggregateType<T extends PersonaAggregateArgs> = {
        [P in keyof T & keyof AggregatePersona]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePersona[P]>
      : GetScalarType<T[P], AggregatePersona[P]>
  }




  export type PersonaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PersonaWhereInput
    orderBy?: PersonaOrderByWithAggregationInput | PersonaOrderByWithAggregationInput[]
    by: PersonaScalarFieldEnum[] | PersonaScalarFieldEnum
    having?: PersonaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PersonaCountAggregateInputType | true
    _avg?: PersonaAvgAggregateInputType
    _sum?: PersonaSumAggregateInputType
    _min?: PersonaMinAggregateInputType
    _max?: PersonaMaxAggregateInputType
  }

  export type PersonaGroupByOutputType = {
    id: number
    nombre: string
    tipo: $Enums.TipoPersona
    telefono: string | null
    cvu: string | null
    roles: $Enums.RolUsuario[]
    password: string | null
    email: string
    createdAt: Date
    updatedAt: Date
    activo: boolean
    esUsuario: boolean
    _count: PersonaCountAggregateOutputType | null
    _avg: PersonaAvgAggregateOutputType | null
    _sum: PersonaSumAggregateOutputType | null
    _min: PersonaMinAggregateOutputType | null
    _max: PersonaMaxAggregateOutputType | null
  }

  type GetPersonaGroupByPayload<T extends PersonaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PersonaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PersonaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PersonaGroupByOutputType[P]>
            : GetScalarType<T[P], PersonaGroupByOutputType[P]>
        }
      >
    >


  export type PersonaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tipo?: boolean
    telefono?: boolean
    cvu?: boolean
    roles?: boolean
    password?: boolean
    email?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    activo?: boolean
    esUsuario?: boolean
    gastosComoProveedor?: boolean | Persona$gastosComoProveedorArgs<ExtArgs>
    historialPreciosUsuario?: boolean | Persona$historialPreciosUsuarioArgs<ExtArgs>
    presupuestos?: boolean | Persona$presupuestosArgs<ExtArgs>
    productos?: boolean | Persona$productosArgs<ExtArgs>
    recibos?: boolean | Persona$recibosArgs<ExtArgs>
    pagosAdmin?: boolean | Persona$pagosAdminArgs<ExtArgs>
    servicios?: boolean | Persona$serviciosArgs<ExtArgs>
    empresas?: boolean | Persona$empresasArgs<ExtArgs>
    _count?: boolean | PersonaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["persona"]>

  export type PersonaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tipo?: boolean
    telefono?: boolean
    cvu?: boolean
    roles?: boolean
    password?: boolean
    email?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    activo?: boolean
    esUsuario?: boolean
  }, ExtArgs["result"]["persona"]>

  export type PersonaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tipo?: boolean
    telefono?: boolean
    cvu?: boolean
    roles?: boolean
    password?: boolean
    email?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    activo?: boolean
    esUsuario?: boolean
  }, ExtArgs["result"]["persona"]>

  export type PersonaSelectScalar = {
    id?: boolean
    nombre?: boolean
    tipo?: boolean
    telefono?: boolean
    cvu?: boolean
    roles?: boolean
    password?: boolean
    email?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    activo?: boolean
    esUsuario?: boolean
  }

  export type PersonaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "tipo" | "telefono" | "cvu" | "roles" | "password" | "email" | "createdAt" | "updatedAt" | "activo" | "esUsuario", ExtArgs["result"]["persona"]>
  export type PersonaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    gastosComoProveedor?: boolean | Persona$gastosComoProveedorArgs<ExtArgs>
    historialPreciosUsuario?: boolean | Persona$historialPreciosUsuarioArgs<ExtArgs>
    presupuestos?: boolean | Persona$presupuestosArgs<ExtArgs>
    productos?: boolean | Persona$productosArgs<ExtArgs>
    recibos?: boolean | Persona$recibosArgs<ExtArgs>
    pagosAdmin?: boolean | Persona$pagosAdminArgs<ExtArgs>
    servicios?: boolean | Persona$serviciosArgs<ExtArgs>
    empresas?: boolean | Persona$empresasArgs<ExtArgs>
    _count?: boolean | PersonaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PersonaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PersonaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PersonaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Persona"
    objects: {
      gastosComoProveedor: Prisma.$GastoOperativoPayload<ExtArgs>[]
      historialPreciosUsuario: Prisma.$HistorialPrecioPayload<ExtArgs>[]
      presupuestos: Prisma.$PresupuestoPayload<ExtArgs>[]
      productos: Prisma.$ProductoPayload<ExtArgs>[]
      recibos: Prisma.$ReciboPayload<ExtArgs>[]
      pagosAdmin: Prisma.$PagoAdminPayload<ExtArgs>[]
      servicios: Prisma.$ServicioPayload<ExtArgs>[]
      empresas: Prisma.$EmpresaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      tipo: $Enums.TipoPersona
      telefono: string | null
      cvu: string | null
      roles: $Enums.RolUsuario[]
      password: string | null
      email: string
      createdAt: Date
      updatedAt: Date
      activo: boolean
      esUsuario: boolean
    }, ExtArgs["result"]["persona"]>
    composites: {}
  }

  type PersonaGetPayload<S extends boolean | null | undefined | PersonaDefaultArgs> = $Result.GetResult<Prisma.$PersonaPayload, S>

  type PersonaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PersonaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PersonaCountAggregateInputType | true
    }

  export interface PersonaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Persona'], meta: { name: 'Persona' } }
    /**
     * Find zero or one Persona that matches the filter.
     * @param {PersonaFindUniqueArgs} args - Arguments to find a Persona
     * @example
     * // Get one Persona
     * const persona = await prisma.persona.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PersonaFindUniqueArgs>(args: SelectSubset<T, PersonaFindUniqueArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Persona that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PersonaFindUniqueOrThrowArgs} args - Arguments to find a Persona
     * @example
     * // Get one Persona
     * const persona = await prisma.persona.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PersonaFindUniqueOrThrowArgs>(args: SelectSubset<T, PersonaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Persona that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonaFindFirstArgs} args - Arguments to find a Persona
     * @example
     * // Get one Persona
     * const persona = await prisma.persona.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PersonaFindFirstArgs>(args?: SelectSubset<T, PersonaFindFirstArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Persona that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonaFindFirstOrThrowArgs} args - Arguments to find a Persona
     * @example
     * // Get one Persona
     * const persona = await prisma.persona.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PersonaFindFirstOrThrowArgs>(args?: SelectSubset<T, PersonaFindFirstOrThrowArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Personas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Personas
     * const personas = await prisma.persona.findMany()
     * 
     * // Get first 10 Personas
     * const personas = await prisma.persona.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const personaWithIdOnly = await prisma.persona.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PersonaFindManyArgs>(args?: SelectSubset<T, PersonaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Persona.
     * @param {PersonaCreateArgs} args - Arguments to create a Persona.
     * @example
     * // Create one Persona
     * const Persona = await prisma.persona.create({
     *   data: {
     *     // ... data to create a Persona
     *   }
     * })
     * 
     */
    create<T extends PersonaCreateArgs>(args: SelectSubset<T, PersonaCreateArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Personas.
     * @param {PersonaCreateManyArgs} args - Arguments to create many Personas.
     * @example
     * // Create many Personas
     * const persona = await prisma.persona.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PersonaCreateManyArgs>(args?: SelectSubset<T, PersonaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Personas and returns the data saved in the database.
     * @param {PersonaCreateManyAndReturnArgs} args - Arguments to create many Personas.
     * @example
     * // Create many Personas
     * const persona = await prisma.persona.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Personas and only return the `id`
     * const personaWithIdOnly = await prisma.persona.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PersonaCreateManyAndReturnArgs>(args?: SelectSubset<T, PersonaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Persona.
     * @param {PersonaDeleteArgs} args - Arguments to delete one Persona.
     * @example
     * // Delete one Persona
     * const Persona = await prisma.persona.delete({
     *   where: {
     *     // ... filter to delete one Persona
     *   }
     * })
     * 
     */
    delete<T extends PersonaDeleteArgs>(args: SelectSubset<T, PersonaDeleteArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Persona.
     * @param {PersonaUpdateArgs} args - Arguments to update one Persona.
     * @example
     * // Update one Persona
     * const persona = await prisma.persona.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PersonaUpdateArgs>(args: SelectSubset<T, PersonaUpdateArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Personas.
     * @param {PersonaDeleteManyArgs} args - Arguments to filter Personas to delete.
     * @example
     * // Delete a few Personas
     * const { count } = await prisma.persona.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PersonaDeleteManyArgs>(args?: SelectSubset<T, PersonaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Personas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Personas
     * const persona = await prisma.persona.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PersonaUpdateManyArgs>(args: SelectSubset<T, PersonaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Personas and returns the data updated in the database.
     * @param {PersonaUpdateManyAndReturnArgs} args - Arguments to update many Personas.
     * @example
     * // Update many Personas
     * const persona = await prisma.persona.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Personas and only return the `id`
     * const personaWithIdOnly = await prisma.persona.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PersonaUpdateManyAndReturnArgs>(args: SelectSubset<T, PersonaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Persona.
     * @param {PersonaUpsertArgs} args - Arguments to update or create a Persona.
     * @example
     * // Update or create a Persona
     * const persona = await prisma.persona.upsert({
     *   create: {
     *     // ... data to create a Persona
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Persona we want to update
     *   }
     * })
     */
    upsert<T extends PersonaUpsertArgs>(args: SelectSubset<T, PersonaUpsertArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Personas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonaCountArgs} args - Arguments to filter Personas to count.
     * @example
     * // Count the number of Personas
     * const count = await prisma.persona.count({
     *   where: {
     *     // ... the filter for the Personas we want to count
     *   }
     * })
    **/
    count<T extends PersonaCountArgs>(
      args?: Subset<T, PersonaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PersonaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Persona.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PersonaAggregateArgs>(args: Subset<T, PersonaAggregateArgs>): Prisma.PrismaPromise<GetPersonaAggregateType<T>>

    /**
     * Group by Persona.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PersonaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PersonaGroupByArgs['orderBy'] }
        : { orderBy?: PersonaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PersonaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPersonaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Persona model
   */
  readonly fields: PersonaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Persona.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PersonaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    gastosComoProveedor<T extends Persona$gastosComoProveedorArgs<ExtArgs> = {}>(args?: Subset<T, Persona$gastosComoProveedorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GastoOperativoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    historialPreciosUsuario<T extends Persona$historialPreciosUsuarioArgs<ExtArgs> = {}>(args?: Subset<T, Persona$historialPreciosUsuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    presupuestos<T extends Persona$presupuestosArgs<ExtArgs> = {}>(args?: Subset<T, Persona$presupuestosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productos<T extends Persona$productosArgs<ExtArgs> = {}>(args?: Subset<T, Persona$productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    recibos<T extends Persona$recibosArgs<ExtArgs> = {}>(args?: Subset<T, Persona$recibosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReciboPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pagosAdmin<T extends Persona$pagosAdminArgs<ExtArgs> = {}>(args?: Subset<T, Persona$pagosAdminArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoAdminPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    servicios<T extends Persona$serviciosArgs<ExtArgs> = {}>(args?: Subset<T, Persona$serviciosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    empresas<T extends Persona$empresasArgs<ExtArgs> = {}>(args?: Subset<T, Persona$empresasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Persona model
   */
  interface PersonaFieldRefs {
    readonly id: FieldRef<"Persona", 'Int'>
    readonly nombre: FieldRef<"Persona", 'String'>
    readonly tipo: FieldRef<"Persona", 'TipoPersona'>
    readonly telefono: FieldRef<"Persona", 'String'>
    readonly cvu: FieldRef<"Persona", 'String'>
    readonly roles: FieldRef<"Persona", 'RolUsuario[]'>
    readonly password: FieldRef<"Persona", 'String'>
    readonly email: FieldRef<"Persona", 'String'>
    readonly createdAt: FieldRef<"Persona", 'DateTime'>
    readonly updatedAt: FieldRef<"Persona", 'DateTime'>
    readonly activo: FieldRef<"Persona", 'Boolean'>
    readonly esUsuario: FieldRef<"Persona", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Persona findUnique
   */
  export type PersonaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    /**
     * Filter, which Persona to fetch.
     */
    where: PersonaWhereUniqueInput
  }

  /**
   * Persona findUniqueOrThrow
   */
  export type PersonaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    /**
     * Filter, which Persona to fetch.
     */
    where: PersonaWhereUniqueInput
  }

  /**
   * Persona findFirst
   */
  export type PersonaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    /**
     * Filter, which Persona to fetch.
     */
    where?: PersonaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Personas to fetch.
     */
    orderBy?: PersonaOrderByWithRelationInput | PersonaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Personas.
     */
    cursor?: PersonaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Personas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Personas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Personas.
     */
    distinct?: PersonaScalarFieldEnum | PersonaScalarFieldEnum[]
  }

  /**
   * Persona findFirstOrThrow
   */
  export type PersonaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    /**
     * Filter, which Persona to fetch.
     */
    where?: PersonaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Personas to fetch.
     */
    orderBy?: PersonaOrderByWithRelationInput | PersonaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Personas.
     */
    cursor?: PersonaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Personas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Personas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Personas.
     */
    distinct?: PersonaScalarFieldEnum | PersonaScalarFieldEnum[]
  }

  /**
   * Persona findMany
   */
  export type PersonaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    /**
     * Filter, which Personas to fetch.
     */
    where?: PersonaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Personas to fetch.
     */
    orderBy?: PersonaOrderByWithRelationInput | PersonaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Personas.
     */
    cursor?: PersonaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Personas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Personas.
     */
    skip?: number
    distinct?: PersonaScalarFieldEnum | PersonaScalarFieldEnum[]
  }

  /**
   * Persona create
   */
  export type PersonaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    /**
     * The data needed to create a Persona.
     */
    data: XOR<PersonaCreateInput, PersonaUncheckedCreateInput>
  }

  /**
   * Persona createMany
   */
  export type PersonaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Personas.
     */
    data: PersonaCreateManyInput | PersonaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Persona createManyAndReturn
   */
  export type PersonaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * The data used to create many Personas.
     */
    data: PersonaCreateManyInput | PersonaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Persona update
   */
  export type PersonaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    /**
     * The data needed to update a Persona.
     */
    data: XOR<PersonaUpdateInput, PersonaUncheckedUpdateInput>
    /**
     * Choose, which Persona to update.
     */
    where: PersonaWhereUniqueInput
  }

  /**
   * Persona updateMany
   */
  export type PersonaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Personas.
     */
    data: XOR<PersonaUpdateManyMutationInput, PersonaUncheckedUpdateManyInput>
    /**
     * Filter which Personas to update
     */
    where?: PersonaWhereInput
    /**
     * Limit how many Personas to update.
     */
    limit?: number
  }

  /**
   * Persona updateManyAndReturn
   */
  export type PersonaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * The data used to update Personas.
     */
    data: XOR<PersonaUpdateManyMutationInput, PersonaUncheckedUpdateManyInput>
    /**
     * Filter which Personas to update
     */
    where?: PersonaWhereInput
    /**
     * Limit how many Personas to update.
     */
    limit?: number
  }

  /**
   * Persona upsert
   */
  export type PersonaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    /**
     * The filter to search for the Persona to update in case it exists.
     */
    where: PersonaWhereUniqueInput
    /**
     * In case the Persona found by the `where` argument doesn't exist, create a new Persona with this data.
     */
    create: XOR<PersonaCreateInput, PersonaUncheckedCreateInput>
    /**
     * In case the Persona was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PersonaUpdateInput, PersonaUncheckedUpdateInput>
  }

  /**
   * Persona delete
   */
  export type PersonaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    /**
     * Filter which Persona to delete.
     */
    where: PersonaWhereUniqueInput
  }

  /**
   * Persona deleteMany
   */
  export type PersonaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Personas to delete
     */
    where?: PersonaWhereInput
    /**
     * Limit how many Personas to delete.
     */
    limit?: number
  }

  /**
   * Persona.gastosComoProveedor
   */
  export type Persona$gastosComoProveedorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GastoOperativo
     */
    select?: GastoOperativoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GastoOperativo
     */
    omit?: GastoOperativoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GastoOperativoInclude<ExtArgs> | null
    where?: GastoOperativoWhereInput
    orderBy?: GastoOperativoOrderByWithRelationInput | GastoOperativoOrderByWithRelationInput[]
    cursor?: GastoOperativoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GastoOperativoScalarFieldEnum | GastoOperativoScalarFieldEnum[]
  }

  /**
   * Persona.historialPreciosUsuario
   */
  export type Persona$historialPreciosUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialPrecio
     */
    omit?: HistorialPrecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    where?: HistorialPrecioWhereInput
    orderBy?: HistorialPrecioOrderByWithRelationInput | HistorialPrecioOrderByWithRelationInput[]
    cursor?: HistorialPrecioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialPrecioScalarFieldEnum | HistorialPrecioScalarFieldEnum[]
  }

  /**
   * Persona.presupuestos
   */
  export type Persona$presupuestosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Presupuesto
     */
    select?: PresupuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Presupuesto
     */
    omit?: PresupuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoInclude<ExtArgs> | null
    where?: PresupuestoWhereInput
    orderBy?: PresupuestoOrderByWithRelationInput | PresupuestoOrderByWithRelationInput[]
    cursor?: PresupuestoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PresupuestoScalarFieldEnum | PresupuestoScalarFieldEnum[]
  }

  /**
   * Persona.productos
   */
  export type Persona$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    cursor?: ProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Persona.recibos
   */
  export type Persona$recibosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recibo
     */
    select?: ReciboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recibo
     */
    omit?: ReciboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReciboInclude<ExtArgs> | null
    where?: ReciboWhereInput
    orderBy?: ReciboOrderByWithRelationInput | ReciboOrderByWithRelationInput[]
    cursor?: ReciboWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReciboScalarFieldEnum | ReciboScalarFieldEnum[]
  }

  /**
   * Persona.pagosAdmin
   */
  export type Persona$pagosAdminArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PagoAdmin
     */
    select?: PagoAdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PagoAdmin
     */
    omit?: PagoAdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoAdminInclude<ExtArgs> | null
    where?: PagoAdminWhereInput
    orderBy?: PagoAdminOrderByWithRelationInput | PagoAdminOrderByWithRelationInput[]
    cursor?: PagoAdminWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PagoAdminScalarFieldEnum | PagoAdminScalarFieldEnum[]
  }

  /**
   * Persona.servicios
   */
  export type Persona$serviciosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicio
     */
    select?: ServicioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Servicio
     */
    omit?: ServicioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicioInclude<ExtArgs> | null
    where?: ServicioWhereInput
    orderBy?: ServicioOrderByWithRelationInput | ServicioOrderByWithRelationInput[]
    cursor?: ServicioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServicioScalarFieldEnum | ServicioScalarFieldEnum[]
  }

  /**
   * Persona.empresas
   */
  export type Persona$empresasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    where?: EmpresaWhereInput
    orderBy?: EmpresaOrderByWithRelationInput | EmpresaOrderByWithRelationInput[]
    cursor?: EmpresaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmpresaScalarFieldEnum | EmpresaScalarFieldEnum[]
  }

  /**
   * Persona without action
   */
  export type PersonaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
  }


  /**
   * Model Empresa
   */

  export type AggregateEmpresa = {
    _count: EmpresaCountAggregateOutputType | null
    _avg: EmpresaAvgAggregateOutputType | null
    _sum: EmpresaSumAggregateOutputType | null
    _min: EmpresaMinAggregateOutputType | null
    _max: EmpresaMaxAggregateOutputType | null
  }

  export type EmpresaAvgAggregateOutputType = {
    id: number | null
    clienteId: number | null
  }

  export type EmpresaSumAggregateOutputType = {
    id: number | null
    clienteId: number | null
  }

  export type EmpresaMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    razonSocial: string | null
    cuit: string | null
    telefono: string | null
    email: string | null
    direccion: string | null
    clienteId: number | null
    activo: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EmpresaMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    razonSocial: string | null
    cuit: string | null
    telefono: string | null
    email: string | null
    direccion: string | null
    clienteId: number | null
    activo: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EmpresaCountAggregateOutputType = {
    id: number
    nombre: number
    razonSocial: number
    cuit: number
    telefono: number
    email: number
    direccion: number
    clienteId: number
    activo: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type EmpresaAvgAggregateInputType = {
    id?: true
    clienteId?: true
  }

  export type EmpresaSumAggregateInputType = {
    id?: true
    clienteId?: true
  }

  export type EmpresaMinAggregateInputType = {
    id?: true
    nombre?: true
    razonSocial?: true
    cuit?: true
    telefono?: true
    email?: true
    direccion?: true
    clienteId?: true
    activo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EmpresaMaxAggregateInputType = {
    id?: true
    nombre?: true
    razonSocial?: true
    cuit?: true
    telefono?: true
    email?: true
    direccion?: true
    clienteId?: true
    activo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EmpresaCountAggregateInputType = {
    id?: true
    nombre?: true
    razonSocial?: true
    cuit?: true
    telefono?: true
    email?: true
    direccion?: true
    clienteId?: true
    activo?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type EmpresaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Empresa to aggregate.
     */
    where?: EmpresaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Empresas to fetch.
     */
    orderBy?: EmpresaOrderByWithRelationInput | EmpresaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EmpresaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Empresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Empresas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Empresas
    **/
    _count?: true | EmpresaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EmpresaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EmpresaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmpresaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmpresaMaxAggregateInputType
  }

  export type GetEmpresaAggregateType<T extends EmpresaAggregateArgs> = {
        [P in keyof T & keyof AggregateEmpresa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmpresa[P]>
      : GetScalarType<T[P], AggregateEmpresa[P]>
  }




  export type EmpresaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmpresaWhereInput
    orderBy?: EmpresaOrderByWithAggregationInput | EmpresaOrderByWithAggregationInput[]
    by: EmpresaScalarFieldEnum[] | EmpresaScalarFieldEnum
    having?: EmpresaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmpresaCountAggregateInputType | true
    _avg?: EmpresaAvgAggregateInputType
    _sum?: EmpresaSumAggregateInputType
    _min?: EmpresaMinAggregateInputType
    _max?: EmpresaMaxAggregateInputType
  }

  export type EmpresaGroupByOutputType = {
    id: number
    nombre: string
    razonSocial: string | null
    cuit: string | null
    telefono: string | null
    email: string | null
    direccion: string | null
    clienteId: number
    activo: boolean
    createdAt: Date
    updatedAt: Date
    _count: EmpresaCountAggregateOutputType | null
    _avg: EmpresaAvgAggregateOutputType | null
    _sum: EmpresaSumAggregateOutputType | null
    _min: EmpresaMinAggregateOutputType | null
    _max: EmpresaMaxAggregateOutputType | null
  }

  type GetEmpresaGroupByPayload<T extends EmpresaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmpresaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmpresaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmpresaGroupByOutputType[P]>
            : GetScalarType<T[P], EmpresaGroupByOutputType[P]>
        }
      >
    >


  export type EmpresaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    razonSocial?: boolean
    cuit?: boolean
    telefono?: boolean
    email?: boolean
    direccion?: boolean
    clienteId?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
    presupuestos?: boolean | Empresa$presupuestosArgs<ExtArgs>
    facturas?: boolean | Empresa$facturasArgs<ExtArgs>
    _count?: boolean | EmpresaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["empresa"]>

  export type EmpresaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    razonSocial?: boolean
    cuit?: boolean
    telefono?: boolean
    email?: boolean
    direccion?: boolean
    clienteId?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["empresa"]>

  export type EmpresaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    razonSocial?: boolean
    cuit?: boolean
    telefono?: boolean
    email?: boolean
    direccion?: boolean
    clienteId?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["empresa"]>

  export type EmpresaSelectScalar = {
    id?: boolean
    nombre?: boolean
    razonSocial?: boolean
    cuit?: boolean
    telefono?: boolean
    email?: boolean
    direccion?: boolean
    clienteId?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type EmpresaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "razonSocial" | "cuit" | "telefono" | "email" | "direccion" | "clienteId" | "activo" | "createdAt" | "updatedAt", ExtArgs["result"]["empresa"]>
  export type EmpresaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
    presupuestos?: boolean | Empresa$presupuestosArgs<ExtArgs>
    facturas?: boolean | Empresa$facturasArgs<ExtArgs>
    _count?: boolean | EmpresaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EmpresaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
  }
  export type EmpresaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
  }

  export type $EmpresaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Empresa"
    objects: {
      cliente: Prisma.$PersonaPayload<ExtArgs>
      presupuestos: Prisma.$PresupuestoPayload<ExtArgs>[]
      facturas: Prisma.$FacturaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      razonSocial: string | null
      cuit: string | null
      telefono: string | null
      email: string | null
      direccion: string | null
      clienteId: number
      activo: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["empresa"]>
    composites: {}
  }

  type EmpresaGetPayload<S extends boolean | null | undefined | EmpresaDefaultArgs> = $Result.GetResult<Prisma.$EmpresaPayload, S>

  type EmpresaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EmpresaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmpresaCountAggregateInputType | true
    }

  export interface EmpresaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Empresa'], meta: { name: 'Empresa' } }
    /**
     * Find zero or one Empresa that matches the filter.
     * @param {EmpresaFindUniqueArgs} args - Arguments to find a Empresa
     * @example
     * // Get one Empresa
     * const empresa = await prisma.empresa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EmpresaFindUniqueArgs>(args: SelectSubset<T, EmpresaFindUniqueArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Empresa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EmpresaFindUniqueOrThrowArgs} args - Arguments to find a Empresa
     * @example
     * // Get one Empresa
     * const empresa = await prisma.empresa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EmpresaFindUniqueOrThrowArgs>(args: SelectSubset<T, EmpresaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Empresa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaFindFirstArgs} args - Arguments to find a Empresa
     * @example
     * // Get one Empresa
     * const empresa = await prisma.empresa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EmpresaFindFirstArgs>(args?: SelectSubset<T, EmpresaFindFirstArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Empresa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaFindFirstOrThrowArgs} args - Arguments to find a Empresa
     * @example
     * // Get one Empresa
     * const empresa = await prisma.empresa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EmpresaFindFirstOrThrowArgs>(args?: SelectSubset<T, EmpresaFindFirstOrThrowArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Empresas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Empresas
     * const empresas = await prisma.empresa.findMany()
     * 
     * // Get first 10 Empresas
     * const empresas = await prisma.empresa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const empresaWithIdOnly = await prisma.empresa.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EmpresaFindManyArgs>(args?: SelectSubset<T, EmpresaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Empresa.
     * @param {EmpresaCreateArgs} args - Arguments to create a Empresa.
     * @example
     * // Create one Empresa
     * const Empresa = await prisma.empresa.create({
     *   data: {
     *     // ... data to create a Empresa
     *   }
     * })
     * 
     */
    create<T extends EmpresaCreateArgs>(args: SelectSubset<T, EmpresaCreateArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Empresas.
     * @param {EmpresaCreateManyArgs} args - Arguments to create many Empresas.
     * @example
     * // Create many Empresas
     * const empresa = await prisma.empresa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EmpresaCreateManyArgs>(args?: SelectSubset<T, EmpresaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Empresas and returns the data saved in the database.
     * @param {EmpresaCreateManyAndReturnArgs} args - Arguments to create many Empresas.
     * @example
     * // Create many Empresas
     * const empresa = await prisma.empresa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Empresas and only return the `id`
     * const empresaWithIdOnly = await prisma.empresa.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EmpresaCreateManyAndReturnArgs>(args?: SelectSubset<T, EmpresaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Empresa.
     * @param {EmpresaDeleteArgs} args - Arguments to delete one Empresa.
     * @example
     * // Delete one Empresa
     * const Empresa = await prisma.empresa.delete({
     *   where: {
     *     // ... filter to delete one Empresa
     *   }
     * })
     * 
     */
    delete<T extends EmpresaDeleteArgs>(args: SelectSubset<T, EmpresaDeleteArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Empresa.
     * @param {EmpresaUpdateArgs} args - Arguments to update one Empresa.
     * @example
     * // Update one Empresa
     * const empresa = await prisma.empresa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EmpresaUpdateArgs>(args: SelectSubset<T, EmpresaUpdateArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Empresas.
     * @param {EmpresaDeleteManyArgs} args - Arguments to filter Empresas to delete.
     * @example
     * // Delete a few Empresas
     * const { count } = await prisma.empresa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EmpresaDeleteManyArgs>(args?: SelectSubset<T, EmpresaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Empresas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Empresas
     * const empresa = await prisma.empresa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EmpresaUpdateManyArgs>(args: SelectSubset<T, EmpresaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Empresas and returns the data updated in the database.
     * @param {EmpresaUpdateManyAndReturnArgs} args - Arguments to update many Empresas.
     * @example
     * // Update many Empresas
     * const empresa = await prisma.empresa.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Empresas and only return the `id`
     * const empresaWithIdOnly = await prisma.empresa.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EmpresaUpdateManyAndReturnArgs>(args: SelectSubset<T, EmpresaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Empresa.
     * @param {EmpresaUpsertArgs} args - Arguments to update or create a Empresa.
     * @example
     * // Update or create a Empresa
     * const empresa = await prisma.empresa.upsert({
     *   create: {
     *     // ... data to create a Empresa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Empresa we want to update
     *   }
     * })
     */
    upsert<T extends EmpresaUpsertArgs>(args: SelectSubset<T, EmpresaUpsertArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Empresas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaCountArgs} args - Arguments to filter Empresas to count.
     * @example
     * // Count the number of Empresas
     * const count = await prisma.empresa.count({
     *   where: {
     *     // ... the filter for the Empresas we want to count
     *   }
     * })
    **/
    count<T extends EmpresaCountArgs>(
      args?: Subset<T, EmpresaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmpresaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Empresa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmpresaAggregateArgs>(args: Subset<T, EmpresaAggregateArgs>): Prisma.PrismaPromise<GetEmpresaAggregateType<T>>

    /**
     * Group by Empresa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EmpresaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EmpresaGroupByArgs['orderBy'] }
        : { orderBy?: EmpresaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EmpresaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmpresaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Empresa model
   */
  readonly fields: EmpresaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Empresa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EmpresaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends PersonaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PersonaDefaultArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    presupuestos<T extends Empresa$presupuestosArgs<ExtArgs> = {}>(args?: Subset<T, Empresa$presupuestosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    facturas<T extends Empresa$facturasArgs<ExtArgs> = {}>(args?: Subset<T, Empresa$facturasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FacturaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Empresa model
   */
  interface EmpresaFieldRefs {
    readonly id: FieldRef<"Empresa", 'Int'>
    readonly nombre: FieldRef<"Empresa", 'String'>
    readonly razonSocial: FieldRef<"Empresa", 'String'>
    readonly cuit: FieldRef<"Empresa", 'String'>
    readonly telefono: FieldRef<"Empresa", 'String'>
    readonly email: FieldRef<"Empresa", 'String'>
    readonly direccion: FieldRef<"Empresa", 'String'>
    readonly clienteId: FieldRef<"Empresa", 'Int'>
    readonly activo: FieldRef<"Empresa", 'Boolean'>
    readonly createdAt: FieldRef<"Empresa", 'DateTime'>
    readonly updatedAt: FieldRef<"Empresa", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Empresa findUnique
   */
  export type EmpresaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * Filter, which Empresa to fetch.
     */
    where: EmpresaWhereUniqueInput
  }

  /**
   * Empresa findUniqueOrThrow
   */
  export type EmpresaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * Filter, which Empresa to fetch.
     */
    where: EmpresaWhereUniqueInput
  }

  /**
   * Empresa findFirst
   */
  export type EmpresaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * Filter, which Empresa to fetch.
     */
    where?: EmpresaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Empresas to fetch.
     */
    orderBy?: EmpresaOrderByWithRelationInput | EmpresaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Empresas.
     */
    cursor?: EmpresaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Empresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Empresas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Empresas.
     */
    distinct?: EmpresaScalarFieldEnum | EmpresaScalarFieldEnum[]
  }

  /**
   * Empresa findFirstOrThrow
   */
  export type EmpresaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * Filter, which Empresa to fetch.
     */
    where?: EmpresaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Empresas to fetch.
     */
    orderBy?: EmpresaOrderByWithRelationInput | EmpresaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Empresas.
     */
    cursor?: EmpresaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Empresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Empresas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Empresas.
     */
    distinct?: EmpresaScalarFieldEnum | EmpresaScalarFieldEnum[]
  }

  /**
   * Empresa findMany
   */
  export type EmpresaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * Filter, which Empresas to fetch.
     */
    where?: EmpresaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Empresas to fetch.
     */
    orderBy?: EmpresaOrderByWithRelationInput | EmpresaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Empresas.
     */
    cursor?: EmpresaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Empresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Empresas.
     */
    skip?: number
    distinct?: EmpresaScalarFieldEnum | EmpresaScalarFieldEnum[]
  }

  /**
   * Empresa create
   */
  export type EmpresaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * The data needed to create a Empresa.
     */
    data: XOR<EmpresaCreateInput, EmpresaUncheckedCreateInput>
  }

  /**
   * Empresa createMany
   */
  export type EmpresaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Empresas.
     */
    data: EmpresaCreateManyInput | EmpresaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Empresa createManyAndReturn
   */
  export type EmpresaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * The data used to create many Empresas.
     */
    data: EmpresaCreateManyInput | EmpresaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Empresa update
   */
  export type EmpresaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * The data needed to update a Empresa.
     */
    data: XOR<EmpresaUpdateInput, EmpresaUncheckedUpdateInput>
    /**
     * Choose, which Empresa to update.
     */
    where: EmpresaWhereUniqueInput
  }

  /**
   * Empresa updateMany
   */
  export type EmpresaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Empresas.
     */
    data: XOR<EmpresaUpdateManyMutationInput, EmpresaUncheckedUpdateManyInput>
    /**
     * Filter which Empresas to update
     */
    where?: EmpresaWhereInput
    /**
     * Limit how many Empresas to update.
     */
    limit?: number
  }

  /**
   * Empresa updateManyAndReturn
   */
  export type EmpresaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * The data used to update Empresas.
     */
    data: XOR<EmpresaUpdateManyMutationInput, EmpresaUncheckedUpdateManyInput>
    /**
     * Filter which Empresas to update
     */
    where?: EmpresaWhereInput
    /**
     * Limit how many Empresas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Empresa upsert
   */
  export type EmpresaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * The filter to search for the Empresa to update in case it exists.
     */
    where: EmpresaWhereUniqueInput
    /**
     * In case the Empresa found by the `where` argument doesn't exist, create a new Empresa with this data.
     */
    create: XOR<EmpresaCreateInput, EmpresaUncheckedCreateInput>
    /**
     * In case the Empresa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EmpresaUpdateInput, EmpresaUncheckedUpdateInput>
  }

  /**
   * Empresa delete
   */
  export type EmpresaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * Filter which Empresa to delete.
     */
    where: EmpresaWhereUniqueInput
  }

  /**
   * Empresa deleteMany
   */
  export type EmpresaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Empresas to delete
     */
    where?: EmpresaWhereInput
    /**
     * Limit how many Empresas to delete.
     */
    limit?: number
  }

  /**
   * Empresa.presupuestos
   */
  export type Empresa$presupuestosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Presupuesto
     */
    select?: PresupuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Presupuesto
     */
    omit?: PresupuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoInclude<ExtArgs> | null
    where?: PresupuestoWhereInput
    orderBy?: PresupuestoOrderByWithRelationInput | PresupuestoOrderByWithRelationInput[]
    cursor?: PresupuestoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PresupuestoScalarFieldEnum | PresupuestoScalarFieldEnum[]
  }

  /**
   * Empresa.facturas
   */
  export type Empresa$facturasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura
     */
    select?: FacturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura
     */
    omit?: FacturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacturaInclude<ExtArgs> | null
    where?: FacturaWhereInput
    orderBy?: FacturaOrderByWithRelationInput | FacturaOrderByWithRelationInput[]
    cursor?: FacturaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FacturaScalarFieldEnum | FacturaScalarFieldEnum[]
  }

  /**
   * Empresa without action
   */
  export type EmpresaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
  }


  /**
   * Model Producto
   */

  export type AggregateProducto = {
    _count: ProductoCountAggregateOutputType | null
    _avg: ProductoAvgAggregateOutputType | null
    _sum: ProductoSumAggregateOutputType | null
    _min: ProductoMinAggregateOutputType | null
    _max: ProductoMaxAggregateOutputType | null
  }

  export type ProductoAvgAggregateOutputType = {
    id: number | null
    costoProveedor: Decimal | null
    margenAgencia: Decimal | null
    precio: Decimal | null
    proveedorId: number | null
    monedaId: number | null
  }

  export type ProductoSumAggregateOutputType = {
    id: number | null
    costoProveedor: Decimal | null
    margenAgencia: Decimal | null
    precio: Decimal | null
    proveedorId: number | null
    monedaId: number | null
  }

  export type ProductoMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    costoProveedor: Decimal | null
    margenAgencia: Decimal | null
    precio: Decimal | null
    proveedorId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    monedaId: number | null
  }

  export type ProductoMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    costoProveedor: Decimal | null
    margenAgencia: Decimal | null
    precio: Decimal | null
    proveedorId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    monedaId: number | null
  }

  export type ProductoCountAggregateOutputType = {
    id: number
    nombre: number
    costoProveedor: number
    margenAgencia: number
    precio: number
    proveedorId: number
    createdAt: number
    updatedAt: number
    monedaId: number
    _all: number
  }


  export type ProductoAvgAggregateInputType = {
    id?: true
    costoProveedor?: true
    margenAgencia?: true
    precio?: true
    proveedorId?: true
    monedaId?: true
  }

  export type ProductoSumAggregateInputType = {
    id?: true
    costoProveedor?: true
    margenAgencia?: true
    precio?: true
    proveedorId?: true
    monedaId?: true
  }

  export type ProductoMinAggregateInputType = {
    id?: true
    nombre?: true
    costoProveedor?: true
    margenAgencia?: true
    precio?: true
    proveedorId?: true
    createdAt?: true
    updatedAt?: true
    monedaId?: true
  }

  export type ProductoMaxAggregateInputType = {
    id?: true
    nombre?: true
    costoProveedor?: true
    margenAgencia?: true
    precio?: true
    proveedorId?: true
    createdAt?: true
    updatedAt?: true
    monedaId?: true
  }

  export type ProductoCountAggregateInputType = {
    id?: true
    nombre?: true
    costoProveedor?: true
    margenAgencia?: true
    precio?: true
    proveedorId?: true
    createdAt?: true
    updatedAt?: true
    monedaId?: true
    _all?: true
  }

  export type ProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Producto to aggregate.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Productos
    **/
    _count?: true | ProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductoMaxAggregateInputType
  }

  export type GetProductoAggregateType<T extends ProductoAggregateArgs> = {
        [P in keyof T & keyof AggregateProducto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducto[P]>
      : GetScalarType<T[P], AggregateProducto[P]>
  }




  export type ProductoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithAggregationInput | ProductoOrderByWithAggregationInput[]
    by: ProductoScalarFieldEnum[] | ProductoScalarFieldEnum
    having?: ProductoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductoCountAggregateInputType | true
    _avg?: ProductoAvgAggregateInputType
    _sum?: ProductoSumAggregateInputType
    _min?: ProductoMinAggregateInputType
    _max?: ProductoMaxAggregateInputType
  }

  export type ProductoGroupByOutputType = {
    id: number
    nombre: string
    costoProveedor: Decimal
    margenAgencia: Decimal
    precio: Decimal
    proveedorId: number
    createdAt: Date
    updatedAt: Date
    monedaId: number
    _count: ProductoCountAggregateOutputType | null
    _avg: ProductoAvgAggregateOutputType | null
    _sum: ProductoSumAggregateOutputType | null
    _min: ProductoMinAggregateOutputType | null
    _max: ProductoMaxAggregateOutputType | null
  }

  type GetProductoGroupByPayload<T extends ProductoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductoGroupByOutputType[P]>
            : GetScalarType<T[P], ProductoGroupByOutputType[P]>
        }
      >
    >


  export type ProductoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    costoProveedor?: boolean
    margenAgencia?: boolean
    precio?: boolean
    proveedorId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
    historialPrecios?: boolean | Producto$historialPreciosArgs<ExtArgs>
    items?: boolean | Producto$itemsArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    proveedor?: boolean | PersonaDefaultArgs<ExtArgs>
    _count?: boolean | ProductoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto"]>

  export type ProductoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    costoProveedor?: boolean
    margenAgencia?: boolean
    precio?: boolean
    proveedorId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    proveedor?: boolean | PersonaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto"]>

  export type ProductoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    costoProveedor?: boolean
    margenAgencia?: boolean
    precio?: boolean
    proveedorId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    proveedor?: boolean | PersonaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto"]>

  export type ProductoSelectScalar = {
    id?: boolean
    nombre?: boolean
    costoProveedor?: boolean
    margenAgencia?: boolean
    precio?: boolean
    proveedorId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
  }

  export type ProductoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "costoProveedor" | "margenAgencia" | "precio" | "proveedorId" | "createdAt" | "updatedAt" | "monedaId", ExtArgs["result"]["producto"]>
  export type ProductoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    historialPrecios?: boolean | Producto$historialPreciosArgs<ExtArgs>
    items?: boolean | Producto$itemsArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    proveedor?: boolean | PersonaDefaultArgs<ExtArgs>
    _count?: boolean | ProductoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    proveedor?: boolean | PersonaDefaultArgs<ExtArgs>
  }
  export type ProductoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    proveedor?: boolean | PersonaDefaultArgs<ExtArgs>
  }

  export type $ProductoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Producto"
    objects: {
      historialPrecios: Prisma.$HistorialPrecioPayload<ExtArgs>[]
      items: Prisma.$ItemPayload<ExtArgs>[]
      moneda: Prisma.$MonedaPayload<ExtArgs>
      proveedor: Prisma.$PersonaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      costoProveedor: Prisma.Decimal
      margenAgencia: Prisma.Decimal
      precio: Prisma.Decimal
      proveedorId: number
      createdAt: Date
      updatedAt: Date
      monedaId: number
    }, ExtArgs["result"]["producto"]>
    composites: {}
  }

  type ProductoGetPayload<S extends boolean | null | undefined | ProductoDefaultArgs> = $Result.GetResult<Prisma.$ProductoPayload, S>

  type ProductoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductoCountAggregateInputType | true
    }

  export interface ProductoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Producto'], meta: { name: 'Producto' } }
    /**
     * Find zero or one Producto that matches the filter.
     * @param {ProductoFindUniqueArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductoFindUniqueArgs>(args: SelectSubset<T, ProductoFindUniqueArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Producto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductoFindUniqueOrThrowArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductoFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Producto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindFirstArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductoFindFirstArgs>(args?: SelectSubset<T, ProductoFindFirstArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Producto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindFirstOrThrowArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductoFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Productos
     * const productos = await prisma.producto.findMany()
     * 
     * // Get first 10 Productos
     * const productos = await prisma.producto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productoWithIdOnly = await prisma.producto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductoFindManyArgs>(args?: SelectSubset<T, ProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Producto.
     * @param {ProductoCreateArgs} args - Arguments to create a Producto.
     * @example
     * // Create one Producto
     * const Producto = await prisma.producto.create({
     *   data: {
     *     // ... data to create a Producto
     *   }
     * })
     * 
     */
    create<T extends ProductoCreateArgs>(args: SelectSubset<T, ProductoCreateArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Productos.
     * @param {ProductoCreateManyArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const producto = await prisma.producto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductoCreateManyArgs>(args?: SelectSubset<T, ProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Productos and returns the data saved in the database.
     * @param {ProductoCreateManyAndReturnArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const producto = await prisma.producto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Productos and only return the `id`
     * const productoWithIdOnly = await prisma.producto.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductoCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Producto.
     * @param {ProductoDeleteArgs} args - Arguments to delete one Producto.
     * @example
     * // Delete one Producto
     * const Producto = await prisma.producto.delete({
     *   where: {
     *     // ... filter to delete one Producto
     *   }
     * })
     * 
     */
    delete<T extends ProductoDeleteArgs>(args: SelectSubset<T, ProductoDeleteArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Producto.
     * @param {ProductoUpdateArgs} args - Arguments to update one Producto.
     * @example
     * // Update one Producto
     * const producto = await prisma.producto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductoUpdateArgs>(args: SelectSubset<T, ProductoUpdateArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Productos.
     * @param {ProductoDeleteManyArgs} args - Arguments to filter Productos to delete.
     * @example
     * // Delete a few Productos
     * const { count } = await prisma.producto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductoDeleteManyArgs>(args?: SelectSubset<T, ProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Productos
     * const producto = await prisma.producto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductoUpdateManyArgs>(args: SelectSubset<T, ProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos and returns the data updated in the database.
     * @param {ProductoUpdateManyAndReturnArgs} args - Arguments to update many Productos.
     * @example
     * // Update many Productos
     * const producto = await prisma.producto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Productos and only return the `id`
     * const productoWithIdOnly = await prisma.producto.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductoUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Producto.
     * @param {ProductoUpsertArgs} args - Arguments to update or create a Producto.
     * @example
     * // Update or create a Producto
     * const producto = await prisma.producto.upsert({
     *   create: {
     *     // ... data to create a Producto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Producto we want to update
     *   }
     * })
     */
    upsert<T extends ProductoUpsertArgs>(args: SelectSubset<T, ProductoUpsertArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoCountArgs} args - Arguments to filter Productos to count.
     * @example
     * // Count the number of Productos
     * const count = await prisma.producto.count({
     *   where: {
     *     // ... the filter for the Productos we want to count
     *   }
     * })
    **/
    count<T extends ProductoCountArgs>(
      args?: Subset<T, ProductoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductoAggregateArgs>(args: Subset<T, ProductoAggregateArgs>): Prisma.PrismaPromise<GetProductoAggregateType<T>>

    /**
     * Group by Producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductoGroupByArgs['orderBy'] }
        : { orderBy?: ProductoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Producto model
   */
  readonly fields: ProductoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Producto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    historialPrecios<T extends Producto$historialPreciosArgs<ExtArgs> = {}>(args?: Subset<T, Producto$historialPreciosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    items<T extends Producto$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Producto$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    moneda<T extends MonedaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MonedaDefaultArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    proveedor<T extends PersonaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PersonaDefaultArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Producto model
   */
  interface ProductoFieldRefs {
    readonly id: FieldRef<"Producto", 'Int'>
    readonly nombre: FieldRef<"Producto", 'String'>
    readonly costoProveedor: FieldRef<"Producto", 'Decimal'>
    readonly margenAgencia: FieldRef<"Producto", 'Decimal'>
    readonly precio: FieldRef<"Producto", 'Decimal'>
    readonly proveedorId: FieldRef<"Producto", 'Int'>
    readonly createdAt: FieldRef<"Producto", 'DateTime'>
    readonly updatedAt: FieldRef<"Producto", 'DateTime'>
    readonly monedaId: FieldRef<"Producto", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Producto findUnique
   */
  export type ProductoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto findUniqueOrThrow
   */
  export type ProductoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto findFirst
   */
  export type ProductoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos.
     */
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto findFirstOrThrow
   */
  export type ProductoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos.
     */
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto findMany
   */
  export type ProductoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Productos to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto create
   */
  export type ProductoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The data needed to create a Producto.
     */
    data: XOR<ProductoCreateInput, ProductoUncheckedCreateInput>
  }

  /**
   * Producto createMany
   */
  export type ProductoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Productos.
     */
    data: ProductoCreateManyInput | ProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Producto createManyAndReturn
   */
  export type ProductoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * The data used to create many Productos.
     */
    data: ProductoCreateManyInput | ProductoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Producto update
   */
  export type ProductoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The data needed to update a Producto.
     */
    data: XOR<ProductoUpdateInput, ProductoUncheckedUpdateInput>
    /**
     * Choose, which Producto to update.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto updateMany
   */
  export type ProductoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Productos.
     */
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyInput>
    /**
     * Filter which Productos to update
     */
    where?: ProductoWhereInput
    /**
     * Limit how many Productos to update.
     */
    limit?: number
  }

  /**
   * Producto updateManyAndReturn
   */
  export type ProductoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * The data used to update Productos.
     */
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyInput>
    /**
     * Filter which Productos to update
     */
    where?: ProductoWhereInput
    /**
     * Limit how many Productos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Producto upsert
   */
  export type ProductoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The filter to search for the Producto to update in case it exists.
     */
    where: ProductoWhereUniqueInput
    /**
     * In case the Producto found by the `where` argument doesn't exist, create a new Producto with this data.
     */
    create: XOR<ProductoCreateInput, ProductoUncheckedCreateInput>
    /**
     * In case the Producto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductoUpdateInput, ProductoUncheckedUpdateInput>
  }

  /**
   * Producto delete
   */
  export type ProductoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter which Producto to delete.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto deleteMany
   */
  export type ProductoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Productos to delete
     */
    where?: ProductoWhereInput
    /**
     * Limit how many Productos to delete.
     */
    limit?: number
  }

  /**
   * Producto.historialPrecios
   */
  export type Producto$historialPreciosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialPrecio
     */
    omit?: HistorialPrecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    where?: HistorialPrecioWhereInput
    orderBy?: HistorialPrecioOrderByWithRelationInput | HistorialPrecioOrderByWithRelationInput[]
    cursor?: HistorialPrecioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialPrecioScalarFieldEnum | HistorialPrecioScalarFieldEnum[]
  }

  /**
   * Producto.items
   */
  export type Producto$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    where?: ItemWhereInput
    orderBy?: ItemOrderByWithRelationInput | ItemOrderByWithRelationInput[]
    cursor?: ItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ItemScalarFieldEnum | ItemScalarFieldEnum[]
  }

  /**
   * Producto without action
   */
  export type ProductoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
  }


  /**
   * Model Servicio
   */

  export type AggregateServicio = {
    _count: ServicioCountAggregateOutputType | null
    _avg: ServicioAvgAggregateOutputType | null
    _sum: ServicioSumAggregateOutputType | null
    _min: ServicioMinAggregateOutputType | null
    _max: ServicioMaxAggregateOutputType | null
  }

  export type ServicioAvgAggregateOutputType = {
    id: number | null
    costoProveedor: Decimal | null
    margenAgencia: Decimal | null
    precio: Decimal | null
    proveedorId: number | null
    monedaId: number | null
  }

  export type ServicioSumAggregateOutputType = {
    id: number | null
    costoProveedor: Decimal | null
    margenAgencia: Decimal | null
    precio: Decimal | null
    proveedorId: number | null
    monedaId: number | null
  }

  export type ServicioMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    costoProveedor: Decimal | null
    margenAgencia: Decimal | null
    precio: Decimal | null
    proveedorId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    monedaId: number | null
  }

  export type ServicioMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    costoProveedor: Decimal | null
    margenAgencia: Decimal | null
    precio: Decimal | null
    proveedorId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    monedaId: number | null
  }

  export type ServicioCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    costoProveedor: number
    margenAgencia: number
    precio: number
    proveedorId: number
    createdAt: number
    updatedAt: number
    monedaId: number
    _all: number
  }


  export type ServicioAvgAggregateInputType = {
    id?: true
    costoProveedor?: true
    margenAgencia?: true
    precio?: true
    proveedorId?: true
    monedaId?: true
  }

  export type ServicioSumAggregateInputType = {
    id?: true
    costoProveedor?: true
    margenAgencia?: true
    precio?: true
    proveedorId?: true
    monedaId?: true
  }

  export type ServicioMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    costoProveedor?: true
    margenAgencia?: true
    precio?: true
    proveedorId?: true
    createdAt?: true
    updatedAt?: true
    monedaId?: true
  }

  export type ServicioMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    costoProveedor?: true
    margenAgencia?: true
    precio?: true
    proveedorId?: true
    createdAt?: true
    updatedAt?: true
    monedaId?: true
  }

  export type ServicioCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    costoProveedor?: true
    margenAgencia?: true
    precio?: true
    proveedorId?: true
    createdAt?: true
    updatedAt?: true
    monedaId?: true
    _all?: true
  }

  export type ServicioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Servicio to aggregate.
     */
    where?: ServicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Servicios to fetch.
     */
    orderBy?: ServicioOrderByWithRelationInput | ServicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ServicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Servicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Servicios
    **/
    _count?: true | ServicioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServicioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServicioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServicioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServicioMaxAggregateInputType
  }

  export type GetServicioAggregateType<T extends ServicioAggregateArgs> = {
        [P in keyof T & keyof AggregateServicio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateServicio[P]>
      : GetScalarType<T[P], AggregateServicio[P]>
  }




  export type ServicioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServicioWhereInput
    orderBy?: ServicioOrderByWithAggregationInput | ServicioOrderByWithAggregationInput[]
    by: ServicioScalarFieldEnum[] | ServicioScalarFieldEnum
    having?: ServicioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServicioCountAggregateInputType | true
    _avg?: ServicioAvgAggregateInputType
    _sum?: ServicioSumAggregateInputType
    _min?: ServicioMinAggregateInputType
    _max?: ServicioMaxAggregateInputType
  }

  export type ServicioGroupByOutputType = {
    id: number
    nombre: string
    descripcion: string
    costoProveedor: Decimal
    margenAgencia: Decimal
    precio: Decimal
    proveedorId: number
    createdAt: Date
    updatedAt: Date
    monedaId: number
    _count: ServicioCountAggregateOutputType | null
    _avg: ServicioAvgAggregateOutputType | null
    _sum: ServicioSumAggregateOutputType | null
    _min: ServicioMinAggregateOutputType | null
    _max: ServicioMaxAggregateOutputType | null
  }

  type GetServicioGroupByPayload<T extends ServicioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServicioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServicioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServicioGroupByOutputType[P]>
            : GetScalarType<T[P], ServicioGroupByOutputType[P]>
        }
      >
    >


  export type ServicioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    costoProveedor?: boolean
    margenAgencia?: boolean
    precio?: boolean
    proveedorId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
    historialPrecios?: boolean | Servicio$historialPreciosArgs<ExtArgs>
    items?: boolean | Servicio$itemsArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    proveedor?: boolean | PersonaDefaultArgs<ExtArgs>
    _count?: boolean | ServicioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["servicio"]>

  export type ServicioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    costoProveedor?: boolean
    margenAgencia?: boolean
    precio?: boolean
    proveedorId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    proveedor?: boolean | PersonaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["servicio"]>

  export type ServicioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    costoProveedor?: boolean
    margenAgencia?: boolean
    precio?: boolean
    proveedorId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    proveedor?: boolean | PersonaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["servicio"]>

  export type ServicioSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    costoProveedor?: boolean
    margenAgencia?: boolean
    precio?: boolean
    proveedorId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
  }

  export type ServicioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "descripcion" | "costoProveedor" | "margenAgencia" | "precio" | "proveedorId" | "createdAt" | "updatedAt" | "monedaId", ExtArgs["result"]["servicio"]>
  export type ServicioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    historialPrecios?: boolean | Servicio$historialPreciosArgs<ExtArgs>
    items?: boolean | Servicio$itemsArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    proveedor?: boolean | PersonaDefaultArgs<ExtArgs>
    _count?: boolean | ServicioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ServicioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    proveedor?: boolean | PersonaDefaultArgs<ExtArgs>
  }
  export type ServicioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    proveedor?: boolean | PersonaDefaultArgs<ExtArgs>
  }

  export type $ServicioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Servicio"
    objects: {
      historialPrecios: Prisma.$HistorialPrecioPayload<ExtArgs>[]
      items: Prisma.$ItemPayload<ExtArgs>[]
      moneda: Prisma.$MonedaPayload<ExtArgs>
      proveedor: Prisma.$PersonaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      descripcion: string
      costoProveedor: Prisma.Decimal
      margenAgencia: Prisma.Decimal
      precio: Prisma.Decimal
      proveedorId: number
      createdAt: Date
      updatedAt: Date
      monedaId: number
    }, ExtArgs["result"]["servicio"]>
    composites: {}
  }

  type ServicioGetPayload<S extends boolean | null | undefined | ServicioDefaultArgs> = $Result.GetResult<Prisma.$ServicioPayload, S>

  type ServicioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ServicioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ServicioCountAggregateInputType | true
    }

  export interface ServicioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Servicio'], meta: { name: 'Servicio' } }
    /**
     * Find zero or one Servicio that matches the filter.
     * @param {ServicioFindUniqueArgs} args - Arguments to find a Servicio
     * @example
     * // Get one Servicio
     * const servicio = await prisma.servicio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ServicioFindUniqueArgs>(args: SelectSubset<T, ServicioFindUniqueArgs<ExtArgs>>): Prisma__ServicioClient<$Result.GetResult<Prisma.$ServicioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Servicio that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ServicioFindUniqueOrThrowArgs} args - Arguments to find a Servicio
     * @example
     * // Get one Servicio
     * const servicio = await prisma.servicio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ServicioFindUniqueOrThrowArgs>(args: SelectSubset<T, ServicioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ServicioClient<$Result.GetResult<Prisma.$ServicioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Servicio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServicioFindFirstArgs} args - Arguments to find a Servicio
     * @example
     * // Get one Servicio
     * const servicio = await prisma.servicio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ServicioFindFirstArgs>(args?: SelectSubset<T, ServicioFindFirstArgs<ExtArgs>>): Prisma__ServicioClient<$Result.GetResult<Prisma.$ServicioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Servicio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServicioFindFirstOrThrowArgs} args - Arguments to find a Servicio
     * @example
     * // Get one Servicio
     * const servicio = await prisma.servicio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ServicioFindFirstOrThrowArgs>(args?: SelectSubset<T, ServicioFindFirstOrThrowArgs<ExtArgs>>): Prisma__ServicioClient<$Result.GetResult<Prisma.$ServicioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Servicios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServicioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Servicios
     * const servicios = await prisma.servicio.findMany()
     * 
     * // Get first 10 Servicios
     * const servicios = await prisma.servicio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const servicioWithIdOnly = await prisma.servicio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ServicioFindManyArgs>(args?: SelectSubset<T, ServicioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Servicio.
     * @param {ServicioCreateArgs} args - Arguments to create a Servicio.
     * @example
     * // Create one Servicio
     * const Servicio = await prisma.servicio.create({
     *   data: {
     *     // ... data to create a Servicio
     *   }
     * })
     * 
     */
    create<T extends ServicioCreateArgs>(args: SelectSubset<T, ServicioCreateArgs<ExtArgs>>): Prisma__ServicioClient<$Result.GetResult<Prisma.$ServicioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Servicios.
     * @param {ServicioCreateManyArgs} args - Arguments to create many Servicios.
     * @example
     * // Create many Servicios
     * const servicio = await prisma.servicio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ServicioCreateManyArgs>(args?: SelectSubset<T, ServicioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Servicios and returns the data saved in the database.
     * @param {ServicioCreateManyAndReturnArgs} args - Arguments to create many Servicios.
     * @example
     * // Create many Servicios
     * const servicio = await prisma.servicio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Servicios and only return the `id`
     * const servicioWithIdOnly = await prisma.servicio.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ServicioCreateManyAndReturnArgs>(args?: SelectSubset<T, ServicioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Servicio.
     * @param {ServicioDeleteArgs} args - Arguments to delete one Servicio.
     * @example
     * // Delete one Servicio
     * const Servicio = await prisma.servicio.delete({
     *   where: {
     *     // ... filter to delete one Servicio
     *   }
     * })
     * 
     */
    delete<T extends ServicioDeleteArgs>(args: SelectSubset<T, ServicioDeleteArgs<ExtArgs>>): Prisma__ServicioClient<$Result.GetResult<Prisma.$ServicioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Servicio.
     * @param {ServicioUpdateArgs} args - Arguments to update one Servicio.
     * @example
     * // Update one Servicio
     * const servicio = await prisma.servicio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ServicioUpdateArgs>(args: SelectSubset<T, ServicioUpdateArgs<ExtArgs>>): Prisma__ServicioClient<$Result.GetResult<Prisma.$ServicioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Servicios.
     * @param {ServicioDeleteManyArgs} args - Arguments to filter Servicios to delete.
     * @example
     * // Delete a few Servicios
     * const { count } = await prisma.servicio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ServicioDeleteManyArgs>(args?: SelectSubset<T, ServicioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Servicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServicioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Servicios
     * const servicio = await prisma.servicio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ServicioUpdateManyArgs>(args: SelectSubset<T, ServicioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Servicios and returns the data updated in the database.
     * @param {ServicioUpdateManyAndReturnArgs} args - Arguments to update many Servicios.
     * @example
     * // Update many Servicios
     * const servicio = await prisma.servicio.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Servicios and only return the `id`
     * const servicioWithIdOnly = await prisma.servicio.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ServicioUpdateManyAndReturnArgs>(args: SelectSubset<T, ServicioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Servicio.
     * @param {ServicioUpsertArgs} args - Arguments to update or create a Servicio.
     * @example
     * // Update or create a Servicio
     * const servicio = await prisma.servicio.upsert({
     *   create: {
     *     // ... data to create a Servicio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Servicio we want to update
     *   }
     * })
     */
    upsert<T extends ServicioUpsertArgs>(args: SelectSubset<T, ServicioUpsertArgs<ExtArgs>>): Prisma__ServicioClient<$Result.GetResult<Prisma.$ServicioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Servicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServicioCountArgs} args - Arguments to filter Servicios to count.
     * @example
     * // Count the number of Servicios
     * const count = await prisma.servicio.count({
     *   where: {
     *     // ... the filter for the Servicios we want to count
     *   }
     * })
    **/
    count<T extends ServicioCountArgs>(
      args?: Subset<T, ServicioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServicioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Servicio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServicioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServicioAggregateArgs>(args: Subset<T, ServicioAggregateArgs>): Prisma.PrismaPromise<GetServicioAggregateType<T>>

    /**
     * Group by Servicio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServicioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ServicioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ServicioGroupByArgs['orderBy'] }
        : { orderBy?: ServicioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ServicioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServicioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Servicio model
   */
  readonly fields: ServicioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Servicio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ServicioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    historialPrecios<T extends Servicio$historialPreciosArgs<ExtArgs> = {}>(args?: Subset<T, Servicio$historialPreciosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    items<T extends Servicio$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Servicio$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    moneda<T extends MonedaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MonedaDefaultArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    proveedor<T extends PersonaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PersonaDefaultArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Servicio model
   */
  interface ServicioFieldRefs {
    readonly id: FieldRef<"Servicio", 'Int'>
    readonly nombre: FieldRef<"Servicio", 'String'>
    readonly descripcion: FieldRef<"Servicio", 'String'>
    readonly costoProveedor: FieldRef<"Servicio", 'Decimal'>
    readonly margenAgencia: FieldRef<"Servicio", 'Decimal'>
    readonly precio: FieldRef<"Servicio", 'Decimal'>
    readonly proveedorId: FieldRef<"Servicio", 'Int'>
    readonly createdAt: FieldRef<"Servicio", 'DateTime'>
    readonly updatedAt: FieldRef<"Servicio", 'DateTime'>
    readonly monedaId: FieldRef<"Servicio", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Servicio findUnique
   */
  export type ServicioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicio
     */
    select?: ServicioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Servicio
     */
    omit?: ServicioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicioInclude<ExtArgs> | null
    /**
     * Filter, which Servicio to fetch.
     */
    where: ServicioWhereUniqueInput
  }

  /**
   * Servicio findUniqueOrThrow
   */
  export type ServicioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicio
     */
    select?: ServicioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Servicio
     */
    omit?: ServicioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicioInclude<ExtArgs> | null
    /**
     * Filter, which Servicio to fetch.
     */
    where: ServicioWhereUniqueInput
  }

  /**
   * Servicio findFirst
   */
  export type ServicioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicio
     */
    select?: ServicioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Servicio
     */
    omit?: ServicioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicioInclude<ExtArgs> | null
    /**
     * Filter, which Servicio to fetch.
     */
    where?: ServicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Servicios to fetch.
     */
    orderBy?: ServicioOrderByWithRelationInput | ServicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Servicios.
     */
    cursor?: ServicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Servicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Servicios.
     */
    distinct?: ServicioScalarFieldEnum | ServicioScalarFieldEnum[]
  }

  /**
   * Servicio findFirstOrThrow
   */
  export type ServicioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicio
     */
    select?: ServicioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Servicio
     */
    omit?: ServicioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicioInclude<ExtArgs> | null
    /**
     * Filter, which Servicio to fetch.
     */
    where?: ServicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Servicios to fetch.
     */
    orderBy?: ServicioOrderByWithRelationInput | ServicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Servicios.
     */
    cursor?: ServicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Servicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Servicios.
     */
    distinct?: ServicioScalarFieldEnum | ServicioScalarFieldEnum[]
  }

  /**
   * Servicio findMany
   */
  export type ServicioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicio
     */
    select?: ServicioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Servicio
     */
    omit?: ServicioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicioInclude<ExtArgs> | null
    /**
     * Filter, which Servicios to fetch.
     */
    where?: ServicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Servicios to fetch.
     */
    orderBy?: ServicioOrderByWithRelationInput | ServicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Servicios.
     */
    cursor?: ServicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Servicios.
     */
    skip?: number
    distinct?: ServicioScalarFieldEnum | ServicioScalarFieldEnum[]
  }

  /**
   * Servicio create
   */
  export type ServicioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicio
     */
    select?: ServicioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Servicio
     */
    omit?: ServicioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicioInclude<ExtArgs> | null
    /**
     * The data needed to create a Servicio.
     */
    data: XOR<ServicioCreateInput, ServicioUncheckedCreateInput>
  }

  /**
   * Servicio createMany
   */
  export type ServicioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Servicios.
     */
    data: ServicioCreateManyInput | ServicioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Servicio createManyAndReturn
   */
  export type ServicioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicio
     */
    select?: ServicioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Servicio
     */
    omit?: ServicioOmit<ExtArgs> | null
    /**
     * The data used to create many Servicios.
     */
    data: ServicioCreateManyInput | ServicioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Servicio update
   */
  export type ServicioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicio
     */
    select?: ServicioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Servicio
     */
    omit?: ServicioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicioInclude<ExtArgs> | null
    /**
     * The data needed to update a Servicio.
     */
    data: XOR<ServicioUpdateInput, ServicioUncheckedUpdateInput>
    /**
     * Choose, which Servicio to update.
     */
    where: ServicioWhereUniqueInput
  }

  /**
   * Servicio updateMany
   */
  export type ServicioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Servicios.
     */
    data: XOR<ServicioUpdateManyMutationInput, ServicioUncheckedUpdateManyInput>
    /**
     * Filter which Servicios to update
     */
    where?: ServicioWhereInput
    /**
     * Limit how many Servicios to update.
     */
    limit?: number
  }

  /**
   * Servicio updateManyAndReturn
   */
  export type ServicioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicio
     */
    select?: ServicioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Servicio
     */
    omit?: ServicioOmit<ExtArgs> | null
    /**
     * The data used to update Servicios.
     */
    data: XOR<ServicioUpdateManyMutationInput, ServicioUncheckedUpdateManyInput>
    /**
     * Filter which Servicios to update
     */
    where?: ServicioWhereInput
    /**
     * Limit how many Servicios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Servicio upsert
   */
  export type ServicioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicio
     */
    select?: ServicioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Servicio
     */
    omit?: ServicioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicioInclude<ExtArgs> | null
    /**
     * The filter to search for the Servicio to update in case it exists.
     */
    where: ServicioWhereUniqueInput
    /**
     * In case the Servicio found by the `where` argument doesn't exist, create a new Servicio with this data.
     */
    create: XOR<ServicioCreateInput, ServicioUncheckedCreateInput>
    /**
     * In case the Servicio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ServicioUpdateInput, ServicioUncheckedUpdateInput>
  }

  /**
   * Servicio delete
   */
  export type ServicioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicio
     */
    select?: ServicioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Servicio
     */
    omit?: ServicioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicioInclude<ExtArgs> | null
    /**
     * Filter which Servicio to delete.
     */
    where: ServicioWhereUniqueInput
  }

  /**
   * Servicio deleteMany
   */
  export type ServicioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Servicios to delete
     */
    where?: ServicioWhereInput
    /**
     * Limit how many Servicios to delete.
     */
    limit?: number
  }

  /**
   * Servicio.historialPrecios
   */
  export type Servicio$historialPreciosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialPrecio
     */
    omit?: HistorialPrecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    where?: HistorialPrecioWhereInput
    orderBy?: HistorialPrecioOrderByWithRelationInput | HistorialPrecioOrderByWithRelationInput[]
    cursor?: HistorialPrecioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialPrecioScalarFieldEnum | HistorialPrecioScalarFieldEnum[]
  }

  /**
   * Servicio.items
   */
  export type Servicio$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    where?: ItemWhereInput
    orderBy?: ItemOrderByWithRelationInput | ItemOrderByWithRelationInput[]
    cursor?: ItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ItemScalarFieldEnum | ItemScalarFieldEnum[]
  }

  /**
   * Servicio without action
   */
  export type ServicioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicio
     */
    select?: ServicioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Servicio
     */
    omit?: ServicioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicioInclude<ExtArgs> | null
  }


  /**
   * Model Presupuesto
   */

  export type AggregatePresupuesto = {
    _count: PresupuestoCountAggregateOutputType | null
    _avg: PresupuestoAvgAggregateOutputType | null
    _sum: PresupuestoSumAggregateOutputType | null
    _min: PresupuestoMinAggregateOutputType | null
    _max: PresupuestoMaxAggregateOutputType | null
  }

  export type PresupuestoAvgAggregateOutputType = {
    id: number | null
    clienteId: number | null
    empresaId: number | null
    subtotal: Decimal | null
    impuestos: Decimal | null
    total: Decimal | null
    monedaId: number | null
    precioPeriodo: Decimal | null
  }

  export type PresupuestoSumAggregateOutputType = {
    id: number | null
    clienteId: number | null
    empresaId: number | null
    subtotal: Decimal | null
    impuestos: Decimal | null
    total: Decimal | null
    monedaId: number | null
    precioPeriodo: Decimal | null
  }

  export type PresupuestoMinAggregateOutputType = {
    id: number | null
    clienteId: number | null
    empresaId: number | null
    subtotal: Decimal | null
    impuestos: Decimal | null
    total: Decimal | null
    estado: $Enums.EstadoPresupuesto | null
    createdAt: Date | null
    updatedAt: Date | null
    monedaId: number | null
    tipoCambioFecha: Date | null
    periodoInicio: Date | null
    periodoFin: Date | null
    esRecurrente: boolean | null
    frecuencia: $Enums.FrecuenciaContrato | null
    renovacionAutomatica: boolean | null
    precioPeriodo: Decimal | null
  }

  export type PresupuestoMaxAggregateOutputType = {
    id: number | null
    clienteId: number | null
    empresaId: number | null
    subtotal: Decimal | null
    impuestos: Decimal | null
    total: Decimal | null
    estado: $Enums.EstadoPresupuesto | null
    createdAt: Date | null
    updatedAt: Date | null
    monedaId: number | null
    tipoCambioFecha: Date | null
    periodoInicio: Date | null
    periodoFin: Date | null
    esRecurrente: boolean | null
    frecuencia: $Enums.FrecuenciaContrato | null
    renovacionAutomatica: boolean | null
    precioPeriodo: Decimal | null
  }

  export type PresupuestoCountAggregateOutputType = {
    id: number
    clienteId: number
    empresaId: number
    subtotal: number
    impuestos: number
    total: number
    estado: number
    createdAt: number
    updatedAt: number
    monedaId: number
    tipoCambioFecha: number
    periodoInicio: number
    periodoFin: number
    esRecurrente: number
    frecuencia: number
    renovacionAutomatica: number
    precioPeriodo: number
    _all: number
  }


  export type PresupuestoAvgAggregateInputType = {
    id?: true
    clienteId?: true
    empresaId?: true
    subtotal?: true
    impuestos?: true
    total?: true
    monedaId?: true
    precioPeriodo?: true
  }

  export type PresupuestoSumAggregateInputType = {
    id?: true
    clienteId?: true
    empresaId?: true
    subtotal?: true
    impuestos?: true
    total?: true
    monedaId?: true
    precioPeriodo?: true
  }

  export type PresupuestoMinAggregateInputType = {
    id?: true
    clienteId?: true
    empresaId?: true
    subtotal?: true
    impuestos?: true
    total?: true
    estado?: true
    createdAt?: true
    updatedAt?: true
    monedaId?: true
    tipoCambioFecha?: true
    periodoInicio?: true
    periodoFin?: true
    esRecurrente?: true
    frecuencia?: true
    renovacionAutomatica?: true
    precioPeriodo?: true
  }

  export type PresupuestoMaxAggregateInputType = {
    id?: true
    clienteId?: true
    empresaId?: true
    subtotal?: true
    impuestos?: true
    total?: true
    estado?: true
    createdAt?: true
    updatedAt?: true
    monedaId?: true
    tipoCambioFecha?: true
    periodoInicio?: true
    periodoFin?: true
    esRecurrente?: true
    frecuencia?: true
    renovacionAutomatica?: true
    precioPeriodo?: true
  }

  export type PresupuestoCountAggregateInputType = {
    id?: true
    clienteId?: true
    empresaId?: true
    subtotal?: true
    impuestos?: true
    total?: true
    estado?: true
    createdAt?: true
    updatedAt?: true
    monedaId?: true
    tipoCambioFecha?: true
    periodoInicio?: true
    periodoFin?: true
    esRecurrente?: true
    frecuencia?: true
    renovacionAutomatica?: true
    precioPeriodo?: true
    _all?: true
  }

  export type PresupuestoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Presupuesto to aggregate.
     */
    where?: PresupuestoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Presupuestos to fetch.
     */
    orderBy?: PresupuestoOrderByWithRelationInput | PresupuestoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PresupuestoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Presupuestos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Presupuestos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Presupuestos
    **/
    _count?: true | PresupuestoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PresupuestoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PresupuestoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PresupuestoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PresupuestoMaxAggregateInputType
  }

  export type GetPresupuestoAggregateType<T extends PresupuestoAggregateArgs> = {
        [P in keyof T & keyof AggregatePresupuesto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePresupuesto[P]>
      : GetScalarType<T[P], AggregatePresupuesto[P]>
  }




  export type PresupuestoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PresupuestoWhereInput
    orderBy?: PresupuestoOrderByWithAggregationInput | PresupuestoOrderByWithAggregationInput[]
    by: PresupuestoScalarFieldEnum[] | PresupuestoScalarFieldEnum
    having?: PresupuestoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PresupuestoCountAggregateInputType | true
    _avg?: PresupuestoAvgAggregateInputType
    _sum?: PresupuestoSumAggregateInputType
    _min?: PresupuestoMinAggregateInputType
    _max?: PresupuestoMaxAggregateInputType
  }

  export type PresupuestoGroupByOutputType = {
    id: number
    clienteId: number
    empresaId: number | null
    subtotal: Decimal
    impuestos: Decimal
    total: Decimal
    estado: $Enums.EstadoPresupuesto
    createdAt: Date
    updatedAt: Date
    monedaId: number
    tipoCambioFecha: Date | null
    periodoInicio: Date | null
    periodoFin: Date | null
    esRecurrente: boolean
    frecuencia: $Enums.FrecuenciaContrato | null
    renovacionAutomatica: boolean
    precioPeriodo: Decimal | null
    _count: PresupuestoCountAggregateOutputType | null
    _avg: PresupuestoAvgAggregateOutputType | null
    _sum: PresupuestoSumAggregateOutputType | null
    _min: PresupuestoMinAggregateOutputType | null
    _max: PresupuestoMaxAggregateOutputType | null
  }

  type GetPresupuestoGroupByPayload<T extends PresupuestoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PresupuestoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PresupuestoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PresupuestoGroupByOutputType[P]>
            : GetScalarType<T[P], PresupuestoGroupByOutputType[P]>
        }
      >
    >


  export type PresupuestoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    empresaId?: boolean
    subtotal?: boolean
    impuestos?: boolean
    total?: boolean
    estado?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
    tipoCambioFecha?: boolean
    periodoInicio?: boolean
    periodoFin?: boolean
    esRecurrente?: boolean
    frecuencia?: boolean
    renovacionAutomatica?: boolean
    precioPeriodo?: boolean
    asignacionesGasto?: boolean | Presupuesto$asignacionesGastoArgs<ExtArgs>
    facturas?: boolean | Presupuesto$facturasArgs<ExtArgs>
    items?: boolean | Presupuesto$itemsArgs<ExtArgs>
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
    empresa?: boolean | Presupuesto$empresaArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    presupuestoImpuestos?: boolean | Presupuesto$presupuestoImpuestosArgs<ExtArgs>
    recibos?: boolean | Presupuesto$recibosArgs<ExtArgs>
    pagosAdmin?: boolean | Presupuesto$pagosAdminArgs<ExtArgs>
    cobrosCliente?: boolean | Presupuesto$cobrosClienteArgs<ExtArgs>
    _count?: boolean | PresupuestoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["presupuesto"]>

  export type PresupuestoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    empresaId?: boolean
    subtotal?: boolean
    impuestos?: boolean
    total?: boolean
    estado?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
    tipoCambioFecha?: boolean
    periodoInicio?: boolean
    periodoFin?: boolean
    esRecurrente?: boolean
    frecuencia?: boolean
    renovacionAutomatica?: boolean
    precioPeriodo?: boolean
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
    empresa?: boolean | Presupuesto$empresaArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["presupuesto"]>

  export type PresupuestoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    empresaId?: boolean
    subtotal?: boolean
    impuestos?: boolean
    total?: boolean
    estado?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
    tipoCambioFecha?: boolean
    periodoInicio?: boolean
    periodoFin?: boolean
    esRecurrente?: boolean
    frecuencia?: boolean
    renovacionAutomatica?: boolean
    precioPeriodo?: boolean
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
    empresa?: boolean | Presupuesto$empresaArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["presupuesto"]>

  export type PresupuestoSelectScalar = {
    id?: boolean
    clienteId?: boolean
    empresaId?: boolean
    subtotal?: boolean
    impuestos?: boolean
    total?: boolean
    estado?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
    tipoCambioFecha?: boolean
    periodoInicio?: boolean
    periodoFin?: boolean
    esRecurrente?: boolean
    frecuencia?: boolean
    renovacionAutomatica?: boolean
    precioPeriodo?: boolean
  }

  export type PresupuestoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "clienteId" | "empresaId" | "subtotal" | "impuestos" | "total" | "estado" | "createdAt" | "updatedAt" | "monedaId" | "tipoCambioFecha" | "periodoInicio" | "periodoFin" | "esRecurrente" | "frecuencia" | "renovacionAutomatica" | "precioPeriodo", ExtArgs["result"]["presupuesto"]>
  export type PresupuestoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asignacionesGasto?: boolean | Presupuesto$asignacionesGastoArgs<ExtArgs>
    facturas?: boolean | Presupuesto$facturasArgs<ExtArgs>
    items?: boolean | Presupuesto$itemsArgs<ExtArgs>
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
    empresa?: boolean | Presupuesto$empresaArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    presupuestoImpuestos?: boolean | Presupuesto$presupuestoImpuestosArgs<ExtArgs>
    recibos?: boolean | Presupuesto$recibosArgs<ExtArgs>
    pagosAdmin?: boolean | Presupuesto$pagosAdminArgs<ExtArgs>
    cobrosCliente?: boolean | Presupuesto$cobrosClienteArgs<ExtArgs>
    _count?: boolean | PresupuestoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PresupuestoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
    empresa?: boolean | Presupuesto$empresaArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }
  export type PresupuestoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | PersonaDefaultArgs<ExtArgs>
    empresa?: boolean | Presupuesto$empresaArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }

  export type $PresupuestoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Presupuesto"
    objects: {
      asignacionesGasto: Prisma.$AsignacionGastoProyectoPayload<ExtArgs>[]
      facturas: Prisma.$FacturaPayload<ExtArgs>[]
      items: Prisma.$ItemPayload<ExtArgs>[]
      cliente: Prisma.$PersonaPayload<ExtArgs>
      empresa: Prisma.$EmpresaPayload<ExtArgs> | null
      moneda: Prisma.$MonedaPayload<ExtArgs>
      presupuestoImpuestos: Prisma.$PresupuestoImpuestoPayload<ExtArgs>[]
      recibos: Prisma.$ReciboPayload<ExtArgs>[]
      pagosAdmin: Prisma.$PagoAdminPayload<ExtArgs>[]
      cobrosCliente: Prisma.$CobroClientePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      clienteId: number
      empresaId: number | null
      subtotal: Prisma.Decimal
      impuestos: Prisma.Decimal
      total: Prisma.Decimal
      estado: $Enums.EstadoPresupuesto
      createdAt: Date
      updatedAt: Date
      monedaId: number
      tipoCambioFecha: Date | null
      periodoInicio: Date | null
      periodoFin: Date | null
      esRecurrente: boolean
      frecuencia: $Enums.FrecuenciaContrato | null
      renovacionAutomatica: boolean
      precioPeriodo: Prisma.Decimal | null
    }, ExtArgs["result"]["presupuesto"]>
    composites: {}
  }

  type PresupuestoGetPayload<S extends boolean | null | undefined | PresupuestoDefaultArgs> = $Result.GetResult<Prisma.$PresupuestoPayload, S>

  type PresupuestoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PresupuestoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PresupuestoCountAggregateInputType | true
    }

  export interface PresupuestoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Presupuesto'], meta: { name: 'Presupuesto' } }
    /**
     * Find zero or one Presupuesto that matches the filter.
     * @param {PresupuestoFindUniqueArgs} args - Arguments to find a Presupuesto
     * @example
     * // Get one Presupuesto
     * const presupuesto = await prisma.presupuesto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PresupuestoFindUniqueArgs>(args: SelectSubset<T, PresupuestoFindUniqueArgs<ExtArgs>>): Prisma__PresupuestoClient<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Presupuesto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PresupuestoFindUniqueOrThrowArgs} args - Arguments to find a Presupuesto
     * @example
     * // Get one Presupuesto
     * const presupuesto = await prisma.presupuesto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PresupuestoFindUniqueOrThrowArgs>(args: SelectSubset<T, PresupuestoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PresupuestoClient<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Presupuesto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PresupuestoFindFirstArgs} args - Arguments to find a Presupuesto
     * @example
     * // Get one Presupuesto
     * const presupuesto = await prisma.presupuesto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PresupuestoFindFirstArgs>(args?: SelectSubset<T, PresupuestoFindFirstArgs<ExtArgs>>): Prisma__PresupuestoClient<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Presupuesto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PresupuestoFindFirstOrThrowArgs} args - Arguments to find a Presupuesto
     * @example
     * // Get one Presupuesto
     * const presupuesto = await prisma.presupuesto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PresupuestoFindFirstOrThrowArgs>(args?: SelectSubset<T, PresupuestoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PresupuestoClient<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Presupuestos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PresupuestoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Presupuestos
     * const presupuestos = await prisma.presupuesto.findMany()
     * 
     * // Get first 10 Presupuestos
     * const presupuestos = await prisma.presupuesto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const presupuestoWithIdOnly = await prisma.presupuesto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PresupuestoFindManyArgs>(args?: SelectSubset<T, PresupuestoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Presupuesto.
     * @param {PresupuestoCreateArgs} args - Arguments to create a Presupuesto.
     * @example
     * // Create one Presupuesto
     * const Presupuesto = await prisma.presupuesto.create({
     *   data: {
     *     // ... data to create a Presupuesto
     *   }
     * })
     * 
     */
    create<T extends PresupuestoCreateArgs>(args: SelectSubset<T, PresupuestoCreateArgs<ExtArgs>>): Prisma__PresupuestoClient<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Presupuestos.
     * @param {PresupuestoCreateManyArgs} args - Arguments to create many Presupuestos.
     * @example
     * // Create many Presupuestos
     * const presupuesto = await prisma.presupuesto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PresupuestoCreateManyArgs>(args?: SelectSubset<T, PresupuestoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Presupuestos and returns the data saved in the database.
     * @param {PresupuestoCreateManyAndReturnArgs} args - Arguments to create many Presupuestos.
     * @example
     * // Create many Presupuestos
     * const presupuesto = await prisma.presupuesto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Presupuestos and only return the `id`
     * const presupuestoWithIdOnly = await prisma.presupuesto.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PresupuestoCreateManyAndReturnArgs>(args?: SelectSubset<T, PresupuestoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Presupuesto.
     * @param {PresupuestoDeleteArgs} args - Arguments to delete one Presupuesto.
     * @example
     * // Delete one Presupuesto
     * const Presupuesto = await prisma.presupuesto.delete({
     *   where: {
     *     // ... filter to delete one Presupuesto
     *   }
     * })
     * 
     */
    delete<T extends PresupuestoDeleteArgs>(args: SelectSubset<T, PresupuestoDeleteArgs<ExtArgs>>): Prisma__PresupuestoClient<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Presupuesto.
     * @param {PresupuestoUpdateArgs} args - Arguments to update one Presupuesto.
     * @example
     * // Update one Presupuesto
     * const presupuesto = await prisma.presupuesto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PresupuestoUpdateArgs>(args: SelectSubset<T, PresupuestoUpdateArgs<ExtArgs>>): Prisma__PresupuestoClient<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Presupuestos.
     * @param {PresupuestoDeleteManyArgs} args - Arguments to filter Presupuestos to delete.
     * @example
     * // Delete a few Presupuestos
     * const { count } = await prisma.presupuesto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PresupuestoDeleteManyArgs>(args?: SelectSubset<T, PresupuestoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Presupuestos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PresupuestoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Presupuestos
     * const presupuesto = await prisma.presupuesto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PresupuestoUpdateManyArgs>(args: SelectSubset<T, PresupuestoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Presupuestos and returns the data updated in the database.
     * @param {PresupuestoUpdateManyAndReturnArgs} args - Arguments to update many Presupuestos.
     * @example
     * // Update many Presupuestos
     * const presupuesto = await prisma.presupuesto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Presupuestos and only return the `id`
     * const presupuestoWithIdOnly = await prisma.presupuesto.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PresupuestoUpdateManyAndReturnArgs>(args: SelectSubset<T, PresupuestoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Presupuesto.
     * @param {PresupuestoUpsertArgs} args - Arguments to update or create a Presupuesto.
     * @example
     * // Update or create a Presupuesto
     * const presupuesto = await prisma.presupuesto.upsert({
     *   create: {
     *     // ... data to create a Presupuesto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Presupuesto we want to update
     *   }
     * })
     */
    upsert<T extends PresupuestoUpsertArgs>(args: SelectSubset<T, PresupuestoUpsertArgs<ExtArgs>>): Prisma__PresupuestoClient<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Presupuestos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PresupuestoCountArgs} args - Arguments to filter Presupuestos to count.
     * @example
     * // Count the number of Presupuestos
     * const count = await prisma.presupuesto.count({
     *   where: {
     *     // ... the filter for the Presupuestos we want to count
     *   }
     * })
    **/
    count<T extends PresupuestoCountArgs>(
      args?: Subset<T, PresupuestoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PresupuestoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Presupuesto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PresupuestoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PresupuestoAggregateArgs>(args: Subset<T, PresupuestoAggregateArgs>): Prisma.PrismaPromise<GetPresupuestoAggregateType<T>>

    /**
     * Group by Presupuesto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PresupuestoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PresupuestoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PresupuestoGroupByArgs['orderBy'] }
        : { orderBy?: PresupuestoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PresupuestoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPresupuestoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Presupuesto model
   */
  readonly fields: PresupuestoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Presupuesto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PresupuestoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asignacionesGasto<T extends Presupuesto$asignacionesGastoArgs<ExtArgs> = {}>(args?: Subset<T, Presupuesto$asignacionesGastoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsignacionGastoProyectoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    facturas<T extends Presupuesto$facturasArgs<ExtArgs> = {}>(args?: Subset<T, Presupuesto$facturasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FacturaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    items<T extends Presupuesto$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Presupuesto$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cliente<T extends PersonaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PersonaDefaultArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    empresa<T extends Presupuesto$empresaArgs<ExtArgs> = {}>(args?: Subset<T, Presupuesto$empresaArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    moneda<T extends MonedaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MonedaDefaultArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    presupuestoImpuestos<T extends Presupuesto$presupuestoImpuestosArgs<ExtArgs> = {}>(args?: Subset<T, Presupuesto$presupuestoImpuestosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PresupuestoImpuestoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    recibos<T extends Presupuesto$recibosArgs<ExtArgs> = {}>(args?: Subset<T, Presupuesto$recibosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReciboPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pagosAdmin<T extends Presupuesto$pagosAdminArgs<ExtArgs> = {}>(args?: Subset<T, Presupuesto$pagosAdminArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoAdminPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cobrosCliente<T extends Presupuesto$cobrosClienteArgs<ExtArgs> = {}>(args?: Subset<T, Presupuesto$cobrosClienteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CobroClientePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Presupuesto model
   */
  interface PresupuestoFieldRefs {
    readonly id: FieldRef<"Presupuesto", 'Int'>
    readonly clienteId: FieldRef<"Presupuesto", 'Int'>
    readonly empresaId: FieldRef<"Presupuesto", 'Int'>
    readonly subtotal: FieldRef<"Presupuesto", 'Decimal'>
    readonly impuestos: FieldRef<"Presupuesto", 'Decimal'>
    readonly total: FieldRef<"Presupuesto", 'Decimal'>
    readonly estado: FieldRef<"Presupuesto", 'EstadoPresupuesto'>
    readonly createdAt: FieldRef<"Presupuesto", 'DateTime'>
    readonly updatedAt: FieldRef<"Presupuesto", 'DateTime'>
    readonly monedaId: FieldRef<"Presupuesto", 'Int'>
    readonly tipoCambioFecha: FieldRef<"Presupuesto", 'DateTime'>
    readonly periodoInicio: FieldRef<"Presupuesto", 'DateTime'>
    readonly periodoFin: FieldRef<"Presupuesto", 'DateTime'>
    readonly esRecurrente: FieldRef<"Presupuesto", 'Boolean'>
    readonly frecuencia: FieldRef<"Presupuesto", 'FrecuenciaContrato'>
    readonly renovacionAutomatica: FieldRef<"Presupuesto", 'Boolean'>
    readonly precioPeriodo: FieldRef<"Presupuesto", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * Presupuesto findUnique
   */
  export type PresupuestoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Presupuesto
     */
    select?: PresupuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Presupuesto
     */
    omit?: PresupuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoInclude<ExtArgs> | null
    /**
     * Filter, which Presupuesto to fetch.
     */
    where: PresupuestoWhereUniqueInput
  }

  /**
   * Presupuesto findUniqueOrThrow
   */
  export type PresupuestoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Presupuesto
     */
    select?: PresupuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Presupuesto
     */
    omit?: PresupuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoInclude<ExtArgs> | null
    /**
     * Filter, which Presupuesto to fetch.
     */
    where: PresupuestoWhereUniqueInput
  }

  /**
   * Presupuesto findFirst
   */
  export type PresupuestoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Presupuesto
     */
    select?: PresupuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Presupuesto
     */
    omit?: PresupuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoInclude<ExtArgs> | null
    /**
     * Filter, which Presupuesto to fetch.
     */
    where?: PresupuestoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Presupuestos to fetch.
     */
    orderBy?: PresupuestoOrderByWithRelationInput | PresupuestoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Presupuestos.
     */
    cursor?: PresupuestoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Presupuestos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Presupuestos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Presupuestos.
     */
    distinct?: PresupuestoScalarFieldEnum | PresupuestoScalarFieldEnum[]
  }

  /**
   * Presupuesto findFirstOrThrow
   */
  export type PresupuestoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Presupuesto
     */
    select?: PresupuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Presupuesto
     */
    omit?: PresupuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoInclude<ExtArgs> | null
    /**
     * Filter, which Presupuesto to fetch.
     */
    where?: PresupuestoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Presupuestos to fetch.
     */
    orderBy?: PresupuestoOrderByWithRelationInput | PresupuestoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Presupuestos.
     */
    cursor?: PresupuestoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Presupuestos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Presupuestos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Presupuestos.
     */
    distinct?: PresupuestoScalarFieldEnum | PresupuestoScalarFieldEnum[]
  }

  /**
   * Presupuesto findMany
   */
  export type PresupuestoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Presupuesto
     */
    select?: PresupuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Presupuesto
     */
    omit?: PresupuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoInclude<ExtArgs> | null
    /**
     * Filter, which Presupuestos to fetch.
     */
    where?: PresupuestoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Presupuestos to fetch.
     */
    orderBy?: PresupuestoOrderByWithRelationInput | PresupuestoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Presupuestos.
     */
    cursor?: PresupuestoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Presupuestos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Presupuestos.
     */
    skip?: number
    distinct?: PresupuestoScalarFieldEnum | PresupuestoScalarFieldEnum[]
  }

  /**
   * Presupuesto create
   */
  export type PresupuestoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Presupuesto
     */
    select?: PresupuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Presupuesto
     */
    omit?: PresupuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoInclude<ExtArgs> | null
    /**
     * The data needed to create a Presupuesto.
     */
    data: XOR<PresupuestoCreateInput, PresupuestoUncheckedCreateInput>
  }

  /**
   * Presupuesto createMany
   */
  export type PresupuestoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Presupuestos.
     */
    data: PresupuestoCreateManyInput | PresupuestoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Presupuesto createManyAndReturn
   */
  export type PresupuestoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Presupuesto
     */
    select?: PresupuestoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Presupuesto
     */
    omit?: PresupuestoOmit<ExtArgs> | null
    /**
     * The data used to create many Presupuestos.
     */
    data: PresupuestoCreateManyInput | PresupuestoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Presupuesto update
   */
  export type PresupuestoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Presupuesto
     */
    select?: PresupuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Presupuesto
     */
    omit?: PresupuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoInclude<ExtArgs> | null
    /**
     * The data needed to update a Presupuesto.
     */
    data: XOR<PresupuestoUpdateInput, PresupuestoUncheckedUpdateInput>
    /**
     * Choose, which Presupuesto to update.
     */
    where: PresupuestoWhereUniqueInput
  }

  /**
   * Presupuesto updateMany
   */
  export type PresupuestoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Presupuestos.
     */
    data: XOR<PresupuestoUpdateManyMutationInput, PresupuestoUncheckedUpdateManyInput>
    /**
     * Filter which Presupuestos to update
     */
    where?: PresupuestoWhereInput
    /**
     * Limit how many Presupuestos to update.
     */
    limit?: number
  }

  /**
   * Presupuesto updateManyAndReturn
   */
  export type PresupuestoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Presupuesto
     */
    select?: PresupuestoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Presupuesto
     */
    omit?: PresupuestoOmit<ExtArgs> | null
    /**
     * The data used to update Presupuestos.
     */
    data: XOR<PresupuestoUpdateManyMutationInput, PresupuestoUncheckedUpdateManyInput>
    /**
     * Filter which Presupuestos to update
     */
    where?: PresupuestoWhereInput
    /**
     * Limit how many Presupuestos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Presupuesto upsert
   */
  export type PresupuestoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Presupuesto
     */
    select?: PresupuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Presupuesto
     */
    omit?: PresupuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoInclude<ExtArgs> | null
    /**
     * The filter to search for the Presupuesto to update in case it exists.
     */
    where: PresupuestoWhereUniqueInput
    /**
     * In case the Presupuesto found by the `where` argument doesn't exist, create a new Presupuesto with this data.
     */
    create: XOR<PresupuestoCreateInput, PresupuestoUncheckedCreateInput>
    /**
     * In case the Presupuesto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PresupuestoUpdateInput, PresupuestoUncheckedUpdateInput>
  }

  /**
   * Presupuesto delete
   */
  export type PresupuestoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Presupuesto
     */
    select?: PresupuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Presupuesto
     */
    omit?: PresupuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoInclude<ExtArgs> | null
    /**
     * Filter which Presupuesto to delete.
     */
    where: PresupuestoWhereUniqueInput
  }

  /**
   * Presupuesto deleteMany
   */
  export type PresupuestoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Presupuestos to delete
     */
    where?: PresupuestoWhereInput
    /**
     * Limit how many Presupuestos to delete.
     */
    limit?: number
  }

  /**
   * Presupuesto.asignacionesGasto
   */
  export type Presupuesto$asignacionesGastoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsignacionGastoProyecto
     */
    select?: AsignacionGastoProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsignacionGastoProyecto
     */
    omit?: AsignacionGastoProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsignacionGastoProyectoInclude<ExtArgs> | null
    where?: AsignacionGastoProyectoWhereInput
    orderBy?: AsignacionGastoProyectoOrderByWithRelationInput | AsignacionGastoProyectoOrderByWithRelationInput[]
    cursor?: AsignacionGastoProyectoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AsignacionGastoProyectoScalarFieldEnum | AsignacionGastoProyectoScalarFieldEnum[]
  }

  /**
   * Presupuesto.facturas
   */
  export type Presupuesto$facturasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura
     */
    select?: FacturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura
     */
    omit?: FacturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacturaInclude<ExtArgs> | null
    where?: FacturaWhereInput
    orderBy?: FacturaOrderByWithRelationInput | FacturaOrderByWithRelationInput[]
    cursor?: FacturaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FacturaScalarFieldEnum | FacturaScalarFieldEnum[]
  }

  /**
   * Presupuesto.items
   */
  export type Presupuesto$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    where?: ItemWhereInput
    orderBy?: ItemOrderByWithRelationInput | ItemOrderByWithRelationInput[]
    cursor?: ItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ItemScalarFieldEnum | ItemScalarFieldEnum[]
  }

  /**
   * Presupuesto.empresa
   */
  export type Presupuesto$empresaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    where?: EmpresaWhereInput
  }

  /**
   * Presupuesto.presupuestoImpuestos
   */
  export type Presupuesto$presupuestoImpuestosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PresupuestoImpuesto
     */
    select?: PresupuestoImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PresupuestoImpuesto
     */
    omit?: PresupuestoImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoImpuestoInclude<ExtArgs> | null
    where?: PresupuestoImpuestoWhereInput
    orderBy?: PresupuestoImpuestoOrderByWithRelationInput | PresupuestoImpuestoOrderByWithRelationInput[]
    cursor?: PresupuestoImpuestoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PresupuestoImpuestoScalarFieldEnum | PresupuestoImpuestoScalarFieldEnum[]
  }

  /**
   * Presupuesto.recibos
   */
  export type Presupuesto$recibosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recibo
     */
    select?: ReciboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recibo
     */
    omit?: ReciboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReciboInclude<ExtArgs> | null
    where?: ReciboWhereInput
    orderBy?: ReciboOrderByWithRelationInput | ReciboOrderByWithRelationInput[]
    cursor?: ReciboWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReciboScalarFieldEnum | ReciboScalarFieldEnum[]
  }

  /**
   * Presupuesto.pagosAdmin
   */
  export type Presupuesto$pagosAdminArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PagoAdmin
     */
    select?: PagoAdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PagoAdmin
     */
    omit?: PagoAdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoAdminInclude<ExtArgs> | null
    where?: PagoAdminWhereInput
    orderBy?: PagoAdminOrderByWithRelationInput | PagoAdminOrderByWithRelationInput[]
    cursor?: PagoAdminWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PagoAdminScalarFieldEnum | PagoAdminScalarFieldEnum[]
  }

  /**
   * Presupuesto.cobrosCliente
   */
  export type Presupuesto$cobrosClienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CobroCliente
     */
    select?: CobroClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CobroCliente
     */
    omit?: CobroClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CobroClienteInclude<ExtArgs> | null
    where?: CobroClienteWhereInput
    orderBy?: CobroClienteOrderByWithRelationInput | CobroClienteOrderByWithRelationInput[]
    cursor?: CobroClienteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CobroClienteScalarFieldEnum | CobroClienteScalarFieldEnum[]
  }

  /**
   * Presupuesto without action
   */
  export type PresupuestoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Presupuesto
     */
    select?: PresupuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Presupuesto
     */
    omit?: PresupuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoInclude<ExtArgs> | null
  }


  /**
   * Model Item
   */

  export type AggregateItem = {
    _count: ItemCountAggregateOutputType | null
    _avg: ItemAvgAggregateOutputType | null
    _sum: ItemSumAggregateOutputType | null
    _min: ItemMinAggregateOutputType | null
    _max: ItemMaxAggregateOutputType | null
  }

  export type ItemAvgAggregateOutputType = {
    id: number | null
    presupuestoId: number | null
    productoId: number | null
    servicioId: number | null
    cantidad: number | null
    precioUnitario: Decimal | null
  }

  export type ItemSumAggregateOutputType = {
    id: number | null
    presupuestoId: number | null
    productoId: number | null
    servicioId: number | null
    cantidad: number | null
    precioUnitario: Decimal | null
  }

  export type ItemMinAggregateOutputType = {
    id: number | null
    presupuestoId: number | null
    productoId: number | null
    servicioId: number | null
    cantidad: number | null
    precioUnitario: Decimal | null
  }

  export type ItemMaxAggregateOutputType = {
    id: number | null
    presupuestoId: number | null
    productoId: number | null
    servicioId: number | null
    cantidad: number | null
    precioUnitario: Decimal | null
  }

  export type ItemCountAggregateOutputType = {
    id: number
    presupuestoId: number
    productoId: number
    servicioId: number
    cantidad: number
    precioUnitario: number
    _all: number
  }


  export type ItemAvgAggregateInputType = {
    id?: true
    presupuestoId?: true
    productoId?: true
    servicioId?: true
    cantidad?: true
    precioUnitario?: true
  }

  export type ItemSumAggregateInputType = {
    id?: true
    presupuestoId?: true
    productoId?: true
    servicioId?: true
    cantidad?: true
    precioUnitario?: true
  }

  export type ItemMinAggregateInputType = {
    id?: true
    presupuestoId?: true
    productoId?: true
    servicioId?: true
    cantidad?: true
    precioUnitario?: true
  }

  export type ItemMaxAggregateInputType = {
    id?: true
    presupuestoId?: true
    productoId?: true
    servicioId?: true
    cantidad?: true
    precioUnitario?: true
  }

  export type ItemCountAggregateInputType = {
    id?: true
    presupuestoId?: true
    productoId?: true
    servicioId?: true
    cantidad?: true
    precioUnitario?: true
    _all?: true
  }

  export type ItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Item to aggregate.
     */
    where?: ItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Items to fetch.
     */
    orderBy?: ItemOrderByWithRelationInput | ItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Items
    **/
    _count?: true | ItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ItemMaxAggregateInputType
  }

  export type GetItemAggregateType<T extends ItemAggregateArgs> = {
        [P in keyof T & keyof AggregateItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateItem[P]>
      : GetScalarType<T[P], AggregateItem[P]>
  }




  export type ItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItemWhereInput
    orderBy?: ItemOrderByWithAggregationInput | ItemOrderByWithAggregationInput[]
    by: ItemScalarFieldEnum[] | ItemScalarFieldEnum
    having?: ItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ItemCountAggregateInputType | true
    _avg?: ItemAvgAggregateInputType
    _sum?: ItemSumAggregateInputType
    _min?: ItemMinAggregateInputType
    _max?: ItemMaxAggregateInputType
  }

  export type ItemGroupByOutputType = {
    id: number
    presupuestoId: number
    productoId: number | null
    servicioId: number | null
    cantidad: number
    precioUnitario: Decimal
    _count: ItemCountAggregateOutputType | null
    _avg: ItemAvgAggregateOutputType | null
    _sum: ItemSumAggregateOutputType | null
    _min: ItemMinAggregateOutputType | null
    _max: ItemMaxAggregateOutputType | null
  }

  type GetItemGroupByPayload<T extends ItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ItemGroupByOutputType[P]>
            : GetScalarType<T[P], ItemGroupByOutputType[P]>
        }
      >
    >


  export type ItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    presupuestoId?: boolean
    productoId?: boolean
    servicioId?: boolean
    cantidad?: boolean
    precioUnitario?: boolean
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
    producto?: boolean | Item$productoArgs<ExtArgs>
    servicio?: boolean | Item$servicioArgs<ExtArgs>
  }, ExtArgs["result"]["item"]>

  export type ItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    presupuestoId?: boolean
    productoId?: boolean
    servicioId?: boolean
    cantidad?: boolean
    precioUnitario?: boolean
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
    producto?: boolean | Item$productoArgs<ExtArgs>
    servicio?: boolean | Item$servicioArgs<ExtArgs>
  }, ExtArgs["result"]["item"]>

  export type ItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    presupuestoId?: boolean
    productoId?: boolean
    servicioId?: boolean
    cantidad?: boolean
    precioUnitario?: boolean
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
    producto?: boolean | Item$productoArgs<ExtArgs>
    servicio?: boolean | Item$servicioArgs<ExtArgs>
  }, ExtArgs["result"]["item"]>

  export type ItemSelectScalar = {
    id?: boolean
    presupuestoId?: boolean
    productoId?: boolean
    servicioId?: boolean
    cantidad?: boolean
    precioUnitario?: boolean
  }

  export type ItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "presupuestoId" | "productoId" | "servicioId" | "cantidad" | "precioUnitario", ExtArgs["result"]["item"]>
  export type ItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
    producto?: boolean | Item$productoArgs<ExtArgs>
    servicio?: boolean | Item$servicioArgs<ExtArgs>
  }
  export type ItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
    producto?: boolean | Item$productoArgs<ExtArgs>
    servicio?: boolean | Item$servicioArgs<ExtArgs>
  }
  export type ItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
    producto?: boolean | Item$productoArgs<ExtArgs>
    servicio?: boolean | Item$servicioArgs<ExtArgs>
  }

  export type $ItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Item"
    objects: {
      presupuesto: Prisma.$PresupuestoPayload<ExtArgs>
      producto: Prisma.$ProductoPayload<ExtArgs> | null
      servicio: Prisma.$ServicioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      presupuestoId: number
      productoId: number | null
      servicioId: number | null
      cantidad: number
      precioUnitario: Prisma.Decimal
    }, ExtArgs["result"]["item"]>
    composites: {}
  }

  type ItemGetPayload<S extends boolean | null | undefined | ItemDefaultArgs> = $Result.GetResult<Prisma.$ItemPayload, S>

  type ItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ItemCountAggregateInputType | true
    }

  export interface ItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Item'], meta: { name: 'Item' } }
    /**
     * Find zero or one Item that matches the filter.
     * @param {ItemFindUniqueArgs} args - Arguments to find a Item
     * @example
     * // Get one Item
     * const item = await prisma.item.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ItemFindUniqueArgs>(args: SelectSubset<T, ItemFindUniqueArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Item that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ItemFindUniqueOrThrowArgs} args - Arguments to find a Item
     * @example
     * // Get one Item
     * const item = await prisma.item.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ItemFindUniqueOrThrowArgs>(args: SelectSubset<T, ItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Item that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemFindFirstArgs} args - Arguments to find a Item
     * @example
     * // Get one Item
     * const item = await prisma.item.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ItemFindFirstArgs>(args?: SelectSubset<T, ItemFindFirstArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Item that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemFindFirstOrThrowArgs} args - Arguments to find a Item
     * @example
     * // Get one Item
     * const item = await prisma.item.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ItemFindFirstOrThrowArgs>(args?: SelectSubset<T, ItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Items
     * const items = await prisma.item.findMany()
     * 
     * // Get first 10 Items
     * const items = await prisma.item.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const itemWithIdOnly = await prisma.item.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ItemFindManyArgs>(args?: SelectSubset<T, ItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Item.
     * @param {ItemCreateArgs} args - Arguments to create a Item.
     * @example
     * // Create one Item
     * const Item = await prisma.item.create({
     *   data: {
     *     // ... data to create a Item
     *   }
     * })
     * 
     */
    create<T extends ItemCreateArgs>(args: SelectSubset<T, ItemCreateArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Items.
     * @param {ItemCreateManyArgs} args - Arguments to create many Items.
     * @example
     * // Create many Items
     * const item = await prisma.item.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ItemCreateManyArgs>(args?: SelectSubset<T, ItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Items and returns the data saved in the database.
     * @param {ItemCreateManyAndReturnArgs} args - Arguments to create many Items.
     * @example
     * // Create many Items
     * const item = await prisma.item.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Items and only return the `id`
     * const itemWithIdOnly = await prisma.item.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ItemCreateManyAndReturnArgs>(args?: SelectSubset<T, ItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Item.
     * @param {ItemDeleteArgs} args - Arguments to delete one Item.
     * @example
     * // Delete one Item
     * const Item = await prisma.item.delete({
     *   where: {
     *     // ... filter to delete one Item
     *   }
     * })
     * 
     */
    delete<T extends ItemDeleteArgs>(args: SelectSubset<T, ItemDeleteArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Item.
     * @param {ItemUpdateArgs} args - Arguments to update one Item.
     * @example
     * // Update one Item
     * const item = await prisma.item.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ItemUpdateArgs>(args: SelectSubset<T, ItemUpdateArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Items.
     * @param {ItemDeleteManyArgs} args - Arguments to filter Items to delete.
     * @example
     * // Delete a few Items
     * const { count } = await prisma.item.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ItemDeleteManyArgs>(args?: SelectSubset<T, ItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Items
     * const item = await prisma.item.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ItemUpdateManyArgs>(args: SelectSubset<T, ItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Items and returns the data updated in the database.
     * @param {ItemUpdateManyAndReturnArgs} args - Arguments to update many Items.
     * @example
     * // Update many Items
     * const item = await prisma.item.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Items and only return the `id`
     * const itemWithIdOnly = await prisma.item.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ItemUpdateManyAndReturnArgs>(args: SelectSubset<T, ItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Item.
     * @param {ItemUpsertArgs} args - Arguments to update or create a Item.
     * @example
     * // Update or create a Item
     * const item = await prisma.item.upsert({
     *   create: {
     *     // ... data to create a Item
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Item we want to update
     *   }
     * })
     */
    upsert<T extends ItemUpsertArgs>(args: SelectSubset<T, ItemUpsertArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemCountArgs} args - Arguments to filter Items to count.
     * @example
     * // Count the number of Items
     * const count = await prisma.item.count({
     *   where: {
     *     // ... the filter for the Items we want to count
     *   }
     * })
    **/
    count<T extends ItemCountArgs>(
      args?: Subset<T, ItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Item.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ItemAggregateArgs>(args: Subset<T, ItemAggregateArgs>): Prisma.PrismaPromise<GetItemAggregateType<T>>

    /**
     * Group by Item.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ItemGroupByArgs['orderBy'] }
        : { orderBy?: ItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Item model
   */
  readonly fields: ItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Item.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    presupuesto<T extends PresupuestoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PresupuestoDefaultArgs<ExtArgs>>): Prisma__PresupuestoClient<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    producto<T extends Item$productoArgs<ExtArgs> = {}>(args?: Subset<T, Item$productoArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    servicio<T extends Item$servicioArgs<ExtArgs> = {}>(args?: Subset<T, Item$servicioArgs<ExtArgs>>): Prisma__ServicioClient<$Result.GetResult<Prisma.$ServicioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Item model
   */
  interface ItemFieldRefs {
    readonly id: FieldRef<"Item", 'Int'>
    readonly presupuestoId: FieldRef<"Item", 'Int'>
    readonly productoId: FieldRef<"Item", 'Int'>
    readonly servicioId: FieldRef<"Item", 'Int'>
    readonly cantidad: FieldRef<"Item", 'Int'>
    readonly precioUnitario: FieldRef<"Item", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * Item findUnique
   */
  export type ItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * Filter, which Item to fetch.
     */
    where: ItemWhereUniqueInput
  }

  /**
   * Item findUniqueOrThrow
   */
  export type ItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * Filter, which Item to fetch.
     */
    where: ItemWhereUniqueInput
  }

  /**
   * Item findFirst
   */
  export type ItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * Filter, which Item to fetch.
     */
    where?: ItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Items to fetch.
     */
    orderBy?: ItemOrderByWithRelationInput | ItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Items.
     */
    cursor?: ItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Items.
     */
    distinct?: ItemScalarFieldEnum | ItemScalarFieldEnum[]
  }

  /**
   * Item findFirstOrThrow
   */
  export type ItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * Filter, which Item to fetch.
     */
    where?: ItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Items to fetch.
     */
    orderBy?: ItemOrderByWithRelationInput | ItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Items.
     */
    cursor?: ItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Items.
     */
    distinct?: ItemScalarFieldEnum | ItemScalarFieldEnum[]
  }

  /**
   * Item findMany
   */
  export type ItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * Filter, which Items to fetch.
     */
    where?: ItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Items to fetch.
     */
    orderBy?: ItemOrderByWithRelationInput | ItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Items.
     */
    cursor?: ItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Items.
     */
    skip?: number
    distinct?: ItemScalarFieldEnum | ItemScalarFieldEnum[]
  }

  /**
   * Item create
   */
  export type ItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * The data needed to create a Item.
     */
    data: XOR<ItemCreateInput, ItemUncheckedCreateInput>
  }

  /**
   * Item createMany
   */
  export type ItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Items.
     */
    data: ItemCreateManyInput | ItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Item createManyAndReturn
   */
  export type ItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * The data used to create many Items.
     */
    data: ItemCreateManyInput | ItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Item update
   */
  export type ItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * The data needed to update a Item.
     */
    data: XOR<ItemUpdateInput, ItemUncheckedUpdateInput>
    /**
     * Choose, which Item to update.
     */
    where: ItemWhereUniqueInput
  }

  /**
   * Item updateMany
   */
  export type ItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Items.
     */
    data: XOR<ItemUpdateManyMutationInput, ItemUncheckedUpdateManyInput>
    /**
     * Filter which Items to update
     */
    where?: ItemWhereInput
    /**
     * Limit how many Items to update.
     */
    limit?: number
  }

  /**
   * Item updateManyAndReturn
   */
  export type ItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * The data used to update Items.
     */
    data: XOR<ItemUpdateManyMutationInput, ItemUncheckedUpdateManyInput>
    /**
     * Filter which Items to update
     */
    where?: ItemWhereInput
    /**
     * Limit how many Items to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Item upsert
   */
  export type ItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * The filter to search for the Item to update in case it exists.
     */
    where: ItemWhereUniqueInput
    /**
     * In case the Item found by the `where` argument doesn't exist, create a new Item with this data.
     */
    create: XOR<ItemCreateInput, ItemUncheckedCreateInput>
    /**
     * In case the Item was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ItemUpdateInput, ItemUncheckedUpdateInput>
  }

  /**
   * Item delete
   */
  export type ItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * Filter which Item to delete.
     */
    where: ItemWhereUniqueInput
  }

  /**
   * Item deleteMany
   */
  export type ItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Items to delete
     */
    where?: ItemWhereInput
    /**
     * Limit how many Items to delete.
     */
    limit?: number
  }

  /**
   * Item.producto
   */
  export type Item$productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
  }

  /**
   * Item.servicio
   */
  export type Item$servicioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicio
     */
    select?: ServicioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Servicio
     */
    omit?: ServicioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicioInclude<ExtArgs> | null
    where?: ServicioWhereInput
  }

  /**
   * Item without action
   */
  export type ItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
  }


  /**
   * Model Factura
   */

  export type AggregateFactura = {
    _count: FacturaCountAggregateOutputType | null
    _avg: FacturaAvgAggregateOutputType | null
    _sum: FacturaSumAggregateOutputType | null
    _min: FacturaMinAggregateOutputType | null
    _max: FacturaMaxAggregateOutputType | null
  }

  export type FacturaAvgAggregateOutputType = {
    id: number | null
    presupuestoId: number | null
    empresaId: number | null
    subtotal: Decimal | null
    impuestos: Decimal | null
    total: Decimal | null
    impuestoAplicadoId: number | null
    monedaId: number | null
  }

  export type FacturaSumAggregateOutputType = {
    id: number | null
    presupuestoId: number | null
    empresaId: number | null
    subtotal: Decimal | null
    impuestos: Decimal | null
    total: Decimal | null
    impuestoAplicadoId: number | null
    monedaId: number | null
  }

  export type FacturaMinAggregateOutputType = {
    id: number | null
    numero: string | null
    presupuestoId: number | null
    empresaId: number | null
    fecha: Date | null
    subtotal: Decimal | null
    impuestos: Decimal | null
    total: Decimal | null
    estado: $Enums.EstadoFactura | null
    impuestoAplicadoId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    monedaId: number | null
    tipoCambioFecha: Date | null
  }

  export type FacturaMaxAggregateOutputType = {
    id: number | null
    numero: string | null
    presupuestoId: number | null
    empresaId: number | null
    fecha: Date | null
    subtotal: Decimal | null
    impuestos: Decimal | null
    total: Decimal | null
    estado: $Enums.EstadoFactura | null
    impuestoAplicadoId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    monedaId: number | null
    tipoCambioFecha: Date | null
  }

  export type FacturaCountAggregateOutputType = {
    id: number
    numero: number
    presupuestoId: number
    empresaId: number
    fecha: number
    subtotal: number
    impuestos: number
    total: number
    estado: number
    impuestoAplicadoId: number
    createdAt: number
    updatedAt: number
    monedaId: number
    tipoCambioFecha: number
    _all: number
  }


  export type FacturaAvgAggregateInputType = {
    id?: true
    presupuestoId?: true
    empresaId?: true
    subtotal?: true
    impuestos?: true
    total?: true
    impuestoAplicadoId?: true
    monedaId?: true
  }

  export type FacturaSumAggregateInputType = {
    id?: true
    presupuestoId?: true
    empresaId?: true
    subtotal?: true
    impuestos?: true
    total?: true
    impuestoAplicadoId?: true
    monedaId?: true
  }

  export type FacturaMinAggregateInputType = {
    id?: true
    numero?: true
    presupuestoId?: true
    empresaId?: true
    fecha?: true
    subtotal?: true
    impuestos?: true
    total?: true
    estado?: true
    impuestoAplicadoId?: true
    createdAt?: true
    updatedAt?: true
    monedaId?: true
    tipoCambioFecha?: true
  }

  export type FacturaMaxAggregateInputType = {
    id?: true
    numero?: true
    presupuestoId?: true
    empresaId?: true
    fecha?: true
    subtotal?: true
    impuestos?: true
    total?: true
    estado?: true
    impuestoAplicadoId?: true
    createdAt?: true
    updatedAt?: true
    monedaId?: true
    tipoCambioFecha?: true
  }

  export type FacturaCountAggregateInputType = {
    id?: true
    numero?: true
    presupuestoId?: true
    empresaId?: true
    fecha?: true
    subtotal?: true
    impuestos?: true
    total?: true
    estado?: true
    impuestoAplicadoId?: true
    createdAt?: true
    updatedAt?: true
    monedaId?: true
    tipoCambioFecha?: true
    _all?: true
  }

  export type FacturaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Factura to aggregate.
     */
    where?: FacturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Facturas to fetch.
     */
    orderBy?: FacturaOrderByWithRelationInput | FacturaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FacturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Facturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Facturas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Facturas
    **/
    _count?: true | FacturaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FacturaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FacturaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FacturaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FacturaMaxAggregateInputType
  }

  export type GetFacturaAggregateType<T extends FacturaAggregateArgs> = {
        [P in keyof T & keyof AggregateFactura]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFactura[P]>
      : GetScalarType<T[P], AggregateFactura[P]>
  }




  export type FacturaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FacturaWhereInput
    orderBy?: FacturaOrderByWithAggregationInput | FacturaOrderByWithAggregationInput[]
    by: FacturaScalarFieldEnum[] | FacturaScalarFieldEnum
    having?: FacturaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FacturaCountAggregateInputType | true
    _avg?: FacturaAvgAggregateInputType
    _sum?: FacturaSumAggregateInputType
    _min?: FacturaMinAggregateInputType
    _max?: FacturaMaxAggregateInputType
  }

  export type FacturaGroupByOutputType = {
    id: number
    numero: string
    presupuestoId: number
    empresaId: number | null
    fecha: Date
    subtotal: Decimal
    impuestos: Decimal
    total: Decimal
    estado: $Enums.EstadoFactura
    impuestoAplicadoId: number
    createdAt: Date
    updatedAt: Date
    monedaId: number
    tipoCambioFecha: Date | null
    _count: FacturaCountAggregateOutputType | null
    _avg: FacturaAvgAggregateOutputType | null
    _sum: FacturaSumAggregateOutputType | null
    _min: FacturaMinAggregateOutputType | null
    _max: FacturaMaxAggregateOutputType | null
  }

  type GetFacturaGroupByPayload<T extends FacturaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FacturaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FacturaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FacturaGroupByOutputType[P]>
            : GetScalarType<T[P], FacturaGroupByOutputType[P]>
        }
      >
    >


  export type FacturaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numero?: boolean
    presupuestoId?: boolean
    empresaId?: boolean
    fecha?: boolean
    subtotal?: boolean
    impuestos?: boolean
    total?: boolean
    estado?: boolean
    impuestoAplicadoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
    tipoCambioFecha?: boolean
    empresa?: boolean | Factura$empresaArgs<ExtArgs>
    impuestoAplicado?: boolean | ImpuestoDefaultArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["factura"]>

  export type FacturaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numero?: boolean
    presupuestoId?: boolean
    empresaId?: boolean
    fecha?: boolean
    subtotal?: boolean
    impuestos?: boolean
    total?: boolean
    estado?: boolean
    impuestoAplicadoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
    tipoCambioFecha?: boolean
    empresa?: boolean | Factura$empresaArgs<ExtArgs>
    impuestoAplicado?: boolean | ImpuestoDefaultArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["factura"]>

  export type FacturaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numero?: boolean
    presupuestoId?: boolean
    empresaId?: boolean
    fecha?: boolean
    subtotal?: boolean
    impuestos?: boolean
    total?: boolean
    estado?: boolean
    impuestoAplicadoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
    tipoCambioFecha?: boolean
    empresa?: boolean | Factura$empresaArgs<ExtArgs>
    impuestoAplicado?: boolean | ImpuestoDefaultArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["factura"]>

  export type FacturaSelectScalar = {
    id?: boolean
    numero?: boolean
    presupuestoId?: boolean
    empresaId?: boolean
    fecha?: boolean
    subtotal?: boolean
    impuestos?: boolean
    total?: boolean
    estado?: boolean
    impuestoAplicadoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
    tipoCambioFecha?: boolean
  }

  export type FacturaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "numero" | "presupuestoId" | "empresaId" | "fecha" | "subtotal" | "impuestos" | "total" | "estado" | "impuestoAplicadoId" | "createdAt" | "updatedAt" | "monedaId" | "tipoCambioFecha", ExtArgs["result"]["factura"]>
  export type FacturaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empresa?: boolean | Factura$empresaArgs<ExtArgs>
    impuestoAplicado?: boolean | ImpuestoDefaultArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
  }
  export type FacturaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empresa?: boolean | Factura$empresaArgs<ExtArgs>
    impuestoAplicado?: boolean | ImpuestoDefaultArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
  }
  export type FacturaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empresa?: boolean | Factura$empresaArgs<ExtArgs>
    impuestoAplicado?: boolean | ImpuestoDefaultArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
  }

  export type $FacturaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Factura"
    objects: {
      empresa: Prisma.$EmpresaPayload<ExtArgs> | null
      impuestoAplicado: Prisma.$ImpuestoPayload<ExtArgs>
      moneda: Prisma.$MonedaPayload<ExtArgs>
      presupuesto: Prisma.$PresupuestoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      numero: string
      presupuestoId: number
      empresaId: number | null
      fecha: Date
      subtotal: Prisma.Decimal
      impuestos: Prisma.Decimal
      total: Prisma.Decimal
      estado: $Enums.EstadoFactura
      impuestoAplicadoId: number
      createdAt: Date
      updatedAt: Date
      monedaId: number
      tipoCambioFecha: Date | null
    }, ExtArgs["result"]["factura"]>
    composites: {}
  }

  type FacturaGetPayload<S extends boolean | null | undefined | FacturaDefaultArgs> = $Result.GetResult<Prisma.$FacturaPayload, S>

  type FacturaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FacturaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FacturaCountAggregateInputType | true
    }

  export interface FacturaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Factura'], meta: { name: 'Factura' } }
    /**
     * Find zero or one Factura that matches the filter.
     * @param {FacturaFindUniqueArgs} args - Arguments to find a Factura
     * @example
     * // Get one Factura
     * const factura = await prisma.factura.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FacturaFindUniqueArgs>(args: SelectSubset<T, FacturaFindUniqueArgs<ExtArgs>>): Prisma__FacturaClient<$Result.GetResult<Prisma.$FacturaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Factura that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FacturaFindUniqueOrThrowArgs} args - Arguments to find a Factura
     * @example
     * // Get one Factura
     * const factura = await prisma.factura.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FacturaFindUniqueOrThrowArgs>(args: SelectSubset<T, FacturaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FacturaClient<$Result.GetResult<Prisma.$FacturaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Factura that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacturaFindFirstArgs} args - Arguments to find a Factura
     * @example
     * // Get one Factura
     * const factura = await prisma.factura.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FacturaFindFirstArgs>(args?: SelectSubset<T, FacturaFindFirstArgs<ExtArgs>>): Prisma__FacturaClient<$Result.GetResult<Prisma.$FacturaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Factura that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacturaFindFirstOrThrowArgs} args - Arguments to find a Factura
     * @example
     * // Get one Factura
     * const factura = await prisma.factura.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FacturaFindFirstOrThrowArgs>(args?: SelectSubset<T, FacturaFindFirstOrThrowArgs<ExtArgs>>): Prisma__FacturaClient<$Result.GetResult<Prisma.$FacturaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Facturas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacturaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Facturas
     * const facturas = await prisma.factura.findMany()
     * 
     * // Get first 10 Facturas
     * const facturas = await prisma.factura.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const facturaWithIdOnly = await prisma.factura.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FacturaFindManyArgs>(args?: SelectSubset<T, FacturaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FacturaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Factura.
     * @param {FacturaCreateArgs} args - Arguments to create a Factura.
     * @example
     * // Create one Factura
     * const Factura = await prisma.factura.create({
     *   data: {
     *     // ... data to create a Factura
     *   }
     * })
     * 
     */
    create<T extends FacturaCreateArgs>(args: SelectSubset<T, FacturaCreateArgs<ExtArgs>>): Prisma__FacturaClient<$Result.GetResult<Prisma.$FacturaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Facturas.
     * @param {FacturaCreateManyArgs} args - Arguments to create many Facturas.
     * @example
     * // Create many Facturas
     * const factura = await prisma.factura.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FacturaCreateManyArgs>(args?: SelectSubset<T, FacturaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Facturas and returns the data saved in the database.
     * @param {FacturaCreateManyAndReturnArgs} args - Arguments to create many Facturas.
     * @example
     * // Create many Facturas
     * const factura = await prisma.factura.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Facturas and only return the `id`
     * const facturaWithIdOnly = await prisma.factura.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FacturaCreateManyAndReturnArgs>(args?: SelectSubset<T, FacturaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FacturaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Factura.
     * @param {FacturaDeleteArgs} args - Arguments to delete one Factura.
     * @example
     * // Delete one Factura
     * const Factura = await prisma.factura.delete({
     *   where: {
     *     // ... filter to delete one Factura
     *   }
     * })
     * 
     */
    delete<T extends FacturaDeleteArgs>(args: SelectSubset<T, FacturaDeleteArgs<ExtArgs>>): Prisma__FacturaClient<$Result.GetResult<Prisma.$FacturaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Factura.
     * @param {FacturaUpdateArgs} args - Arguments to update one Factura.
     * @example
     * // Update one Factura
     * const factura = await prisma.factura.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FacturaUpdateArgs>(args: SelectSubset<T, FacturaUpdateArgs<ExtArgs>>): Prisma__FacturaClient<$Result.GetResult<Prisma.$FacturaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Facturas.
     * @param {FacturaDeleteManyArgs} args - Arguments to filter Facturas to delete.
     * @example
     * // Delete a few Facturas
     * const { count } = await prisma.factura.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FacturaDeleteManyArgs>(args?: SelectSubset<T, FacturaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Facturas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacturaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Facturas
     * const factura = await prisma.factura.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FacturaUpdateManyArgs>(args: SelectSubset<T, FacturaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Facturas and returns the data updated in the database.
     * @param {FacturaUpdateManyAndReturnArgs} args - Arguments to update many Facturas.
     * @example
     * // Update many Facturas
     * const factura = await prisma.factura.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Facturas and only return the `id`
     * const facturaWithIdOnly = await prisma.factura.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FacturaUpdateManyAndReturnArgs>(args: SelectSubset<T, FacturaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FacturaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Factura.
     * @param {FacturaUpsertArgs} args - Arguments to update or create a Factura.
     * @example
     * // Update or create a Factura
     * const factura = await prisma.factura.upsert({
     *   create: {
     *     // ... data to create a Factura
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Factura we want to update
     *   }
     * })
     */
    upsert<T extends FacturaUpsertArgs>(args: SelectSubset<T, FacturaUpsertArgs<ExtArgs>>): Prisma__FacturaClient<$Result.GetResult<Prisma.$FacturaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Facturas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacturaCountArgs} args - Arguments to filter Facturas to count.
     * @example
     * // Count the number of Facturas
     * const count = await prisma.factura.count({
     *   where: {
     *     // ... the filter for the Facturas we want to count
     *   }
     * })
    **/
    count<T extends FacturaCountArgs>(
      args?: Subset<T, FacturaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FacturaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Factura.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacturaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FacturaAggregateArgs>(args: Subset<T, FacturaAggregateArgs>): Prisma.PrismaPromise<GetFacturaAggregateType<T>>

    /**
     * Group by Factura.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacturaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FacturaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FacturaGroupByArgs['orderBy'] }
        : { orderBy?: FacturaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FacturaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFacturaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Factura model
   */
  readonly fields: FacturaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Factura.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FacturaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    empresa<T extends Factura$empresaArgs<ExtArgs> = {}>(args?: Subset<T, Factura$empresaArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    impuestoAplicado<T extends ImpuestoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ImpuestoDefaultArgs<ExtArgs>>): Prisma__ImpuestoClient<$Result.GetResult<Prisma.$ImpuestoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    moneda<T extends MonedaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MonedaDefaultArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    presupuesto<T extends PresupuestoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PresupuestoDefaultArgs<ExtArgs>>): Prisma__PresupuestoClient<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Factura model
   */
  interface FacturaFieldRefs {
    readonly id: FieldRef<"Factura", 'Int'>
    readonly numero: FieldRef<"Factura", 'String'>
    readonly presupuestoId: FieldRef<"Factura", 'Int'>
    readonly empresaId: FieldRef<"Factura", 'Int'>
    readonly fecha: FieldRef<"Factura", 'DateTime'>
    readonly subtotal: FieldRef<"Factura", 'Decimal'>
    readonly impuestos: FieldRef<"Factura", 'Decimal'>
    readonly total: FieldRef<"Factura", 'Decimal'>
    readonly estado: FieldRef<"Factura", 'EstadoFactura'>
    readonly impuestoAplicadoId: FieldRef<"Factura", 'Int'>
    readonly createdAt: FieldRef<"Factura", 'DateTime'>
    readonly updatedAt: FieldRef<"Factura", 'DateTime'>
    readonly monedaId: FieldRef<"Factura", 'Int'>
    readonly tipoCambioFecha: FieldRef<"Factura", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Factura findUnique
   */
  export type FacturaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura
     */
    select?: FacturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura
     */
    omit?: FacturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacturaInclude<ExtArgs> | null
    /**
     * Filter, which Factura to fetch.
     */
    where: FacturaWhereUniqueInput
  }

  /**
   * Factura findUniqueOrThrow
   */
  export type FacturaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura
     */
    select?: FacturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura
     */
    omit?: FacturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacturaInclude<ExtArgs> | null
    /**
     * Filter, which Factura to fetch.
     */
    where: FacturaWhereUniqueInput
  }

  /**
   * Factura findFirst
   */
  export type FacturaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura
     */
    select?: FacturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura
     */
    omit?: FacturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacturaInclude<ExtArgs> | null
    /**
     * Filter, which Factura to fetch.
     */
    where?: FacturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Facturas to fetch.
     */
    orderBy?: FacturaOrderByWithRelationInput | FacturaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Facturas.
     */
    cursor?: FacturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Facturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Facturas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Facturas.
     */
    distinct?: FacturaScalarFieldEnum | FacturaScalarFieldEnum[]
  }

  /**
   * Factura findFirstOrThrow
   */
  export type FacturaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura
     */
    select?: FacturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura
     */
    omit?: FacturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacturaInclude<ExtArgs> | null
    /**
     * Filter, which Factura to fetch.
     */
    where?: FacturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Facturas to fetch.
     */
    orderBy?: FacturaOrderByWithRelationInput | FacturaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Facturas.
     */
    cursor?: FacturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Facturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Facturas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Facturas.
     */
    distinct?: FacturaScalarFieldEnum | FacturaScalarFieldEnum[]
  }

  /**
   * Factura findMany
   */
  export type FacturaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura
     */
    select?: FacturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura
     */
    omit?: FacturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacturaInclude<ExtArgs> | null
    /**
     * Filter, which Facturas to fetch.
     */
    where?: FacturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Facturas to fetch.
     */
    orderBy?: FacturaOrderByWithRelationInput | FacturaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Facturas.
     */
    cursor?: FacturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Facturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Facturas.
     */
    skip?: number
    distinct?: FacturaScalarFieldEnum | FacturaScalarFieldEnum[]
  }

  /**
   * Factura create
   */
  export type FacturaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura
     */
    select?: FacturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura
     */
    omit?: FacturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacturaInclude<ExtArgs> | null
    /**
     * The data needed to create a Factura.
     */
    data: XOR<FacturaCreateInput, FacturaUncheckedCreateInput>
  }

  /**
   * Factura createMany
   */
  export type FacturaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Facturas.
     */
    data: FacturaCreateManyInput | FacturaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Factura createManyAndReturn
   */
  export type FacturaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura
     */
    select?: FacturaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Factura
     */
    omit?: FacturaOmit<ExtArgs> | null
    /**
     * The data used to create many Facturas.
     */
    data: FacturaCreateManyInput | FacturaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacturaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Factura update
   */
  export type FacturaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura
     */
    select?: FacturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura
     */
    omit?: FacturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacturaInclude<ExtArgs> | null
    /**
     * The data needed to update a Factura.
     */
    data: XOR<FacturaUpdateInput, FacturaUncheckedUpdateInput>
    /**
     * Choose, which Factura to update.
     */
    where: FacturaWhereUniqueInput
  }

  /**
   * Factura updateMany
   */
  export type FacturaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Facturas.
     */
    data: XOR<FacturaUpdateManyMutationInput, FacturaUncheckedUpdateManyInput>
    /**
     * Filter which Facturas to update
     */
    where?: FacturaWhereInput
    /**
     * Limit how many Facturas to update.
     */
    limit?: number
  }

  /**
   * Factura updateManyAndReturn
   */
  export type FacturaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura
     */
    select?: FacturaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Factura
     */
    omit?: FacturaOmit<ExtArgs> | null
    /**
     * The data used to update Facturas.
     */
    data: XOR<FacturaUpdateManyMutationInput, FacturaUncheckedUpdateManyInput>
    /**
     * Filter which Facturas to update
     */
    where?: FacturaWhereInput
    /**
     * Limit how many Facturas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacturaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Factura upsert
   */
  export type FacturaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura
     */
    select?: FacturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura
     */
    omit?: FacturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacturaInclude<ExtArgs> | null
    /**
     * The filter to search for the Factura to update in case it exists.
     */
    where: FacturaWhereUniqueInput
    /**
     * In case the Factura found by the `where` argument doesn't exist, create a new Factura with this data.
     */
    create: XOR<FacturaCreateInput, FacturaUncheckedCreateInput>
    /**
     * In case the Factura was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FacturaUpdateInput, FacturaUncheckedUpdateInput>
  }

  /**
   * Factura delete
   */
  export type FacturaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura
     */
    select?: FacturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura
     */
    omit?: FacturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacturaInclude<ExtArgs> | null
    /**
     * Filter which Factura to delete.
     */
    where: FacturaWhereUniqueInput
  }

  /**
   * Factura deleteMany
   */
  export type FacturaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Facturas to delete
     */
    where?: FacturaWhereInput
    /**
     * Limit how many Facturas to delete.
     */
    limit?: number
  }

  /**
   * Factura.empresa
   */
  export type Factura$empresaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    where?: EmpresaWhereInput
  }

  /**
   * Factura without action
   */
  export type FacturaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura
     */
    select?: FacturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura
     */
    omit?: FacturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacturaInclude<ExtArgs> | null
  }


  /**
   * Model Recibo
   */

  export type AggregateRecibo = {
    _count: ReciboCountAggregateOutputType | null
    _avg: ReciboAvgAggregateOutputType | null
    _sum: ReciboSumAggregateOutputType | null
    _min: ReciboMinAggregateOutputType | null
    _max: ReciboMaxAggregateOutputType | null
  }

  export type ReciboAvgAggregateOutputType = {
    id: number | null
    personaId: number | null
    presupuestoId: number | null
    monto: Decimal | null
    monedaId: number | null
  }

  export type ReciboSumAggregateOutputType = {
    id: number | null
    personaId: number | null
    presupuestoId: number | null
    monto: Decimal | null
    monedaId: number | null
  }

  export type ReciboMinAggregateOutputType = {
    id: number | null
    personaId: number | null
    presupuestoId: number | null
    concepto: string | null
    monto: Decimal | null
    fecha: Date | null
    metodoPago: string | null
    tipo: $Enums.ReciboTipo | null
    createdAt: Date | null
    updatedAt: Date | null
    monedaId: number | null
  }

  export type ReciboMaxAggregateOutputType = {
    id: number | null
    personaId: number | null
    presupuestoId: number | null
    concepto: string | null
    monto: Decimal | null
    fecha: Date | null
    metodoPago: string | null
    tipo: $Enums.ReciboTipo | null
    createdAt: Date | null
    updatedAt: Date | null
    monedaId: number | null
  }

  export type ReciboCountAggregateOutputType = {
    id: number
    personaId: number
    presupuestoId: number
    concepto: number
    monto: number
    fecha: number
    metodoPago: number
    tipo: number
    createdAt: number
    updatedAt: number
    monedaId: number
    _all: number
  }


  export type ReciboAvgAggregateInputType = {
    id?: true
    personaId?: true
    presupuestoId?: true
    monto?: true
    monedaId?: true
  }

  export type ReciboSumAggregateInputType = {
    id?: true
    personaId?: true
    presupuestoId?: true
    monto?: true
    monedaId?: true
  }

  export type ReciboMinAggregateInputType = {
    id?: true
    personaId?: true
    presupuestoId?: true
    concepto?: true
    monto?: true
    fecha?: true
    metodoPago?: true
    tipo?: true
    createdAt?: true
    updatedAt?: true
    monedaId?: true
  }

  export type ReciboMaxAggregateInputType = {
    id?: true
    personaId?: true
    presupuestoId?: true
    concepto?: true
    monto?: true
    fecha?: true
    metodoPago?: true
    tipo?: true
    createdAt?: true
    updatedAt?: true
    monedaId?: true
  }

  export type ReciboCountAggregateInputType = {
    id?: true
    personaId?: true
    presupuestoId?: true
    concepto?: true
    monto?: true
    fecha?: true
    metodoPago?: true
    tipo?: true
    createdAt?: true
    updatedAt?: true
    monedaId?: true
    _all?: true
  }

  export type ReciboAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Recibo to aggregate.
     */
    where?: ReciboWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Recibos to fetch.
     */
    orderBy?: ReciboOrderByWithRelationInput | ReciboOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReciboWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Recibos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Recibos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Recibos
    **/
    _count?: true | ReciboCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReciboAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReciboSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReciboMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReciboMaxAggregateInputType
  }

  export type GetReciboAggregateType<T extends ReciboAggregateArgs> = {
        [P in keyof T & keyof AggregateRecibo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRecibo[P]>
      : GetScalarType<T[P], AggregateRecibo[P]>
  }




  export type ReciboGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReciboWhereInput
    orderBy?: ReciboOrderByWithAggregationInput | ReciboOrderByWithAggregationInput[]
    by: ReciboScalarFieldEnum[] | ReciboScalarFieldEnum
    having?: ReciboScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReciboCountAggregateInputType | true
    _avg?: ReciboAvgAggregateInputType
    _sum?: ReciboSumAggregateInputType
    _min?: ReciboMinAggregateInputType
    _max?: ReciboMaxAggregateInputType
  }

  export type ReciboGroupByOutputType = {
    id: number
    personaId: number
    presupuestoId: number | null
    concepto: string
    monto: Decimal
    fecha: Date
    metodoPago: string
    tipo: $Enums.ReciboTipo
    createdAt: Date
    updatedAt: Date
    monedaId: number
    _count: ReciboCountAggregateOutputType | null
    _avg: ReciboAvgAggregateOutputType | null
    _sum: ReciboSumAggregateOutputType | null
    _min: ReciboMinAggregateOutputType | null
    _max: ReciboMaxAggregateOutputType | null
  }

  type GetReciboGroupByPayload<T extends ReciboGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReciboGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReciboGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReciboGroupByOutputType[P]>
            : GetScalarType<T[P], ReciboGroupByOutputType[P]>
        }
      >
    >


  export type ReciboSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    personaId?: boolean
    presupuestoId?: boolean
    concepto?: boolean
    monto?: boolean
    fecha?: boolean
    metodoPago?: boolean
    tipo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
    persona?: boolean | PersonaDefaultArgs<ExtArgs>
    presupuesto?: boolean | Recibo$presupuestoArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["recibo"]>

  export type ReciboSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    personaId?: boolean
    presupuestoId?: boolean
    concepto?: boolean
    monto?: boolean
    fecha?: boolean
    metodoPago?: boolean
    tipo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
    persona?: boolean | PersonaDefaultArgs<ExtArgs>
    presupuesto?: boolean | Recibo$presupuestoArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["recibo"]>

  export type ReciboSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    personaId?: boolean
    presupuestoId?: boolean
    concepto?: boolean
    monto?: boolean
    fecha?: boolean
    metodoPago?: boolean
    tipo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
    persona?: boolean | PersonaDefaultArgs<ExtArgs>
    presupuesto?: boolean | Recibo$presupuestoArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["recibo"]>

  export type ReciboSelectScalar = {
    id?: boolean
    personaId?: boolean
    presupuestoId?: boolean
    concepto?: boolean
    monto?: boolean
    fecha?: boolean
    metodoPago?: boolean
    tipo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    monedaId?: boolean
  }

  export type ReciboOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "personaId" | "presupuestoId" | "concepto" | "monto" | "fecha" | "metodoPago" | "tipo" | "createdAt" | "updatedAt" | "monedaId", ExtArgs["result"]["recibo"]>
  export type ReciboInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    persona?: boolean | PersonaDefaultArgs<ExtArgs>
    presupuesto?: boolean | Recibo$presupuestoArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }
  export type ReciboIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    persona?: boolean | PersonaDefaultArgs<ExtArgs>
    presupuesto?: boolean | Recibo$presupuestoArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }
  export type ReciboIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    persona?: boolean | PersonaDefaultArgs<ExtArgs>
    presupuesto?: boolean | Recibo$presupuestoArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }

  export type $ReciboPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Recibo"
    objects: {
      persona: Prisma.$PersonaPayload<ExtArgs>
      presupuesto: Prisma.$PresupuestoPayload<ExtArgs> | null
      moneda: Prisma.$MonedaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      personaId: number
      presupuestoId: number | null
      concepto: string
      monto: Prisma.Decimal
      fecha: Date
      metodoPago: string
      tipo: $Enums.ReciboTipo
      createdAt: Date
      updatedAt: Date
      monedaId: number
    }, ExtArgs["result"]["recibo"]>
    composites: {}
  }

  type ReciboGetPayload<S extends boolean | null | undefined | ReciboDefaultArgs> = $Result.GetResult<Prisma.$ReciboPayload, S>

  type ReciboCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReciboFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReciboCountAggregateInputType | true
    }

  export interface ReciboDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Recibo'], meta: { name: 'Recibo' } }
    /**
     * Find zero or one Recibo that matches the filter.
     * @param {ReciboFindUniqueArgs} args - Arguments to find a Recibo
     * @example
     * // Get one Recibo
     * const recibo = await prisma.recibo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReciboFindUniqueArgs>(args: SelectSubset<T, ReciboFindUniqueArgs<ExtArgs>>): Prisma__ReciboClient<$Result.GetResult<Prisma.$ReciboPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Recibo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReciboFindUniqueOrThrowArgs} args - Arguments to find a Recibo
     * @example
     * // Get one Recibo
     * const recibo = await prisma.recibo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReciboFindUniqueOrThrowArgs>(args: SelectSubset<T, ReciboFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReciboClient<$Result.GetResult<Prisma.$ReciboPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Recibo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReciboFindFirstArgs} args - Arguments to find a Recibo
     * @example
     * // Get one Recibo
     * const recibo = await prisma.recibo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReciboFindFirstArgs>(args?: SelectSubset<T, ReciboFindFirstArgs<ExtArgs>>): Prisma__ReciboClient<$Result.GetResult<Prisma.$ReciboPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Recibo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReciboFindFirstOrThrowArgs} args - Arguments to find a Recibo
     * @example
     * // Get one Recibo
     * const recibo = await prisma.recibo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReciboFindFirstOrThrowArgs>(args?: SelectSubset<T, ReciboFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReciboClient<$Result.GetResult<Prisma.$ReciboPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Recibos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReciboFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Recibos
     * const recibos = await prisma.recibo.findMany()
     * 
     * // Get first 10 Recibos
     * const recibos = await prisma.recibo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reciboWithIdOnly = await prisma.recibo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReciboFindManyArgs>(args?: SelectSubset<T, ReciboFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReciboPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Recibo.
     * @param {ReciboCreateArgs} args - Arguments to create a Recibo.
     * @example
     * // Create one Recibo
     * const Recibo = await prisma.recibo.create({
     *   data: {
     *     // ... data to create a Recibo
     *   }
     * })
     * 
     */
    create<T extends ReciboCreateArgs>(args: SelectSubset<T, ReciboCreateArgs<ExtArgs>>): Prisma__ReciboClient<$Result.GetResult<Prisma.$ReciboPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Recibos.
     * @param {ReciboCreateManyArgs} args - Arguments to create many Recibos.
     * @example
     * // Create many Recibos
     * const recibo = await prisma.recibo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReciboCreateManyArgs>(args?: SelectSubset<T, ReciboCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Recibos and returns the data saved in the database.
     * @param {ReciboCreateManyAndReturnArgs} args - Arguments to create many Recibos.
     * @example
     * // Create many Recibos
     * const recibo = await prisma.recibo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Recibos and only return the `id`
     * const reciboWithIdOnly = await prisma.recibo.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReciboCreateManyAndReturnArgs>(args?: SelectSubset<T, ReciboCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReciboPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Recibo.
     * @param {ReciboDeleteArgs} args - Arguments to delete one Recibo.
     * @example
     * // Delete one Recibo
     * const Recibo = await prisma.recibo.delete({
     *   where: {
     *     // ... filter to delete one Recibo
     *   }
     * })
     * 
     */
    delete<T extends ReciboDeleteArgs>(args: SelectSubset<T, ReciboDeleteArgs<ExtArgs>>): Prisma__ReciboClient<$Result.GetResult<Prisma.$ReciboPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Recibo.
     * @param {ReciboUpdateArgs} args - Arguments to update one Recibo.
     * @example
     * // Update one Recibo
     * const recibo = await prisma.recibo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReciboUpdateArgs>(args: SelectSubset<T, ReciboUpdateArgs<ExtArgs>>): Prisma__ReciboClient<$Result.GetResult<Prisma.$ReciboPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Recibos.
     * @param {ReciboDeleteManyArgs} args - Arguments to filter Recibos to delete.
     * @example
     * // Delete a few Recibos
     * const { count } = await prisma.recibo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReciboDeleteManyArgs>(args?: SelectSubset<T, ReciboDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Recibos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReciboUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Recibos
     * const recibo = await prisma.recibo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReciboUpdateManyArgs>(args: SelectSubset<T, ReciboUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Recibos and returns the data updated in the database.
     * @param {ReciboUpdateManyAndReturnArgs} args - Arguments to update many Recibos.
     * @example
     * // Update many Recibos
     * const recibo = await prisma.recibo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Recibos and only return the `id`
     * const reciboWithIdOnly = await prisma.recibo.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReciboUpdateManyAndReturnArgs>(args: SelectSubset<T, ReciboUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReciboPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Recibo.
     * @param {ReciboUpsertArgs} args - Arguments to update or create a Recibo.
     * @example
     * // Update or create a Recibo
     * const recibo = await prisma.recibo.upsert({
     *   create: {
     *     // ... data to create a Recibo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Recibo we want to update
     *   }
     * })
     */
    upsert<T extends ReciboUpsertArgs>(args: SelectSubset<T, ReciboUpsertArgs<ExtArgs>>): Prisma__ReciboClient<$Result.GetResult<Prisma.$ReciboPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Recibos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReciboCountArgs} args - Arguments to filter Recibos to count.
     * @example
     * // Count the number of Recibos
     * const count = await prisma.recibo.count({
     *   where: {
     *     // ... the filter for the Recibos we want to count
     *   }
     * })
    **/
    count<T extends ReciboCountArgs>(
      args?: Subset<T, ReciboCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReciboCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Recibo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReciboAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReciboAggregateArgs>(args: Subset<T, ReciboAggregateArgs>): Prisma.PrismaPromise<GetReciboAggregateType<T>>

    /**
     * Group by Recibo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReciboGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReciboGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReciboGroupByArgs['orderBy'] }
        : { orderBy?: ReciboGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReciboGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReciboGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Recibo model
   */
  readonly fields: ReciboFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Recibo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReciboClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    persona<T extends PersonaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PersonaDefaultArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    presupuesto<T extends Recibo$presupuestoArgs<ExtArgs> = {}>(args?: Subset<T, Recibo$presupuestoArgs<ExtArgs>>): Prisma__PresupuestoClient<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    moneda<T extends MonedaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MonedaDefaultArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Recibo model
   */
  interface ReciboFieldRefs {
    readonly id: FieldRef<"Recibo", 'Int'>
    readonly personaId: FieldRef<"Recibo", 'Int'>
    readonly presupuestoId: FieldRef<"Recibo", 'Int'>
    readonly concepto: FieldRef<"Recibo", 'String'>
    readonly monto: FieldRef<"Recibo", 'Decimal'>
    readonly fecha: FieldRef<"Recibo", 'DateTime'>
    readonly metodoPago: FieldRef<"Recibo", 'String'>
    readonly tipo: FieldRef<"Recibo", 'ReciboTipo'>
    readonly createdAt: FieldRef<"Recibo", 'DateTime'>
    readonly updatedAt: FieldRef<"Recibo", 'DateTime'>
    readonly monedaId: FieldRef<"Recibo", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Recibo findUnique
   */
  export type ReciboFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recibo
     */
    select?: ReciboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recibo
     */
    omit?: ReciboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReciboInclude<ExtArgs> | null
    /**
     * Filter, which Recibo to fetch.
     */
    where: ReciboWhereUniqueInput
  }

  /**
   * Recibo findUniqueOrThrow
   */
  export type ReciboFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recibo
     */
    select?: ReciboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recibo
     */
    omit?: ReciboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReciboInclude<ExtArgs> | null
    /**
     * Filter, which Recibo to fetch.
     */
    where: ReciboWhereUniqueInput
  }

  /**
   * Recibo findFirst
   */
  export type ReciboFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recibo
     */
    select?: ReciboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recibo
     */
    omit?: ReciboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReciboInclude<ExtArgs> | null
    /**
     * Filter, which Recibo to fetch.
     */
    where?: ReciboWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Recibos to fetch.
     */
    orderBy?: ReciboOrderByWithRelationInput | ReciboOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Recibos.
     */
    cursor?: ReciboWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Recibos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Recibos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Recibos.
     */
    distinct?: ReciboScalarFieldEnum | ReciboScalarFieldEnum[]
  }

  /**
   * Recibo findFirstOrThrow
   */
  export type ReciboFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recibo
     */
    select?: ReciboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recibo
     */
    omit?: ReciboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReciboInclude<ExtArgs> | null
    /**
     * Filter, which Recibo to fetch.
     */
    where?: ReciboWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Recibos to fetch.
     */
    orderBy?: ReciboOrderByWithRelationInput | ReciboOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Recibos.
     */
    cursor?: ReciboWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Recibos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Recibos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Recibos.
     */
    distinct?: ReciboScalarFieldEnum | ReciboScalarFieldEnum[]
  }

  /**
   * Recibo findMany
   */
  export type ReciboFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recibo
     */
    select?: ReciboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recibo
     */
    omit?: ReciboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReciboInclude<ExtArgs> | null
    /**
     * Filter, which Recibos to fetch.
     */
    where?: ReciboWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Recibos to fetch.
     */
    orderBy?: ReciboOrderByWithRelationInput | ReciboOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Recibos.
     */
    cursor?: ReciboWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Recibos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Recibos.
     */
    skip?: number
    distinct?: ReciboScalarFieldEnum | ReciboScalarFieldEnum[]
  }

  /**
   * Recibo create
   */
  export type ReciboCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recibo
     */
    select?: ReciboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recibo
     */
    omit?: ReciboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReciboInclude<ExtArgs> | null
    /**
     * The data needed to create a Recibo.
     */
    data: XOR<ReciboCreateInput, ReciboUncheckedCreateInput>
  }

  /**
   * Recibo createMany
   */
  export type ReciboCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Recibos.
     */
    data: ReciboCreateManyInput | ReciboCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Recibo createManyAndReturn
   */
  export type ReciboCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recibo
     */
    select?: ReciboSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Recibo
     */
    omit?: ReciboOmit<ExtArgs> | null
    /**
     * The data used to create many Recibos.
     */
    data: ReciboCreateManyInput | ReciboCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReciboIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Recibo update
   */
  export type ReciboUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recibo
     */
    select?: ReciboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recibo
     */
    omit?: ReciboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReciboInclude<ExtArgs> | null
    /**
     * The data needed to update a Recibo.
     */
    data: XOR<ReciboUpdateInput, ReciboUncheckedUpdateInput>
    /**
     * Choose, which Recibo to update.
     */
    where: ReciboWhereUniqueInput
  }

  /**
   * Recibo updateMany
   */
  export type ReciboUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Recibos.
     */
    data: XOR<ReciboUpdateManyMutationInput, ReciboUncheckedUpdateManyInput>
    /**
     * Filter which Recibos to update
     */
    where?: ReciboWhereInput
    /**
     * Limit how many Recibos to update.
     */
    limit?: number
  }

  /**
   * Recibo updateManyAndReturn
   */
  export type ReciboUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recibo
     */
    select?: ReciboSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Recibo
     */
    omit?: ReciboOmit<ExtArgs> | null
    /**
     * The data used to update Recibos.
     */
    data: XOR<ReciboUpdateManyMutationInput, ReciboUncheckedUpdateManyInput>
    /**
     * Filter which Recibos to update
     */
    where?: ReciboWhereInput
    /**
     * Limit how many Recibos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReciboIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Recibo upsert
   */
  export type ReciboUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recibo
     */
    select?: ReciboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recibo
     */
    omit?: ReciboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReciboInclude<ExtArgs> | null
    /**
     * The filter to search for the Recibo to update in case it exists.
     */
    where: ReciboWhereUniqueInput
    /**
     * In case the Recibo found by the `where` argument doesn't exist, create a new Recibo with this data.
     */
    create: XOR<ReciboCreateInput, ReciboUncheckedCreateInput>
    /**
     * In case the Recibo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReciboUpdateInput, ReciboUncheckedUpdateInput>
  }

  /**
   * Recibo delete
   */
  export type ReciboDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recibo
     */
    select?: ReciboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recibo
     */
    omit?: ReciboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReciboInclude<ExtArgs> | null
    /**
     * Filter which Recibo to delete.
     */
    where: ReciboWhereUniqueInput
  }

  /**
   * Recibo deleteMany
   */
  export type ReciboDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Recibos to delete
     */
    where?: ReciboWhereInput
    /**
     * Limit how many Recibos to delete.
     */
    limit?: number
  }

  /**
   * Recibo.presupuesto
   */
  export type Recibo$presupuestoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Presupuesto
     */
    select?: PresupuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Presupuesto
     */
    omit?: PresupuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoInclude<ExtArgs> | null
    where?: PresupuestoWhereInput
  }

  /**
   * Recibo without action
   */
  export type ReciboDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recibo
     */
    select?: ReciboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recibo
     */
    omit?: ReciboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReciboInclude<ExtArgs> | null
  }


  /**
   * Model Impuesto
   */

  export type AggregateImpuesto = {
    _count: ImpuestoCountAggregateOutputType | null
    _avg: ImpuestoAvgAggregateOutputType | null
    _sum: ImpuestoSumAggregateOutputType | null
    _min: ImpuestoMinAggregateOutputType | null
    _max: ImpuestoMaxAggregateOutputType | null
  }

  export type ImpuestoAvgAggregateOutputType = {
    id: number | null
    porcentaje: Decimal | null
  }

  export type ImpuestoSumAggregateOutputType = {
    id: number | null
    porcentaje: Decimal | null
  }

  export type ImpuestoMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    porcentaje: Decimal | null
    activo: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    descripcion: string | null
  }

  export type ImpuestoMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    porcentaje: Decimal | null
    activo: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    descripcion: string | null
  }

  export type ImpuestoCountAggregateOutputType = {
    id: number
    nombre: number
    porcentaje: number
    activo: number
    createdAt: number
    updatedAt: number
    descripcion: number
    _all: number
  }


  export type ImpuestoAvgAggregateInputType = {
    id?: true
    porcentaje?: true
  }

  export type ImpuestoSumAggregateInputType = {
    id?: true
    porcentaje?: true
  }

  export type ImpuestoMinAggregateInputType = {
    id?: true
    nombre?: true
    porcentaje?: true
    activo?: true
    createdAt?: true
    updatedAt?: true
    descripcion?: true
  }

  export type ImpuestoMaxAggregateInputType = {
    id?: true
    nombre?: true
    porcentaje?: true
    activo?: true
    createdAt?: true
    updatedAt?: true
    descripcion?: true
  }

  export type ImpuestoCountAggregateInputType = {
    id?: true
    nombre?: true
    porcentaje?: true
    activo?: true
    createdAt?: true
    updatedAt?: true
    descripcion?: true
    _all?: true
  }

  export type ImpuestoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Impuesto to aggregate.
     */
    where?: ImpuestoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Impuestos to fetch.
     */
    orderBy?: ImpuestoOrderByWithRelationInput | ImpuestoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ImpuestoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Impuestos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Impuestos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Impuestos
    **/
    _count?: true | ImpuestoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ImpuestoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ImpuestoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ImpuestoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ImpuestoMaxAggregateInputType
  }

  export type GetImpuestoAggregateType<T extends ImpuestoAggregateArgs> = {
        [P in keyof T & keyof AggregateImpuesto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImpuesto[P]>
      : GetScalarType<T[P], AggregateImpuesto[P]>
  }




  export type ImpuestoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ImpuestoWhereInput
    orderBy?: ImpuestoOrderByWithAggregationInput | ImpuestoOrderByWithAggregationInput[]
    by: ImpuestoScalarFieldEnum[] | ImpuestoScalarFieldEnum
    having?: ImpuestoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ImpuestoCountAggregateInputType | true
    _avg?: ImpuestoAvgAggregateInputType
    _sum?: ImpuestoSumAggregateInputType
    _min?: ImpuestoMinAggregateInputType
    _max?: ImpuestoMaxAggregateInputType
  }

  export type ImpuestoGroupByOutputType = {
    id: number
    nombre: string
    porcentaje: Decimal
    activo: boolean
    createdAt: Date
    updatedAt: Date
    descripcion: string | null
    _count: ImpuestoCountAggregateOutputType | null
    _avg: ImpuestoAvgAggregateOutputType | null
    _sum: ImpuestoSumAggregateOutputType | null
    _min: ImpuestoMinAggregateOutputType | null
    _max: ImpuestoMaxAggregateOutputType | null
  }

  type GetImpuestoGroupByPayload<T extends ImpuestoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ImpuestoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ImpuestoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ImpuestoGroupByOutputType[P]>
            : GetScalarType<T[P], ImpuestoGroupByOutputType[P]>
        }
      >
    >


  export type ImpuestoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    porcentaje?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    descripcion?: boolean
    facturas?: boolean | Impuesto$facturasArgs<ExtArgs>
    presupuestoImpuestos?: boolean | Impuesto$presupuestoImpuestosArgs<ExtArgs>
    _count?: boolean | ImpuestoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["impuesto"]>

  export type ImpuestoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    porcentaje?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["impuesto"]>

  export type ImpuestoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    porcentaje?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["impuesto"]>

  export type ImpuestoSelectScalar = {
    id?: boolean
    nombre?: boolean
    porcentaje?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    descripcion?: boolean
  }

  export type ImpuestoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "porcentaje" | "activo" | "createdAt" | "updatedAt" | "descripcion", ExtArgs["result"]["impuesto"]>
  export type ImpuestoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    facturas?: boolean | Impuesto$facturasArgs<ExtArgs>
    presupuestoImpuestos?: boolean | Impuesto$presupuestoImpuestosArgs<ExtArgs>
    _count?: boolean | ImpuestoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ImpuestoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ImpuestoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ImpuestoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Impuesto"
    objects: {
      facturas: Prisma.$FacturaPayload<ExtArgs>[]
      presupuestoImpuestos: Prisma.$PresupuestoImpuestoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      porcentaje: Prisma.Decimal
      activo: boolean
      createdAt: Date
      updatedAt: Date
      descripcion: string | null
    }, ExtArgs["result"]["impuesto"]>
    composites: {}
  }

  type ImpuestoGetPayload<S extends boolean | null | undefined | ImpuestoDefaultArgs> = $Result.GetResult<Prisma.$ImpuestoPayload, S>

  type ImpuestoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ImpuestoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ImpuestoCountAggregateInputType | true
    }

  export interface ImpuestoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Impuesto'], meta: { name: 'Impuesto' } }
    /**
     * Find zero or one Impuesto that matches the filter.
     * @param {ImpuestoFindUniqueArgs} args - Arguments to find a Impuesto
     * @example
     * // Get one Impuesto
     * const impuesto = await prisma.impuesto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ImpuestoFindUniqueArgs>(args: SelectSubset<T, ImpuestoFindUniqueArgs<ExtArgs>>): Prisma__ImpuestoClient<$Result.GetResult<Prisma.$ImpuestoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Impuesto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ImpuestoFindUniqueOrThrowArgs} args - Arguments to find a Impuesto
     * @example
     * // Get one Impuesto
     * const impuesto = await prisma.impuesto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ImpuestoFindUniqueOrThrowArgs>(args: SelectSubset<T, ImpuestoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ImpuestoClient<$Result.GetResult<Prisma.$ImpuestoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Impuesto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImpuestoFindFirstArgs} args - Arguments to find a Impuesto
     * @example
     * // Get one Impuesto
     * const impuesto = await prisma.impuesto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ImpuestoFindFirstArgs>(args?: SelectSubset<T, ImpuestoFindFirstArgs<ExtArgs>>): Prisma__ImpuestoClient<$Result.GetResult<Prisma.$ImpuestoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Impuesto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImpuestoFindFirstOrThrowArgs} args - Arguments to find a Impuesto
     * @example
     * // Get one Impuesto
     * const impuesto = await prisma.impuesto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ImpuestoFindFirstOrThrowArgs>(args?: SelectSubset<T, ImpuestoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ImpuestoClient<$Result.GetResult<Prisma.$ImpuestoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Impuestos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImpuestoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Impuestos
     * const impuestos = await prisma.impuesto.findMany()
     * 
     * // Get first 10 Impuestos
     * const impuestos = await prisma.impuesto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const impuestoWithIdOnly = await prisma.impuesto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ImpuestoFindManyArgs>(args?: SelectSubset<T, ImpuestoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImpuestoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Impuesto.
     * @param {ImpuestoCreateArgs} args - Arguments to create a Impuesto.
     * @example
     * // Create one Impuesto
     * const Impuesto = await prisma.impuesto.create({
     *   data: {
     *     // ... data to create a Impuesto
     *   }
     * })
     * 
     */
    create<T extends ImpuestoCreateArgs>(args: SelectSubset<T, ImpuestoCreateArgs<ExtArgs>>): Prisma__ImpuestoClient<$Result.GetResult<Prisma.$ImpuestoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Impuestos.
     * @param {ImpuestoCreateManyArgs} args - Arguments to create many Impuestos.
     * @example
     * // Create many Impuestos
     * const impuesto = await prisma.impuesto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ImpuestoCreateManyArgs>(args?: SelectSubset<T, ImpuestoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Impuestos and returns the data saved in the database.
     * @param {ImpuestoCreateManyAndReturnArgs} args - Arguments to create many Impuestos.
     * @example
     * // Create many Impuestos
     * const impuesto = await prisma.impuesto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Impuestos and only return the `id`
     * const impuestoWithIdOnly = await prisma.impuesto.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ImpuestoCreateManyAndReturnArgs>(args?: SelectSubset<T, ImpuestoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImpuestoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Impuesto.
     * @param {ImpuestoDeleteArgs} args - Arguments to delete one Impuesto.
     * @example
     * // Delete one Impuesto
     * const Impuesto = await prisma.impuesto.delete({
     *   where: {
     *     // ... filter to delete one Impuesto
     *   }
     * })
     * 
     */
    delete<T extends ImpuestoDeleteArgs>(args: SelectSubset<T, ImpuestoDeleteArgs<ExtArgs>>): Prisma__ImpuestoClient<$Result.GetResult<Prisma.$ImpuestoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Impuesto.
     * @param {ImpuestoUpdateArgs} args - Arguments to update one Impuesto.
     * @example
     * // Update one Impuesto
     * const impuesto = await prisma.impuesto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ImpuestoUpdateArgs>(args: SelectSubset<T, ImpuestoUpdateArgs<ExtArgs>>): Prisma__ImpuestoClient<$Result.GetResult<Prisma.$ImpuestoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Impuestos.
     * @param {ImpuestoDeleteManyArgs} args - Arguments to filter Impuestos to delete.
     * @example
     * // Delete a few Impuestos
     * const { count } = await prisma.impuesto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ImpuestoDeleteManyArgs>(args?: SelectSubset<T, ImpuestoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Impuestos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImpuestoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Impuestos
     * const impuesto = await prisma.impuesto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ImpuestoUpdateManyArgs>(args: SelectSubset<T, ImpuestoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Impuestos and returns the data updated in the database.
     * @param {ImpuestoUpdateManyAndReturnArgs} args - Arguments to update many Impuestos.
     * @example
     * // Update many Impuestos
     * const impuesto = await prisma.impuesto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Impuestos and only return the `id`
     * const impuestoWithIdOnly = await prisma.impuesto.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ImpuestoUpdateManyAndReturnArgs>(args: SelectSubset<T, ImpuestoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImpuestoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Impuesto.
     * @param {ImpuestoUpsertArgs} args - Arguments to update or create a Impuesto.
     * @example
     * // Update or create a Impuesto
     * const impuesto = await prisma.impuesto.upsert({
     *   create: {
     *     // ... data to create a Impuesto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Impuesto we want to update
     *   }
     * })
     */
    upsert<T extends ImpuestoUpsertArgs>(args: SelectSubset<T, ImpuestoUpsertArgs<ExtArgs>>): Prisma__ImpuestoClient<$Result.GetResult<Prisma.$ImpuestoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Impuestos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImpuestoCountArgs} args - Arguments to filter Impuestos to count.
     * @example
     * // Count the number of Impuestos
     * const count = await prisma.impuesto.count({
     *   where: {
     *     // ... the filter for the Impuestos we want to count
     *   }
     * })
    **/
    count<T extends ImpuestoCountArgs>(
      args?: Subset<T, ImpuestoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ImpuestoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Impuesto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImpuestoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ImpuestoAggregateArgs>(args: Subset<T, ImpuestoAggregateArgs>): Prisma.PrismaPromise<GetImpuestoAggregateType<T>>

    /**
     * Group by Impuesto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImpuestoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ImpuestoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ImpuestoGroupByArgs['orderBy'] }
        : { orderBy?: ImpuestoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ImpuestoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImpuestoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Impuesto model
   */
  readonly fields: ImpuestoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Impuesto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ImpuestoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    facturas<T extends Impuesto$facturasArgs<ExtArgs> = {}>(args?: Subset<T, Impuesto$facturasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FacturaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    presupuestoImpuestos<T extends Impuesto$presupuestoImpuestosArgs<ExtArgs> = {}>(args?: Subset<T, Impuesto$presupuestoImpuestosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PresupuestoImpuestoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Impuesto model
   */
  interface ImpuestoFieldRefs {
    readonly id: FieldRef<"Impuesto", 'Int'>
    readonly nombre: FieldRef<"Impuesto", 'String'>
    readonly porcentaje: FieldRef<"Impuesto", 'Decimal'>
    readonly activo: FieldRef<"Impuesto", 'Boolean'>
    readonly createdAt: FieldRef<"Impuesto", 'DateTime'>
    readonly updatedAt: FieldRef<"Impuesto", 'DateTime'>
    readonly descripcion: FieldRef<"Impuesto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Impuesto findUnique
   */
  export type ImpuestoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Impuesto
     */
    select?: ImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Impuesto
     */
    omit?: ImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImpuestoInclude<ExtArgs> | null
    /**
     * Filter, which Impuesto to fetch.
     */
    where: ImpuestoWhereUniqueInput
  }

  /**
   * Impuesto findUniqueOrThrow
   */
  export type ImpuestoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Impuesto
     */
    select?: ImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Impuesto
     */
    omit?: ImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImpuestoInclude<ExtArgs> | null
    /**
     * Filter, which Impuesto to fetch.
     */
    where: ImpuestoWhereUniqueInput
  }

  /**
   * Impuesto findFirst
   */
  export type ImpuestoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Impuesto
     */
    select?: ImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Impuesto
     */
    omit?: ImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImpuestoInclude<ExtArgs> | null
    /**
     * Filter, which Impuesto to fetch.
     */
    where?: ImpuestoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Impuestos to fetch.
     */
    orderBy?: ImpuestoOrderByWithRelationInput | ImpuestoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Impuestos.
     */
    cursor?: ImpuestoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Impuestos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Impuestos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Impuestos.
     */
    distinct?: ImpuestoScalarFieldEnum | ImpuestoScalarFieldEnum[]
  }

  /**
   * Impuesto findFirstOrThrow
   */
  export type ImpuestoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Impuesto
     */
    select?: ImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Impuesto
     */
    omit?: ImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImpuestoInclude<ExtArgs> | null
    /**
     * Filter, which Impuesto to fetch.
     */
    where?: ImpuestoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Impuestos to fetch.
     */
    orderBy?: ImpuestoOrderByWithRelationInput | ImpuestoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Impuestos.
     */
    cursor?: ImpuestoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Impuestos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Impuestos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Impuestos.
     */
    distinct?: ImpuestoScalarFieldEnum | ImpuestoScalarFieldEnum[]
  }

  /**
   * Impuesto findMany
   */
  export type ImpuestoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Impuesto
     */
    select?: ImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Impuesto
     */
    omit?: ImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImpuestoInclude<ExtArgs> | null
    /**
     * Filter, which Impuestos to fetch.
     */
    where?: ImpuestoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Impuestos to fetch.
     */
    orderBy?: ImpuestoOrderByWithRelationInput | ImpuestoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Impuestos.
     */
    cursor?: ImpuestoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Impuestos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Impuestos.
     */
    skip?: number
    distinct?: ImpuestoScalarFieldEnum | ImpuestoScalarFieldEnum[]
  }

  /**
   * Impuesto create
   */
  export type ImpuestoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Impuesto
     */
    select?: ImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Impuesto
     */
    omit?: ImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImpuestoInclude<ExtArgs> | null
    /**
     * The data needed to create a Impuesto.
     */
    data: XOR<ImpuestoCreateInput, ImpuestoUncheckedCreateInput>
  }

  /**
   * Impuesto createMany
   */
  export type ImpuestoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Impuestos.
     */
    data: ImpuestoCreateManyInput | ImpuestoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Impuesto createManyAndReturn
   */
  export type ImpuestoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Impuesto
     */
    select?: ImpuestoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Impuesto
     */
    omit?: ImpuestoOmit<ExtArgs> | null
    /**
     * The data used to create many Impuestos.
     */
    data: ImpuestoCreateManyInput | ImpuestoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Impuesto update
   */
  export type ImpuestoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Impuesto
     */
    select?: ImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Impuesto
     */
    omit?: ImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImpuestoInclude<ExtArgs> | null
    /**
     * The data needed to update a Impuesto.
     */
    data: XOR<ImpuestoUpdateInput, ImpuestoUncheckedUpdateInput>
    /**
     * Choose, which Impuesto to update.
     */
    where: ImpuestoWhereUniqueInput
  }

  /**
   * Impuesto updateMany
   */
  export type ImpuestoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Impuestos.
     */
    data: XOR<ImpuestoUpdateManyMutationInput, ImpuestoUncheckedUpdateManyInput>
    /**
     * Filter which Impuestos to update
     */
    where?: ImpuestoWhereInput
    /**
     * Limit how many Impuestos to update.
     */
    limit?: number
  }

  /**
   * Impuesto updateManyAndReturn
   */
  export type ImpuestoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Impuesto
     */
    select?: ImpuestoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Impuesto
     */
    omit?: ImpuestoOmit<ExtArgs> | null
    /**
     * The data used to update Impuestos.
     */
    data: XOR<ImpuestoUpdateManyMutationInput, ImpuestoUncheckedUpdateManyInput>
    /**
     * Filter which Impuestos to update
     */
    where?: ImpuestoWhereInput
    /**
     * Limit how many Impuestos to update.
     */
    limit?: number
  }

  /**
   * Impuesto upsert
   */
  export type ImpuestoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Impuesto
     */
    select?: ImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Impuesto
     */
    omit?: ImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImpuestoInclude<ExtArgs> | null
    /**
     * The filter to search for the Impuesto to update in case it exists.
     */
    where: ImpuestoWhereUniqueInput
    /**
     * In case the Impuesto found by the `where` argument doesn't exist, create a new Impuesto with this data.
     */
    create: XOR<ImpuestoCreateInput, ImpuestoUncheckedCreateInput>
    /**
     * In case the Impuesto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ImpuestoUpdateInput, ImpuestoUncheckedUpdateInput>
  }

  /**
   * Impuesto delete
   */
  export type ImpuestoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Impuesto
     */
    select?: ImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Impuesto
     */
    omit?: ImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImpuestoInclude<ExtArgs> | null
    /**
     * Filter which Impuesto to delete.
     */
    where: ImpuestoWhereUniqueInput
  }

  /**
   * Impuesto deleteMany
   */
  export type ImpuestoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Impuestos to delete
     */
    where?: ImpuestoWhereInput
    /**
     * Limit how many Impuestos to delete.
     */
    limit?: number
  }

  /**
   * Impuesto.facturas
   */
  export type Impuesto$facturasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura
     */
    select?: FacturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura
     */
    omit?: FacturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacturaInclude<ExtArgs> | null
    where?: FacturaWhereInput
    orderBy?: FacturaOrderByWithRelationInput | FacturaOrderByWithRelationInput[]
    cursor?: FacturaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FacturaScalarFieldEnum | FacturaScalarFieldEnum[]
  }

  /**
   * Impuesto.presupuestoImpuestos
   */
  export type Impuesto$presupuestoImpuestosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PresupuestoImpuesto
     */
    select?: PresupuestoImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PresupuestoImpuesto
     */
    omit?: PresupuestoImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoImpuestoInclude<ExtArgs> | null
    where?: PresupuestoImpuestoWhereInput
    orderBy?: PresupuestoImpuestoOrderByWithRelationInput | PresupuestoImpuestoOrderByWithRelationInput[]
    cursor?: PresupuestoImpuestoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PresupuestoImpuestoScalarFieldEnum | PresupuestoImpuestoScalarFieldEnum[]
  }

  /**
   * Impuesto without action
   */
  export type ImpuestoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Impuesto
     */
    select?: ImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Impuesto
     */
    omit?: ImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImpuestoInclude<ExtArgs> | null
  }


  /**
   * Model PresupuestoImpuesto
   */

  export type AggregatePresupuestoImpuesto = {
    _count: PresupuestoImpuestoCountAggregateOutputType | null
    _avg: PresupuestoImpuestoAvgAggregateOutputType | null
    _sum: PresupuestoImpuestoSumAggregateOutputType | null
    _min: PresupuestoImpuestoMinAggregateOutputType | null
    _max: PresupuestoImpuestoMaxAggregateOutputType | null
  }

  export type PresupuestoImpuestoAvgAggregateOutputType = {
    id: number | null
    presupuestoId: number | null
    impuestoId: number | null
    monto: Decimal | null
  }

  export type PresupuestoImpuestoSumAggregateOutputType = {
    id: number | null
    presupuestoId: number | null
    impuestoId: number | null
    monto: Decimal | null
  }

  export type PresupuestoImpuestoMinAggregateOutputType = {
    id: number | null
    presupuestoId: number | null
    impuestoId: number | null
    monto: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PresupuestoImpuestoMaxAggregateOutputType = {
    id: number | null
    presupuestoId: number | null
    impuestoId: number | null
    monto: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PresupuestoImpuestoCountAggregateOutputType = {
    id: number
    presupuestoId: number
    impuestoId: number
    monto: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PresupuestoImpuestoAvgAggregateInputType = {
    id?: true
    presupuestoId?: true
    impuestoId?: true
    monto?: true
  }

  export type PresupuestoImpuestoSumAggregateInputType = {
    id?: true
    presupuestoId?: true
    impuestoId?: true
    monto?: true
  }

  export type PresupuestoImpuestoMinAggregateInputType = {
    id?: true
    presupuestoId?: true
    impuestoId?: true
    monto?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PresupuestoImpuestoMaxAggregateInputType = {
    id?: true
    presupuestoId?: true
    impuestoId?: true
    monto?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PresupuestoImpuestoCountAggregateInputType = {
    id?: true
    presupuestoId?: true
    impuestoId?: true
    monto?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PresupuestoImpuestoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PresupuestoImpuesto to aggregate.
     */
    where?: PresupuestoImpuestoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PresupuestoImpuestos to fetch.
     */
    orderBy?: PresupuestoImpuestoOrderByWithRelationInput | PresupuestoImpuestoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PresupuestoImpuestoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PresupuestoImpuestos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PresupuestoImpuestos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PresupuestoImpuestos
    **/
    _count?: true | PresupuestoImpuestoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PresupuestoImpuestoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PresupuestoImpuestoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PresupuestoImpuestoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PresupuestoImpuestoMaxAggregateInputType
  }

  export type GetPresupuestoImpuestoAggregateType<T extends PresupuestoImpuestoAggregateArgs> = {
        [P in keyof T & keyof AggregatePresupuestoImpuesto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePresupuestoImpuesto[P]>
      : GetScalarType<T[P], AggregatePresupuestoImpuesto[P]>
  }




  export type PresupuestoImpuestoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PresupuestoImpuestoWhereInput
    orderBy?: PresupuestoImpuestoOrderByWithAggregationInput | PresupuestoImpuestoOrderByWithAggregationInput[]
    by: PresupuestoImpuestoScalarFieldEnum[] | PresupuestoImpuestoScalarFieldEnum
    having?: PresupuestoImpuestoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PresupuestoImpuestoCountAggregateInputType | true
    _avg?: PresupuestoImpuestoAvgAggregateInputType
    _sum?: PresupuestoImpuestoSumAggregateInputType
    _min?: PresupuestoImpuestoMinAggregateInputType
    _max?: PresupuestoImpuestoMaxAggregateInputType
  }

  export type PresupuestoImpuestoGroupByOutputType = {
    id: number
    presupuestoId: number
    impuestoId: number
    monto: Decimal
    createdAt: Date
    updatedAt: Date
    _count: PresupuestoImpuestoCountAggregateOutputType | null
    _avg: PresupuestoImpuestoAvgAggregateOutputType | null
    _sum: PresupuestoImpuestoSumAggregateOutputType | null
    _min: PresupuestoImpuestoMinAggregateOutputType | null
    _max: PresupuestoImpuestoMaxAggregateOutputType | null
  }

  type GetPresupuestoImpuestoGroupByPayload<T extends PresupuestoImpuestoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PresupuestoImpuestoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PresupuestoImpuestoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PresupuestoImpuestoGroupByOutputType[P]>
            : GetScalarType<T[P], PresupuestoImpuestoGroupByOutputType[P]>
        }
      >
    >


  export type PresupuestoImpuestoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    presupuestoId?: boolean
    impuestoId?: boolean
    monto?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    impuesto?: boolean | ImpuestoDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["presupuestoImpuesto"]>

  export type PresupuestoImpuestoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    presupuestoId?: boolean
    impuestoId?: boolean
    monto?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    impuesto?: boolean | ImpuestoDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["presupuestoImpuesto"]>

  export type PresupuestoImpuestoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    presupuestoId?: boolean
    impuestoId?: boolean
    monto?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    impuesto?: boolean | ImpuestoDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["presupuestoImpuesto"]>

  export type PresupuestoImpuestoSelectScalar = {
    id?: boolean
    presupuestoId?: boolean
    impuestoId?: boolean
    monto?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PresupuestoImpuestoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "presupuestoId" | "impuestoId" | "monto" | "createdAt" | "updatedAt", ExtArgs["result"]["presupuestoImpuesto"]>
  export type PresupuestoImpuestoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    impuesto?: boolean | ImpuestoDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
  }
  export type PresupuestoImpuestoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    impuesto?: boolean | ImpuestoDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
  }
  export type PresupuestoImpuestoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    impuesto?: boolean | ImpuestoDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
  }

  export type $PresupuestoImpuestoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PresupuestoImpuesto"
    objects: {
      impuesto: Prisma.$ImpuestoPayload<ExtArgs>
      presupuesto: Prisma.$PresupuestoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      presupuestoId: number
      impuestoId: number
      monto: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["presupuestoImpuesto"]>
    composites: {}
  }

  type PresupuestoImpuestoGetPayload<S extends boolean | null | undefined | PresupuestoImpuestoDefaultArgs> = $Result.GetResult<Prisma.$PresupuestoImpuestoPayload, S>

  type PresupuestoImpuestoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PresupuestoImpuestoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PresupuestoImpuestoCountAggregateInputType | true
    }

  export interface PresupuestoImpuestoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PresupuestoImpuesto'], meta: { name: 'PresupuestoImpuesto' } }
    /**
     * Find zero or one PresupuestoImpuesto that matches the filter.
     * @param {PresupuestoImpuestoFindUniqueArgs} args - Arguments to find a PresupuestoImpuesto
     * @example
     * // Get one PresupuestoImpuesto
     * const presupuestoImpuesto = await prisma.presupuestoImpuesto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PresupuestoImpuestoFindUniqueArgs>(args: SelectSubset<T, PresupuestoImpuestoFindUniqueArgs<ExtArgs>>): Prisma__PresupuestoImpuestoClient<$Result.GetResult<Prisma.$PresupuestoImpuestoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PresupuestoImpuesto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PresupuestoImpuestoFindUniqueOrThrowArgs} args - Arguments to find a PresupuestoImpuesto
     * @example
     * // Get one PresupuestoImpuesto
     * const presupuestoImpuesto = await prisma.presupuestoImpuesto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PresupuestoImpuestoFindUniqueOrThrowArgs>(args: SelectSubset<T, PresupuestoImpuestoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PresupuestoImpuestoClient<$Result.GetResult<Prisma.$PresupuestoImpuestoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PresupuestoImpuesto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PresupuestoImpuestoFindFirstArgs} args - Arguments to find a PresupuestoImpuesto
     * @example
     * // Get one PresupuestoImpuesto
     * const presupuestoImpuesto = await prisma.presupuestoImpuesto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PresupuestoImpuestoFindFirstArgs>(args?: SelectSubset<T, PresupuestoImpuestoFindFirstArgs<ExtArgs>>): Prisma__PresupuestoImpuestoClient<$Result.GetResult<Prisma.$PresupuestoImpuestoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PresupuestoImpuesto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PresupuestoImpuestoFindFirstOrThrowArgs} args - Arguments to find a PresupuestoImpuesto
     * @example
     * // Get one PresupuestoImpuesto
     * const presupuestoImpuesto = await prisma.presupuestoImpuesto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PresupuestoImpuestoFindFirstOrThrowArgs>(args?: SelectSubset<T, PresupuestoImpuestoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PresupuestoImpuestoClient<$Result.GetResult<Prisma.$PresupuestoImpuestoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PresupuestoImpuestos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PresupuestoImpuestoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PresupuestoImpuestos
     * const presupuestoImpuestos = await prisma.presupuestoImpuesto.findMany()
     * 
     * // Get first 10 PresupuestoImpuestos
     * const presupuestoImpuestos = await prisma.presupuestoImpuesto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const presupuestoImpuestoWithIdOnly = await prisma.presupuestoImpuesto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PresupuestoImpuestoFindManyArgs>(args?: SelectSubset<T, PresupuestoImpuestoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PresupuestoImpuestoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PresupuestoImpuesto.
     * @param {PresupuestoImpuestoCreateArgs} args - Arguments to create a PresupuestoImpuesto.
     * @example
     * // Create one PresupuestoImpuesto
     * const PresupuestoImpuesto = await prisma.presupuestoImpuesto.create({
     *   data: {
     *     // ... data to create a PresupuestoImpuesto
     *   }
     * })
     * 
     */
    create<T extends PresupuestoImpuestoCreateArgs>(args: SelectSubset<T, PresupuestoImpuestoCreateArgs<ExtArgs>>): Prisma__PresupuestoImpuestoClient<$Result.GetResult<Prisma.$PresupuestoImpuestoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PresupuestoImpuestos.
     * @param {PresupuestoImpuestoCreateManyArgs} args - Arguments to create many PresupuestoImpuestos.
     * @example
     * // Create many PresupuestoImpuestos
     * const presupuestoImpuesto = await prisma.presupuestoImpuesto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PresupuestoImpuestoCreateManyArgs>(args?: SelectSubset<T, PresupuestoImpuestoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PresupuestoImpuestos and returns the data saved in the database.
     * @param {PresupuestoImpuestoCreateManyAndReturnArgs} args - Arguments to create many PresupuestoImpuestos.
     * @example
     * // Create many PresupuestoImpuestos
     * const presupuestoImpuesto = await prisma.presupuestoImpuesto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PresupuestoImpuestos and only return the `id`
     * const presupuestoImpuestoWithIdOnly = await prisma.presupuestoImpuesto.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PresupuestoImpuestoCreateManyAndReturnArgs>(args?: SelectSubset<T, PresupuestoImpuestoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PresupuestoImpuestoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PresupuestoImpuesto.
     * @param {PresupuestoImpuestoDeleteArgs} args - Arguments to delete one PresupuestoImpuesto.
     * @example
     * // Delete one PresupuestoImpuesto
     * const PresupuestoImpuesto = await prisma.presupuestoImpuesto.delete({
     *   where: {
     *     // ... filter to delete one PresupuestoImpuesto
     *   }
     * })
     * 
     */
    delete<T extends PresupuestoImpuestoDeleteArgs>(args: SelectSubset<T, PresupuestoImpuestoDeleteArgs<ExtArgs>>): Prisma__PresupuestoImpuestoClient<$Result.GetResult<Prisma.$PresupuestoImpuestoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PresupuestoImpuesto.
     * @param {PresupuestoImpuestoUpdateArgs} args - Arguments to update one PresupuestoImpuesto.
     * @example
     * // Update one PresupuestoImpuesto
     * const presupuestoImpuesto = await prisma.presupuestoImpuesto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PresupuestoImpuestoUpdateArgs>(args: SelectSubset<T, PresupuestoImpuestoUpdateArgs<ExtArgs>>): Prisma__PresupuestoImpuestoClient<$Result.GetResult<Prisma.$PresupuestoImpuestoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PresupuestoImpuestos.
     * @param {PresupuestoImpuestoDeleteManyArgs} args - Arguments to filter PresupuestoImpuestos to delete.
     * @example
     * // Delete a few PresupuestoImpuestos
     * const { count } = await prisma.presupuestoImpuesto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PresupuestoImpuestoDeleteManyArgs>(args?: SelectSubset<T, PresupuestoImpuestoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PresupuestoImpuestos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PresupuestoImpuestoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PresupuestoImpuestos
     * const presupuestoImpuesto = await prisma.presupuestoImpuesto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PresupuestoImpuestoUpdateManyArgs>(args: SelectSubset<T, PresupuestoImpuestoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PresupuestoImpuestos and returns the data updated in the database.
     * @param {PresupuestoImpuestoUpdateManyAndReturnArgs} args - Arguments to update many PresupuestoImpuestos.
     * @example
     * // Update many PresupuestoImpuestos
     * const presupuestoImpuesto = await prisma.presupuestoImpuesto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PresupuestoImpuestos and only return the `id`
     * const presupuestoImpuestoWithIdOnly = await prisma.presupuestoImpuesto.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PresupuestoImpuestoUpdateManyAndReturnArgs>(args: SelectSubset<T, PresupuestoImpuestoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PresupuestoImpuestoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PresupuestoImpuesto.
     * @param {PresupuestoImpuestoUpsertArgs} args - Arguments to update or create a PresupuestoImpuesto.
     * @example
     * // Update or create a PresupuestoImpuesto
     * const presupuestoImpuesto = await prisma.presupuestoImpuesto.upsert({
     *   create: {
     *     // ... data to create a PresupuestoImpuesto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PresupuestoImpuesto we want to update
     *   }
     * })
     */
    upsert<T extends PresupuestoImpuestoUpsertArgs>(args: SelectSubset<T, PresupuestoImpuestoUpsertArgs<ExtArgs>>): Prisma__PresupuestoImpuestoClient<$Result.GetResult<Prisma.$PresupuestoImpuestoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PresupuestoImpuestos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PresupuestoImpuestoCountArgs} args - Arguments to filter PresupuestoImpuestos to count.
     * @example
     * // Count the number of PresupuestoImpuestos
     * const count = await prisma.presupuestoImpuesto.count({
     *   where: {
     *     // ... the filter for the PresupuestoImpuestos we want to count
     *   }
     * })
    **/
    count<T extends PresupuestoImpuestoCountArgs>(
      args?: Subset<T, PresupuestoImpuestoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PresupuestoImpuestoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PresupuestoImpuesto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PresupuestoImpuestoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PresupuestoImpuestoAggregateArgs>(args: Subset<T, PresupuestoImpuestoAggregateArgs>): Prisma.PrismaPromise<GetPresupuestoImpuestoAggregateType<T>>

    /**
     * Group by PresupuestoImpuesto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PresupuestoImpuestoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PresupuestoImpuestoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PresupuestoImpuestoGroupByArgs['orderBy'] }
        : { orderBy?: PresupuestoImpuestoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PresupuestoImpuestoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPresupuestoImpuestoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PresupuestoImpuesto model
   */
  readonly fields: PresupuestoImpuestoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PresupuestoImpuesto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PresupuestoImpuestoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    impuesto<T extends ImpuestoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ImpuestoDefaultArgs<ExtArgs>>): Prisma__ImpuestoClient<$Result.GetResult<Prisma.$ImpuestoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    presupuesto<T extends PresupuestoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PresupuestoDefaultArgs<ExtArgs>>): Prisma__PresupuestoClient<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PresupuestoImpuesto model
   */
  interface PresupuestoImpuestoFieldRefs {
    readonly id: FieldRef<"PresupuestoImpuesto", 'Int'>
    readonly presupuestoId: FieldRef<"PresupuestoImpuesto", 'Int'>
    readonly impuestoId: FieldRef<"PresupuestoImpuesto", 'Int'>
    readonly monto: FieldRef<"PresupuestoImpuesto", 'Decimal'>
    readonly createdAt: FieldRef<"PresupuestoImpuesto", 'DateTime'>
    readonly updatedAt: FieldRef<"PresupuestoImpuesto", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PresupuestoImpuesto findUnique
   */
  export type PresupuestoImpuestoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PresupuestoImpuesto
     */
    select?: PresupuestoImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PresupuestoImpuesto
     */
    omit?: PresupuestoImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoImpuestoInclude<ExtArgs> | null
    /**
     * Filter, which PresupuestoImpuesto to fetch.
     */
    where: PresupuestoImpuestoWhereUniqueInput
  }

  /**
   * PresupuestoImpuesto findUniqueOrThrow
   */
  export type PresupuestoImpuestoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PresupuestoImpuesto
     */
    select?: PresupuestoImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PresupuestoImpuesto
     */
    omit?: PresupuestoImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoImpuestoInclude<ExtArgs> | null
    /**
     * Filter, which PresupuestoImpuesto to fetch.
     */
    where: PresupuestoImpuestoWhereUniqueInput
  }

  /**
   * PresupuestoImpuesto findFirst
   */
  export type PresupuestoImpuestoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PresupuestoImpuesto
     */
    select?: PresupuestoImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PresupuestoImpuesto
     */
    omit?: PresupuestoImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoImpuestoInclude<ExtArgs> | null
    /**
     * Filter, which PresupuestoImpuesto to fetch.
     */
    where?: PresupuestoImpuestoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PresupuestoImpuestos to fetch.
     */
    orderBy?: PresupuestoImpuestoOrderByWithRelationInput | PresupuestoImpuestoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PresupuestoImpuestos.
     */
    cursor?: PresupuestoImpuestoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PresupuestoImpuestos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PresupuestoImpuestos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PresupuestoImpuestos.
     */
    distinct?: PresupuestoImpuestoScalarFieldEnum | PresupuestoImpuestoScalarFieldEnum[]
  }

  /**
   * PresupuestoImpuesto findFirstOrThrow
   */
  export type PresupuestoImpuestoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PresupuestoImpuesto
     */
    select?: PresupuestoImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PresupuestoImpuesto
     */
    omit?: PresupuestoImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoImpuestoInclude<ExtArgs> | null
    /**
     * Filter, which PresupuestoImpuesto to fetch.
     */
    where?: PresupuestoImpuestoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PresupuestoImpuestos to fetch.
     */
    orderBy?: PresupuestoImpuestoOrderByWithRelationInput | PresupuestoImpuestoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PresupuestoImpuestos.
     */
    cursor?: PresupuestoImpuestoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PresupuestoImpuestos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PresupuestoImpuestos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PresupuestoImpuestos.
     */
    distinct?: PresupuestoImpuestoScalarFieldEnum | PresupuestoImpuestoScalarFieldEnum[]
  }

  /**
   * PresupuestoImpuesto findMany
   */
  export type PresupuestoImpuestoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PresupuestoImpuesto
     */
    select?: PresupuestoImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PresupuestoImpuesto
     */
    omit?: PresupuestoImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoImpuestoInclude<ExtArgs> | null
    /**
     * Filter, which PresupuestoImpuestos to fetch.
     */
    where?: PresupuestoImpuestoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PresupuestoImpuestos to fetch.
     */
    orderBy?: PresupuestoImpuestoOrderByWithRelationInput | PresupuestoImpuestoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PresupuestoImpuestos.
     */
    cursor?: PresupuestoImpuestoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PresupuestoImpuestos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PresupuestoImpuestos.
     */
    skip?: number
    distinct?: PresupuestoImpuestoScalarFieldEnum | PresupuestoImpuestoScalarFieldEnum[]
  }

  /**
   * PresupuestoImpuesto create
   */
  export type PresupuestoImpuestoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PresupuestoImpuesto
     */
    select?: PresupuestoImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PresupuestoImpuesto
     */
    omit?: PresupuestoImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoImpuestoInclude<ExtArgs> | null
    /**
     * The data needed to create a PresupuestoImpuesto.
     */
    data: XOR<PresupuestoImpuestoCreateInput, PresupuestoImpuestoUncheckedCreateInput>
  }

  /**
   * PresupuestoImpuesto createMany
   */
  export type PresupuestoImpuestoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PresupuestoImpuestos.
     */
    data: PresupuestoImpuestoCreateManyInput | PresupuestoImpuestoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PresupuestoImpuesto createManyAndReturn
   */
  export type PresupuestoImpuestoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PresupuestoImpuesto
     */
    select?: PresupuestoImpuestoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PresupuestoImpuesto
     */
    omit?: PresupuestoImpuestoOmit<ExtArgs> | null
    /**
     * The data used to create many PresupuestoImpuestos.
     */
    data: PresupuestoImpuestoCreateManyInput | PresupuestoImpuestoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoImpuestoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PresupuestoImpuesto update
   */
  export type PresupuestoImpuestoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PresupuestoImpuesto
     */
    select?: PresupuestoImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PresupuestoImpuesto
     */
    omit?: PresupuestoImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoImpuestoInclude<ExtArgs> | null
    /**
     * The data needed to update a PresupuestoImpuesto.
     */
    data: XOR<PresupuestoImpuestoUpdateInput, PresupuestoImpuestoUncheckedUpdateInput>
    /**
     * Choose, which PresupuestoImpuesto to update.
     */
    where: PresupuestoImpuestoWhereUniqueInput
  }

  /**
   * PresupuestoImpuesto updateMany
   */
  export type PresupuestoImpuestoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PresupuestoImpuestos.
     */
    data: XOR<PresupuestoImpuestoUpdateManyMutationInput, PresupuestoImpuestoUncheckedUpdateManyInput>
    /**
     * Filter which PresupuestoImpuestos to update
     */
    where?: PresupuestoImpuestoWhereInput
    /**
     * Limit how many PresupuestoImpuestos to update.
     */
    limit?: number
  }

  /**
   * PresupuestoImpuesto updateManyAndReturn
   */
  export type PresupuestoImpuestoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PresupuestoImpuesto
     */
    select?: PresupuestoImpuestoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PresupuestoImpuesto
     */
    omit?: PresupuestoImpuestoOmit<ExtArgs> | null
    /**
     * The data used to update PresupuestoImpuestos.
     */
    data: XOR<PresupuestoImpuestoUpdateManyMutationInput, PresupuestoImpuestoUncheckedUpdateManyInput>
    /**
     * Filter which PresupuestoImpuestos to update
     */
    where?: PresupuestoImpuestoWhereInput
    /**
     * Limit how many PresupuestoImpuestos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoImpuestoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PresupuestoImpuesto upsert
   */
  export type PresupuestoImpuestoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PresupuestoImpuesto
     */
    select?: PresupuestoImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PresupuestoImpuesto
     */
    omit?: PresupuestoImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoImpuestoInclude<ExtArgs> | null
    /**
     * The filter to search for the PresupuestoImpuesto to update in case it exists.
     */
    where: PresupuestoImpuestoWhereUniqueInput
    /**
     * In case the PresupuestoImpuesto found by the `where` argument doesn't exist, create a new PresupuestoImpuesto with this data.
     */
    create: XOR<PresupuestoImpuestoCreateInput, PresupuestoImpuestoUncheckedCreateInput>
    /**
     * In case the PresupuestoImpuesto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PresupuestoImpuestoUpdateInput, PresupuestoImpuestoUncheckedUpdateInput>
  }

  /**
   * PresupuestoImpuesto delete
   */
  export type PresupuestoImpuestoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PresupuestoImpuesto
     */
    select?: PresupuestoImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PresupuestoImpuesto
     */
    omit?: PresupuestoImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoImpuestoInclude<ExtArgs> | null
    /**
     * Filter which PresupuestoImpuesto to delete.
     */
    where: PresupuestoImpuestoWhereUniqueInput
  }

  /**
   * PresupuestoImpuesto deleteMany
   */
  export type PresupuestoImpuestoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PresupuestoImpuestos to delete
     */
    where?: PresupuestoImpuestoWhereInput
    /**
     * Limit how many PresupuestoImpuestos to delete.
     */
    limit?: number
  }

  /**
   * PresupuestoImpuesto without action
   */
  export type PresupuestoImpuestoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PresupuestoImpuesto
     */
    select?: PresupuestoImpuestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PresupuestoImpuesto
     */
    omit?: PresupuestoImpuestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PresupuestoImpuestoInclude<ExtArgs> | null
  }


  /**
   * Model GastoOperativo
   */

  export type AggregateGastoOperativo = {
    _count: GastoOperativoCountAggregateOutputType | null
    _avg: GastoOperativoAvgAggregateOutputType | null
    _sum: GastoOperativoSumAggregateOutputType | null
    _min: GastoOperativoMinAggregateOutputType | null
    _max: GastoOperativoMaxAggregateOutputType | null
  }

  export type GastoOperativoAvgAggregateOutputType = {
    id: number | null
    monto: Decimal | null
    monedaId: number | null
    proveedorId: number | null
  }

  export type GastoOperativoSumAggregateOutputType = {
    id: number | null
    monto: Decimal | null
    monedaId: number | null
    proveedorId: number | null
  }

  export type GastoOperativoMinAggregateOutputType = {
    id: number | null
    concepto: string | null
    descripcion: string | null
    monto: Decimal | null
    monedaId: number | null
    fecha: Date | null
    categoria: $Enums.CategoriaGasto | null
    esRecurrente: boolean | null
    frecuencia: string | null
    proveedorId: number | null
    comprobante: string | null
    observaciones: string | null
    activo: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type GastoOperativoMaxAggregateOutputType = {
    id: number | null
    concepto: string | null
    descripcion: string | null
    monto: Decimal | null
    monedaId: number | null
    fecha: Date | null
    categoria: $Enums.CategoriaGasto | null
    esRecurrente: boolean | null
    frecuencia: string | null
    proveedorId: number | null
    comprobante: string | null
    observaciones: string | null
    activo: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type GastoOperativoCountAggregateOutputType = {
    id: number
    concepto: number
    descripcion: number
    monto: number
    monedaId: number
    fecha: number
    categoria: number
    esRecurrente: number
    frecuencia: number
    proveedorId: number
    comprobante: number
    observaciones: number
    activo: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type GastoOperativoAvgAggregateInputType = {
    id?: true
    monto?: true
    monedaId?: true
    proveedorId?: true
  }

  export type GastoOperativoSumAggregateInputType = {
    id?: true
    monto?: true
    monedaId?: true
    proveedorId?: true
  }

  export type GastoOperativoMinAggregateInputType = {
    id?: true
    concepto?: true
    descripcion?: true
    monto?: true
    monedaId?: true
    fecha?: true
    categoria?: true
    esRecurrente?: true
    frecuencia?: true
    proveedorId?: true
    comprobante?: true
    observaciones?: true
    activo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type GastoOperativoMaxAggregateInputType = {
    id?: true
    concepto?: true
    descripcion?: true
    monto?: true
    monedaId?: true
    fecha?: true
    categoria?: true
    esRecurrente?: true
    frecuencia?: true
    proveedorId?: true
    comprobante?: true
    observaciones?: true
    activo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type GastoOperativoCountAggregateInputType = {
    id?: true
    concepto?: true
    descripcion?: true
    monto?: true
    monedaId?: true
    fecha?: true
    categoria?: true
    esRecurrente?: true
    frecuencia?: true
    proveedorId?: true
    comprobante?: true
    observaciones?: true
    activo?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type GastoOperativoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GastoOperativo to aggregate.
     */
    where?: GastoOperativoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GastoOperativos to fetch.
     */
    orderBy?: GastoOperativoOrderByWithRelationInput | GastoOperativoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: GastoOperativoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GastoOperativos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GastoOperativos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned GastoOperativos
    **/
    _count?: true | GastoOperativoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GastoOperativoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GastoOperativoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GastoOperativoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GastoOperativoMaxAggregateInputType
  }

  export type GetGastoOperativoAggregateType<T extends GastoOperativoAggregateArgs> = {
        [P in keyof T & keyof AggregateGastoOperativo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGastoOperativo[P]>
      : GetScalarType<T[P], AggregateGastoOperativo[P]>
  }




  export type GastoOperativoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GastoOperativoWhereInput
    orderBy?: GastoOperativoOrderByWithAggregationInput | GastoOperativoOrderByWithAggregationInput[]
    by: GastoOperativoScalarFieldEnum[] | GastoOperativoScalarFieldEnum
    having?: GastoOperativoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GastoOperativoCountAggregateInputType | true
    _avg?: GastoOperativoAvgAggregateInputType
    _sum?: GastoOperativoSumAggregateInputType
    _min?: GastoOperativoMinAggregateInputType
    _max?: GastoOperativoMaxAggregateInputType
  }

  export type GastoOperativoGroupByOutputType = {
    id: number
    concepto: string
    descripcion: string | null
    monto: Decimal
    monedaId: number
    fecha: Date
    categoria: $Enums.CategoriaGasto
    esRecurrente: boolean
    frecuencia: string | null
    proveedorId: number | null
    comprobante: string | null
    observaciones: string | null
    activo: boolean
    createdAt: Date
    updatedAt: Date
    _count: GastoOperativoCountAggregateOutputType | null
    _avg: GastoOperativoAvgAggregateOutputType | null
    _sum: GastoOperativoSumAggregateOutputType | null
    _min: GastoOperativoMinAggregateOutputType | null
    _max: GastoOperativoMaxAggregateOutputType | null
  }

  type GetGastoOperativoGroupByPayload<T extends GastoOperativoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GastoOperativoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GastoOperativoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GastoOperativoGroupByOutputType[P]>
            : GetScalarType<T[P], GastoOperativoGroupByOutputType[P]>
        }
      >
    >


  export type GastoOperativoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    concepto?: boolean
    descripcion?: boolean
    monto?: boolean
    monedaId?: boolean
    fecha?: boolean
    categoria?: boolean
    esRecurrente?: boolean
    frecuencia?: boolean
    proveedorId?: boolean
    comprobante?: boolean
    observaciones?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asignaciones?: boolean | GastoOperativo$asignacionesArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    proveedor?: boolean | GastoOperativo$proveedorArgs<ExtArgs>
    _count?: boolean | GastoOperativoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["gastoOperativo"]>

  export type GastoOperativoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    concepto?: boolean
    descripcion?: boolean
    monto?: boolean
    monedaId?: boolean
    fecha?: boolean
    categoria?: boolean
    esRecurrente?: boolean
    frecuencia?: boolean
    proveedorId?: boolean
    comprobante?: boolean
    observaciones?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    proveedor?: boolean | GastoOperativo$proveedorArgs<ExtArgs>
  }, ExtArgs["result"]["gastoOperativo"]>

  export type GastoOperativoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    concepto?: boolean
    descripcion?: boolean
    monto?: boolean
    monedaId?: boolean
    fecha?: boolean
    categoria?: boolean
    esRecurrente?: boolean
    frecuencia?: boolean
    proveedorId?: boolean
    comprobante?: boolean
    observaciones?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    proveedor?: boolean | GastoOperativo$proveedorArgs<ExtArgs>
  }, ExtArgs["result"]["gastoOperativo"]>

  export type GastoOperativoSelectScalar = {
    id?: boolean
    concepto?: boolean
    descripcion?: boolean
    monto?: boolean
    monedaId?: boolean
    fecha?: boolean
    categoria?: boolean
    esRecurrente?: boolean
    frecuencia?: boolean
    proveedorId?: boolean
    comprobante?: boolean
    observaciones?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type GastoOperativoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "concepto" | "descripcion" | "monto" | "monedaId" | "fecha" | "categoria" | "esRecurrente" | "frecuencia" | "proveedorId" | "comprobante" | "observaciones" | "activo" | "createdAt" | "updatedAt", ExtArgs["result"]["gastoOperativo"]>
  export type GastoOperativoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asignaciones?: boolean | GastoOperativo$asignacionesArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    proveedor?: boolean | GastoOperativo$proveedorArgs<ExtArgs>
    _count?: boolean | GastoOperativoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type GastoOperativoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    proveedor?: boolean | GastoOperativo$proveedorArgs<ExtArgs>
  }
  export type GastoOperativoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    proveedor?: boolean | GastoOperativo$proveedorArgs<ExtArgs>
  }

  export type $GastoOperativoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "GastoOperativo"
    objects: {
      asignaciones: Prisma.$AsignacionGastoProyectoPayload<ExtArgs>[]
      moneda: Prisma.$MonedaPayload<ExtArgs>
      proveedor: Prisma.$PersonaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      concepto: string
      descripcion: string | null
      monto: Prisma.Decimal
      monedaId: number
      fecha: Date
      categoria: $Enums.CategoriaGasto
      esRecurrente: boolean
      frecuencia: string | null
      proveedorId: number | null
      comprobante: string | null
      observaciones: string | null
      activo: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["gastoOperativo"]>
    composites: {}
  }

  type GastoOperativoGetPayload<S extends boolean | null | undefined | GastoOperativoDefaultArgs> = $Result.GetResult<Prisma.$GastoOperativoPayload, S>

  type GastoOperativoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<GastoOperativoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: GastoOperativoCountAggregateInputType | true
    }

  export interface GastoOperativoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['GastoOperativo'], meta: { name: 'GastoOperativo' } }
    /**
     * Find zero or one GastoOperativo that matches the filter.
     * @param {GastoOperativoFindUniqueArgs} args - Arguments to find a GastoOperativo
     * @example
     * // Get one GastoOperativo
     * const gastoOperativo = await prisma.gastoOperativo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends GastoOperativoFindUniqueArgs>(args: SelectSubset<T, GastoOperativoFindUniqueArgs<ExtArgs>>): Prisma__GastoOperativoClient<$Result.GetResult<Prisma.$GastoOperativoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one GastoOperativo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {GastoOperativoFindUniqueOrThrowArgs} args - Arguments to find a GastoOperativo
     * @example
     * // Get one GastoOperativo
     * const gastoOperativo = await prisma.gastoOperativo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends GastoOperativoFindUniqueOrThrowArgs>(args: SelectSubset<T, GastoOperativoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__GastoOperativoClient<$Result.GetResult<Prisma.$GastoOperativoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first GastoOperativo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GastoOperativoFindFirstArgs} args - Arguments to find a GastoOperativo
     * @example
     * // Get one GastoOperativo
     * const gastoOperativo = await prisma.gastoOperativo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends GastoOperativoFindFirstArgs>(args?: SelectSubset<T, GastoOperativoFindFirstArgs<ExtArgs>>): Prisma__GastoOperativoClient<$Result.GetResult<Prisma.$GastoOperativoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first GastoOperativo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GastoOperativoFindFirstOrThrowArgs} args - Arguments to find a GastoOperativo
     * @example
     * // Get one GastoOperativo
     * const gastoOperativo = await prisma.gastoOperativo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends GastoOperativoFindFirstOrThrowArgs>(args?: SelectSubset<T, GastoOperativoFindFirstOrThrowArgs<ExtArgs>>): Prisma__GastoOperativoClient<$Result.GetResult<Prisma.$GastoOperativoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more GastoOperativos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GastoOperativoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all GastoOperativos
     * const gastoOperativos = await prisma.gastoOperativo.findMany()
     * 
     * // Get first 10 GastoOperativos
     * const gastoOperativos = await prisma.gastoOperativo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const gastoOperativoWithIdOnly = await prisma.gastoOperativo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends GastoOperativoFindManyArgs>(args?: SelectSubset<T, GastoOperativoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GastoOperativoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a GastoOperativo.
     * @param {GastoOperativoCreateArgs} args - Arguments to create a GastoOperativo.
     * @example
     * // Create one GastoOperativo
     * const GastoOperativo = await prisma.gastoOperativo.create({
     *   data: {
     *     // ... data to create a GastoOperativo
     *   }
     * })
     * 
     */
    create<T extends GastoOperativoCreateArgs>(args: SelectSubset<T, GastoOperativoCreateArgs<ExtArgs>>): Prisma__GastoOperativoClient<$Result.GetResult<Prisma.$GastoOperativoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many GastoOperativos.
     * @param {GastoOperativoCreateManyArgs} args - Arguments to create many GastoOperativos.
     * @example
     * // Create many GastoOperativos
     * const gastoOperativo = await prisma.gastoOperativo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends GastoOperativoCreateManyArgs>(args?: SelectSubset<T, GastoOperativoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many GastoOperativos and returns the data saved in the database.
     * @param {GastoOperativoCreateManyAndReturnArgs} args - Arguments to create many GastoOperativos.
     * @example
     * // Create many GastoOperativos
     * const gastoOperativo = await prisma.gastoOperativo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many GastoOperativos and only return the `id`
     * const gastoOperativoWithIdOnly = await prisma.gastoOperativo.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends GastoOperativoCreateManyAndReturnArgs>(args?: SelectSubset<T, GastoOperativoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GastoOperativoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a GastoOperativo.
     * @param {GastoOperativoDeleteArgs} args - Arguments to delete one GastoOperativo.
     * @example
     * // Delete one GastoOperativo
     * const GastoOperativo = await prisma.gastoOperativo.delete({
     *   where: {
     *     // ... filter to delete one GastoOperativo
     *   }
     * })
     * 
     */
    delete<T extends GastoOperativoDeleteArgs>(args: SelectSubset<T, GastoOperativoDeleteArgs<ExtArgs>>): Prisma__GastoOperativoClient<$Result.GetResult<Prisma.$GastoOperativoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one GastoOperativo.
     * @param {GastoOperativoUpdateArgs} args - Arguments to update one GastoOperativo.
     * @example
     * // Update one GastoOperativo
     * const gastoOperativo = await prisma.gastoOperativo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends GastoOperativoUpdateArgs>(args: SelectSubset<T, GastoOperativoUpdateArgs<ExtArgs>>): Prisma__GastoOperativoClient<$Result.GetResult<Prisma.$GastoOperativoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more GastoOperativos.
     * @param {GastoOperativoDeleteManyArgs} args - Arguments to filter GastoOperativos to delete.
     * @example
     * // Delete a few GastoOperativos
     * const { count } = await prisma.gastoOperativo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends GastoOperativoDeleteManyArgs>(args?: SelectSubset<T, GastoOperativoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more GastoOperativos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GastoOperativoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many GastoOperativos
     * const gastoOperativo = await prisma.gastoOperativo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends GastoOperativoUpdateManyArgs>(args: SelectSubset<T, GastoOperativoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more GastoOperativos and returns the data updated in the database.
     * @param {GastoOperativoUpdateManyAndReturnArgs} args - Arguments to update many GastoOperativos.
     * @example
     * // Update many GastoOperativos
     * const gastoOperativo = await prisma.gastoOperativo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more GastoOperativos and only return the `id`
     * const gastoOperativoWithIdOnly = await prisma.gastoOperativo.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends GastoOperativoUpdateManyAndReturnArgs>(args: SelectSubset<T, GastoOperativoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GastoOperativoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one GastoOperativo.
     * @param {GastoOperativoUpsertArgs} args - Arguments to update or create a GastoOperativo.
     * @example
     * // Update or create a GastoOperativo
     * const gastoOperativo = await prisma.gastoOperativo.upsert({
     *   create: {
     *     // ... data to create a GastoOperativo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the GastoOperativo we want to update
     *   }
     * })
     */
    upsert<T extends GastoOperativoUpsertArgs>(args: SelectSubset<T, GastoOperativoUpsertArgs<ExtArgs>>): Prisma__GastoOperativoClient<$Result.GetResult<Prisma.$GastoOperativoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of GastoOperativos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GastoOperativoCountArgs} args - Arguments to filter GastoOperativos to count.
     * @example
     * // Count the number of GastoOperativos
     * const count = await prisma.gastoOperativo.count({
     *   where: {
     *     // ... the filter for the GastoOperativos we want to count
     *   }
     * })
    **/
    count<T extends GastoOperativoCountArgs>(
      args?: Subset<T, GastoOperativoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GastoOperativoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a GastoOperativo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GastoOperativoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GastoOperativoAggregateArgs>(args: Subset<T, GastoOperativoAggregateArgs>): Prisma.PrismaPromise<GetGastoOperativoAggregateType<T>>

    /**
     * Group by GastoOperativo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GastoOperativoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GastoOperativoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GastoOperativoGroupByArgs['orderBy'] }
        : { orderBy?: GastoOperativoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GastoOperativoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGastoOperativoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the GastoOperativo model
   */
  readonly fields: GastoOperativoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for GastoOperativo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__GastoOperativoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asignaciones<T extends GastoOperativo$asignacionesArgs<ExtArgs> = {}>(args?: Subset<T, GastoOperativo$asignacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsignacionGastoProyectoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    moneda<T extends MonedaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MonedaDefaultArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    proveedor<T extends GastoOperativo$proveedorArgs<ExtArgs> = {}>(args?: Subset<T, GastoOperativo$proveedorArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the GastoOperativo model
   */
  interface GastoOperativoFieldRefs {
    readonly id: FieldRef<"GastoOperativo", 'Int'>
    readonly concepto: FieldRef<"GastoOperativo", 'String'>
    readonly descripcion: FieldRef<"GastoOperativo", 'String'>
    readonly monto: FieldRef<"GastoOperativo", 'Decimal'>
    readonly monedaId: FieldRef<"GastoOperativo", 'Int'>
    readonly fecha: FieldRef<"GastoOperativo", 'DateTime'>
    readonly categoria: FieldRef<"GastoOperativo", 'CategoriaGasto'>
    readonly esRecurrente: FieldRef<"GastoOperativo", 'Boolean'>
    readonly frecuencia: FieldRef<"GastoOperativo", 'String'>
    readonly proveedorId: FieldRef<"GastoOperativo", 'Int'>
    readonly comprobante: FieldRef<"GastoOperativo", 'String'>
    readonly observaciones: FieldRef<"GastoOperativo", 'String'>
    readonly activo: FieldRef<"GastoOperativo", 'Boolean'>
    readonly createdAt: FieldRef<"GastoOperativo", 'DateTime'>
    readonly updatedAt: FieldRef<"GastoOperativo", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * GastoOperativo findUnique
   */
  export type GastoOperativoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GastoOperativo
     */
    select?: GastoOperativoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GastoOperativo
     */
    omit?: GastoOperativoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GastoOperativoInclude<ExtArgs> | null
    /**
     * Filter, which GastoOperativo to fetch.
     */
    where: GastoOperativoWhereUniqueInput
  }

  /**
   * GastoOperativo findUniqueOrThrow
   */
  export type GastoOperativoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GastoOperativo
     */
    select?: GastoOperativoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GastoOperativo
     */
    omit?: GastoOperativoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GastoOperativoInclude<ExtArgs> | null
    /**
     * Filter, which GastoOperativo to fetch.
     */
    where: GastoOperativoWhereUniqueInput
  }

  /**
   * GastoOperativo findFirst
   */
  export type GastoOperativoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GastoOperativo
     */
    select?: GastoOperativoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GastoOperativo
     */
    omit?: GastoOperativoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GastoOperativoInclude<ExtArgs> | null
    /**
     * Filter, which GastoOperativo to fetch.
     */
    where?: GastoOperativoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GastoOperativos to fetch.
     */
    orderBy?: GastoOperativoOrderByWithRelationInput | GastoOperativoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GastoOperativos.
     */
    cursor?: GastoOperativoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GastoOperativos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GastoOperativos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GastoOperativos.
     */
    distinct?: GastoOperativoScalarFieldEnum | GastoOperativoScalarFieldEnum[]
  }

  /**
   * GastoOperativo findFirstOrThrow
   */
  export type GastoOperativoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GastoOperativo
     */
    select?: GastoOperativoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GastoOperativo
     */
    omit?: GastoOperativoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GastoOperativoInclude<ExtArgs> | null
    /**
     * Filter, which GastoOperativo to fetch.
     */
    where?: GastoOperativoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GastoOperativos to fetch.
     */
    orderBy?: GastoOperativoOrderByWithRelationInput | GastoOperativoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GastoOperativos.
     */
    cursor?: GastoOperativoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GastoOperativos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GastoOperativos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GastoOperativos.
     */
    distinct?: GastoOperativoScalarFieldEnum | GastoOperativoScalarFieldEnum[]
  }

  /**
   * GastoOperativo findMany
   */
  export type GastoOperativoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GastoOperativo
     */
    select?: GastoOperativoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GastoOperativo
     */
    omit?: GastoOperativoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GastoOperativoInclude<ExtArgs> | null
    /**
     * Filter, which GastoOperativos to fetch.
     */
    where?: GastoOperativoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GastoOperativos to fetch.
     */
    orderBy?: GastoOperativoOrderByWithRelationInput | GastoOperativoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing GastoOperativos.
     */
    cursor?: GastoOperativoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GastoOperativos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GastoOperativos.
     */
    skip?: number
    distinct?: GastoOperativoScalarFieldEnum | GastoOperativoScalarFieldEnum[]
  }

  /**
   * GastoOperativo create
   */
  export type GastoOperativoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GastoOperativo
     */
    select?: GastoOperativoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GastoOperativo
     */
    omit?: GastoOperativoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GastoOperativoInclude<ExtArgs> | null
    /**
     * The data needed to create a GastoOperativo.
     */
    data: XOR<GastoOperativoCreateInput, GastoOperativoUncheckedCreateInput>
  }

  /**
   * GastoOperativo createMany
   */
  export type GastoOperativoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many GastoOperativos.
     */
    data: GastoOperativoCreateManyInput | GastoOperativoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * GastoOperativo createManyAndReturn
   */
  export type GastoOperativoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GastoOperativo
     */
    select?: GastoOperativoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the GastoOperativo
     */
    omit?: GastoOperativoOmit<ExtArgs> | null
    /**
     * The data used to create many GastoOperativos.
     */
    data: GastoOperativoCreateManyInput | GastoOperativoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GastoOperativoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * GastoOperativo update
   */
  export type GastoOperativoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GastoOperativo
     */
    select?: GastoOperativoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GastoOperativo
     */
    omit?: GastoOperativoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GastoOperativoInclude<ExtArgs> | null
    /**
     * The data needed to update a GastoOperativo.
     */
    data: XOR<GastoOperativoUpdateInput, GastoOperativoUncheckedUpdateInput>
    /**
     * Choose, which GastoOperativo to update.
     */
    where: GastoOperativoWhereUniqueInput
  }

  /**
   * GastoOperativo updateMany
   */
  export type GastoOperativoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update GastoOperativos.
     */
    data: XOR<GastoOperativoUpdateManyMutationInput, GastoOperativoUncheckedUpdateManyInput>
    /**
     * Filter which GastoOperativos to update
     */
    where?: GastoOperativoWhereInput
    /**
     * Limit how many GastoOperativos to update.
     */
    limit?: number
  }

  /**
   * GastoOperativo updateManyAndReturn
   */
  export type GastoOperativoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GastoOperativo
     */
    select?: GastoOperativoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the GastoOperativo
     */
    omit?: GastoOperativoOmit<ExtArgs> | null
    /**
     * The data used to update GastoOperativos.
     */
    data: XOR<GastoOperativoUpdateManyMutationInput, GastoOperativoUncheckedUpdateManyInput>
    /**
     * Filter which GastoOperativos to update
     */
    where?: GastoOperativoWhereInput
    /**
     * Limit how many GastoOperativos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GastoOperativoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * GastoOperativo upsert
   */
  export type GastoOperativoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GastoOperativo
     */
    select?: GastoOperativoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GastoOperativo
     */
    omit?: GastoOperativoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GastoOperativoInclude<ExtArgs> | null
    /**
     * The filter to search for the GastoOperativo to update in case it exists.
     */
    where: GastoOperativoWhereUniqueInput
    /**
     * In case the GastoOperativo found by the `where` argument doesn't exist, create a new GastoOperativo with this data.
     */
    create: XOR<GastoOperativoCreateInput, GastoOperativoUncheckedCreateInput>
    /**
     * In case the GastoOperativo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<GastoOperativoUpdateInput, GastoOperativoUncheckedUpdateInput>
  }

  /**
   * GastoOperativo delete
   */
  export type GastoOperativoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GastoOperativo
     */
    select?: GastoOperativoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GastoOperativo
     */
    omit?: GastoOperativoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GastoOperativoInclude<ExtArgs> | null
    /**
     * Filter which GastoOperativo to delete.
     */
    where: GastoOperativoWhereUniqueInput
  }

  /**
   * GastoOperativo deleteMany
   */
  export type GastoOperativoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GastoOperativos to delete
     */
    where?: GastoOperativoWhereInput
    /**
     * Limit how many GastoOperativos to delete.
     */
    limit?: number
  }

  /**
   * GastoOperativo.asignaciones
   */
  export type GastoOperativo$asignacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsignacionGastoProyecto
     */
    select?: AsignacionGastoProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsignacionGastoProyecto
     */
    omit?: AsignacionGastoProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsignacionGastoProyectoInclude<ExtArgs> | null
    where?: AsignacionGastoProyectoWhereInput
    orderBy?: AsignacionGastoProyectoOrderByWithRelationInput | AsignacionGastoProyectoOrderByWithRelationInput[]
    cursor?: AsignacionGastoProyectoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AsignacionGastoProyectoScalarFieldEnum | AsignacionGastoProyectoScalarFieldEnum[]
  }

  /**
   * GastoOperativo.proveedor
   */
  export type GastoOperativo$proveedorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    where?: PersonaWhereInput
  }

  /**
   * GastoOperativo without action
   */
  export type GastoOperativoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GastoOperativo
     */
    select?: GastoOperativoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the GastoOperativo
     */
    omit?: GastoOperativoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GastoOperativoInclude<ExtArgs> | null
  }


  /**
   * Model AsignacionGastoProyecto
   */

  export type AggregateAsignacionGastoProyecto = {
    _count: AsignacionGastoProyectoCountAggregateOutputType | null
    _avg: AsignacionGastoProyectoAvgAggregateOutputType | null
    _sum: AsignacionGastoProyectoSumAggregateOutputType | null
    _min: AsignacionGastoProyectoMinAggregateOutputType | null
    _max: AsignacionGastoProyectoMaxAggregateOutputType | null
  }

  export type AsignacionGastoProyectoAvgAggregateOutputType = {
    id: number | null
    gastoId: number | null
    presupuestoId: number | null
    porcentaje: Decimal | null
    montoAsignado: Decimal | null
  }

  export type AsignacionGastoProyectoSumAggregateOutputType = {
    id: number | null
    gastoId: number | null
    presupuestoId: number | null
    porcentaje: Decimal | null
    montoAsignado: Decimal | null
  }

  export type AsignacionGastoProyectoMinAggregateOutputType = {
    id: number | null
    gastoId: number | null
    presupuestoId: number | null
    porcentaje: Decimal | null
    montoAsignado: Decimal | null
    justificacion: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AsignacionGastoProyectoMaxAggregateOutputType = {
    id: number | null
    gastoId: number | null
    presupuestoId: number | null
    porcentaje: Decimal | null
    montoAsignado: Decimal | null
    justificacion: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AsignacionGastoProyectoCountAggregateOutputType = {
    id: number
    gastoId: number
    presupuestoId: number
    porcentaje: number
    montoAsignado: number
    justificacion: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AsignacionGastoProyectoAvgAggregateInputType = {
    id?: true
    gastoId?: true
    presupuestoId?: true
    porcentaje?: true
    montoAsignado?: true
  }

  export type AsignacionGastoProyectoSumAggregateInputType = {
    id?: true
    gastoId?: true
    presupuestoId?: true
    porcentaje?: true
    montoAsignado?: true
  }

  export type AsignacionGastoProyectoMinAggregateInputType = {
    id?: true
    gastoId?: true
    presupuestoId?: true
    porcentaje?: true
    montoAsignado?: true
    justificacion?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AsignacionGastoProyectoMaxAggregateInputType = {
    id?: true
    gastoId?: true
    presupuestoId?: true
    porcentaje?: true
    montoAsignado?: true
    justificacion?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AsignacionGastoProyectoCountAggregateInputType = {
    id?: true
    gastoId?: true
    presupuestoId?: true
    porcentaje?: true
    montoAsignado?: true
    justificacion?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AsignacionGastoProyectoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AsignacionGastoProyecto to aggregate.
     */
    where?: AsignacionGastoProyectoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AsignacionGastoProyectos to fetch.
     */
    orderBy?: AsignacionGastoProyectoOrderByWithRelationInput | AsignacionGastoProyectoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AsignacionGastoProyectoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AsignacionGastoProyectos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AsignacionGastoProyectos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AsignacionGastoProyectos
    **/
    _count?: true | AsignacionGastoProyectoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AsignacionGastoProyectoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AsignacionGastoProyectoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AsignacionGastoProyectoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AsignacionGastoProyectoMaxAggregateInputType
  }

  export type GetAsignacionGastoProyectoAggregateType<T extends AsignacionGastoProyectoAggregateArgs> = {
        [P in keyof T & keyof AggregateAsignacionGastoProyecto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAsignacionGastoProyecto[P]>
      : GetScalarType<T[P], AggregateAsignacionGastoProyecto[P]>
  }




  export type AsignacionGastoProyectoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AsignacionGastoProyectoWhereInput
    orderBy?: AsignacionGastoProyectoOrderByWithAggregationInput | AsignacionGastoProyectoOrderByWithAggregationInput[]
    by: AsignacionGastoProyectoScalarFieldEnum[] | AsignacionGastoProyectoScalarFieldEnum
    having?: AsignacionGastoProyectoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AsignacionGastoProyectoCountAggregateInputType | true
    _avg?: AsignacionGastoProyectoAvgAggregateInputType
    _sum?: AsignacionGastoProyectoSumAggregateInputType
    _min?: AsignacionGastoProyectoMinAggregateInputType
    _max?: AsignacionGastoProyectoMaxAggregateInputType
  }

  export type AsignacionGastoProyectoGroupByOutputType = {
    id: number
    gastoId: number
    presupuestoId: number
    porcentaje: Decimal
    montoAsignado: Decimal
    justificacion: string | null
    createdAt: Date
    updatedAt: Date
    _count: AsignacionGastoProyectoCountAggregateOutputType | null
    _avg: AsignacionGastoProyectoAvgAggregateOutputType | null
    _sum: AsignacionGastoProyectoSumAggregateOutputType | null
    _min: AsignacionGastoProyectoMinAggregateOutputType | null
    _max: AsignacionGastoProyectoMaxAggregateOutputType | null
  }

  type GetAsignacionGastoProyectoGroupByPayload<T extends AsignacionGastoProyectoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AsignacionGastoProyectoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AsignacionGastoProyectoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AsignacionGastoProyectoGroupByOutputType[P]>
            : GetScalarType<T[P], AsignacionGastoProyectoGroupByOutputType[P]>
        }
      >
    >


  export type AsignacionGastoProyectoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    gastoId?: boolean
    presupuestoId?: boolean
    porcentaje?: boolean
    montoAsignado?: boolean
    justificacion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    gasto?: boolean | GastoOperativoDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asignacionGastoProyecto"]>

  export type AsignacionGastoProyectoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    gastoId?: boolean
    presupuestoId?: boolean
    porcentaje?: boolean
    montoAsignado?: boolean
    justificacion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    gasto?: boolean | GastoOperativoDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asignacionGastoProyecto"]>

  export type AsignacionGastoProyectoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    gastoId?: boolean
    presupuestoId?: boolean
    porcentaje?: boolean
    montoAsignado?: boolean
    justificacion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    gasto?: boolean | GastoOperativoDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asignacionGastoProyecto"]>

  export type AsignacionGastoProyectoSelectScalar = {
    id?: boolean
    gastoId?: boolean
    presupuestoId?: boolean
    porcentaje?: boolean
    montoAsignado?: boolean
    justificacion?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AsignacionGastoProyectoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "gastoId" | "presupuestoId" | "porcentaje" | "montoAsignado" | "justificacion" | "createdAt" | "updatedAt", ExtArgs["result"]["asignacionGastoProyecto"]>
  export type AsignacionGastoProyectoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    gasto?: boolean | GastoOperativoDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
  }
  export type AsignacionGastoProyectoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    gasto?: boolean | GastoOperativoDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
  }
  export type AsignacionGastoProyectoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    gasto?: boolean | GastoOperativoDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
  }

  export type $AsignacionGastoProyectoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AsignacionGastoProyecto"
    objects: {
      gasto: Prisma.$GastoOperativoPayload<ExtArgs>
      presupuesto: Prisma.$PresupuestoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      gastoId: number
      presupuestoId: number
      porcentaje: Prisma.Decimal
      montoAsignado: Prisma.Decimal
      justificacion: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["asignacionGastoProyecto"]>
    composites: {}
  }

  type AsignacionGastoProyectoGetPayload<S extends boolean | null | undefined | AsignacionGastoProyectoDefaultArgs> = $Result.GetResult<Prisma.$AsignacionGastoProyectoPayload, S>

  type AsignacionGastoProyectoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AsignacionGastoProyectoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AsignacionGastoProyectoCountAggregateInputType | true
    }

  export interface AsignacionGastoProyectoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AsignacionGastoProyecto'], meta: { name: 'AsignacionGastoProyecto' } }
    /**
     * Find zero or one AsignacionGastoProyecto that matches the filter.
     * @param {AsignacionGastoProyectoFindUniqueArgs} args - Arguments to find a AsignacionGastoProyecto
     * @example
     * // Get one AsignacionGastoProyecto
     * const asignacionGastoProyecto = await prisma.asignacionGastoProyecto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AsignacionGastoProyectoFindUniqueArgs>(args: SelectSubset<T, AsignacionGastoProyectoFindUniqueArgs<ExtArgs>>): Prisma__AsignacionGastoProyectoClient<$Result.GetResult<Prisma.$AsignacionGastoProyectoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AsignacionGastoProyecto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AsignacionGastoProyectoFindUniqueOrThrowArgs} args - Arguments to find a AsignacionGastoProyecto
     * @example
     * // Get one AsignacionGastoProyecto
     * const asignacionGastoProyecto = await prisma.asignacionGastoProyecto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AsignacionGastoProyectoFindUniqueOrThrowArgs>(args: SelectSubset<T, AsignacionGastoProyectoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AsignacionGastoProyectoClient<$Result.GetResult<Prisma.$AsignacionGastoProyectoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AsignacionGastoProyecto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsignacionGastoProyectoFindFirstArgs} args - Arguments to find a AsignacionGastoProyecto
     * @example
     * // Get one AsignacionGastoProyecto
     * const asignacionGastoProyecto = await prisma.asignacionGastoProyecto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AsignacionGastoProyectoFindFirstArgs>(args?: SelectSubset<T, AsignacionGastoProyectoFindFirstArgs<ExtArgs>>): Prisma__AsignacionGastoProyectoClient<$Result.GetResult<Prisma.$AsignacionGastoProyectoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AsignacionGastoProyecto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsignacionGastoProyectoFindFirstOrThrowArgs} args - Arguments to find a AsignacionGastoProyecto
     * @example
     * // Get one AsignacionGastoProyecto
     * const asignacionGastoProyecto = await prisma.asignacionGastoProyecto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AsignacionGastoProyectoFindFirstOrThrowArgs>(args?: SelectSubset<T, AsignacionGastoProyectoFindFirstOrThrowArgs<ExtArgs>>): Prisma__AsignacionGastoProyectoClient<$Result.GetResult<Prisma.$AsignacionGastoProyectoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AsignacionGastoProyectos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsignacionGastoProyectoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AsignacionGastoProyectos
     * const asignacionGastoProyectos = await prisma.asignacionGastoProyecto.findMany()
     * 
     * // Get first 10 AsignacionGastoProyectos
     * const asignacionGastoProyectos = await prisma.asignacionGastoProyecto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const asignacionGastoProyectoWithIdOnly = await prisma.asignacionGastoProyecto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AsignacionGastoProyectoFindManyArgs>(args?: SelectSubset<T, AsignacionGastoProyectoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsignacionGastoProyectoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AsignacionGastoProyecto.
     * @param {AsignacionGastoProyectoCreateArgs} args - Arguments to create a AsignacionGastoProyecto.
     * @example
     * // Create one AsignacionGastoProyecto
     * const AsignacionGastoProyecto = await prisma.asignacionGastoProyecto.create({
     *   data: {
     *     // ... data to create a AsignacionGastoProyecto
     *   }
     * })
     * 
     */
    create<T extends AsignacionGastoProyectoCreateArgs>(args: SelectSubset<T, AsignacionGastoProyectoCreateArgs<ExtArgs>>): Prisma__AsignacionGastoProyectoClient<$Result.GetResult<Prisma.$AsignacionGastoProyectoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AsignacionGastoProyectos.
     * @param {AsignacionGastoProyectoCreateManyArgs} args - Arguments to create many AsignacionGastoProyectos.
     * @example
     * // Create many AsignacionGastoProyectos
     * const asignacionGastoProyecto = await prisma.asignacionGastoProyecto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AsignacionGastoProyectoCreateManyArgs>(args?: SelectSubset<T, AsignacionGastoProyectoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AsignacionGastoProyectos and returns the data saved in the database.
     * @param {AsignacionGastoProyectoCreateManyAndReturnArgs} args - Arguments to create many AsignacionGastoProyectos.
     * @example
     * // Create many AsignacionGastoProyectos
     * const asignacionGastoProyecto = await prisma.asignacionGastoProyecto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AsignacionGastoProyectos and only return the `id`
     * const asignacionGastoProyectoWithIdOnly = await prisma.asignacionGastoProyecto.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AsignacionGastoProyectoCreateManyAndReturnArgs>(args?: SelectSubset<T, AsignacionGastoProyectoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsignacionGastoProyectoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AsignacionGastoProyecto.
     * @param {AsignacionGastoProyectoDeleteArgs} args - Arguments to delete one AsignacionGastoProyecto.
     * @example
     * // Delete one AsignacionGastoProyecto
     * const AsignacionGastoProyecto = await prisma.asignacionGastoProyecto.delete({
     *   where: {
     *     // ... filter to delete one AsignacionGastoProyecto
     *   }
     * })
     * 
     */
    delete<T extends AsignacionGastoProyectoDeleteArgs>(args: SelectSubset<T, AsignacionGastoProyectoDeleteArgs<ExtArgs>>): Prisma__AsignacionGastoProyectoClient<$Result.GetResult<Prisma.$AsignacionGastoProyectoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AsignacionGastoProyecto.
     * @param {AsignacionGastoProyectoUpdateArgs} args - Arguments to update one AsignacionGastoProyecto.
     * @example
     * // Update one AsignacionGastoProyecto
     * const asignacionGastoProyecto = await prisma.asignacionGastoProyecto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AsignacionGastoProyectoUpdateArgs>(args: SelectSubset<T, AsignacionGastoProyectoUpdateArgs<ExtArgs>>): Prisma__AsignacionGastoProyectoClient<$Result.GetResult<Prisma.$AsignacionGastoProyectoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AsignacionGastoProyectos.
     * @param {AsignacionGastoProyectoDeleteManyArgs} args - Arguments to filter AsignacionGastoProyectos to delete.
     * @example
     * // Delete a few AsignacionGastoProyectos
     * const { count } = await prisma.asignacionGastoProyecto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AsignacionGastoProyectoDeleteManyArgs>(args?: SelectSubset<T, AsignacionGastoProyectoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AsignacionGastoProyectos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsignacionGastoProyectoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AsignacionGastoProyectos
     * const asignacionGastoProyecto = await prisma.asignacionGastoProyecto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AsignacionGastoProyectoUpdateManyArgs>(args: SelectSubset<T, AsignacionGastoProyectoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AsignacionGastoProyectos and returns the data updated in the database.
     * @param {AsignacionGastoProyectoUpdateManyAndReturnArgs} args - Arguments to update many AsignacionGastoProyectos.
     * @example
     * // Update many AsignacionGastoProyectos
     * const asignacionGastoProyecto = await prisma.asignacionGastoProyecto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AsignacionGastoProyectos and only return the `id`
     * const asignacionGastoProyectoWithIdOnly = await prisma.asignacionGastoProyecto.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AsignacionGastoProyectoUpdateManyAndReturnArgs>(args: SelectSubset<T, AsignacionGastoProyectoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsignacionGastoProyectoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AsignacionGastoProyecto.
     * @param {AsignacionGastoProyectoUpsertArgs} args - Arguments to update or create a AsignacionGastoProyecto.
     * @example
     * // Update or create a AsignacionGastoProyecto
     * const asignacionGastoProyecto = await prisma.asignacionGastoProyecto.upsert({
     *   create: {
     *     // ... data to create a AsignacionGastoProyecto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AsignacionGastoProyecto we want to update
     *   }
     * })
     */
    upsert<T extends AsignacionGastoProyectoUpsertArgs>(args: SelectSubset<T, AsignacionGastoProyectoUpsertArgs<ExtArgs>>): Prisma__AsignacionGastoProyectoClient<$Result.GetResult<Prisma.$AsignacionGastoProyectoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AsignacionGastoProyectos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsignacionGastoProyectoCountArgs} args - Arguments to filter AsignacionGastoProyectos to count.
     * @example
     * // Count the number of AsignacionGastoProyectos
     * const count = await prisma.asignacionGastoProyecto.count({
     *   where: {
     *     // ... the filter for the AsignacionGastoProyectos we want to count
     *   }
     * })
    **/
    count<T extends AsignacionGastoProyectoCountArgs>(
      args?: Subset<T, AsignacionGastoProyectoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AsignacionGastoProyectoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AsignacionGastoProyecto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsignacionGastoProyectoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AsignacionGastoProyectoAggregateArgs>(args: Subset<T, AsignacionGastoProyectoAggregateArgs>): Prisma.PrismaPromise<GetAsignacionGastoProyectoAggregateType<T>>

    /**
     * Group by AsignacionGastoProyecto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsignacionGastoProyectoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AsignacionGastoProyectoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AsignacionGastoProyectoGroupByArgs['orderBy'] }
        : { orderBy?: AsignacionGastoProyectoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AsignacionGastoProyectoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAsignacionGastoProyectoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AsignacionGastoProyecto model
   */
  readonly fields: AsignacionGastoProyectoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AsignacionGastoProyecto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AsignacionGastoProyectoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    gasto<T extends GastoOperativoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, GastoOperativoDefaultArgs<ExtArgs>>): Prisma__GastoOperativoClient<$Result.GetResult<Prisma.$GastoOperativoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    presupuesto<T extends PresupuestoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PresupuestoDefaultArgs<ExtArgs>>): Prisma__PresupuestoClient<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AsignacionGastoProyecto model
   */
  interface AsignacionGastoProyectoFieldRefs {
    readonly id: FieldRef<"AsignacionGastoProyecto", 'Int'>
    readonly gastoId: FieldRef<"AsignacionGastoProyecto", 'Int'>
    readonly presupuestoId: FieldRef<"AsignacionGastoProyecto", 'Int'>
    readonly porcentaje: FieldRef<"AsignacionGastoProyecto", 'Decimal'>
    readonly montoAsignado: FieldRef<"AsignacionGastoProyecto", 'Decimal'>
    readonly justificacion: FieldRef<"AsignacionGastoProyecto", 'String'>
    readonly createdAt: FieldRef<"AsignacionGastoProyecto", 'DateTime'>
    readonly updatedAt: FieldRef<"AsignacionGastoProyecto", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AsignacionGastoProyecto findUnique
   */
  export type AsignacionGastoProyectoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsignacionGastoProyecto
     */
    select?: AsignacionGastoProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsignacionGastoProyecto
     */
    omit?: AsignacionGastoProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsignacionGastoProyectoInclude<ExtArgs> | null
    /**
     * Filter, which AsignacionGastoProyecto to fetch.
     */
    where: AsignacionGastoProyectoWhereUniqueInput
  }

  /**
   * AsignacionGastoProyecto findUniqueOrThrow
   */
  export type AsignacionGastoProyectoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsignacionGastoProyecto
     */
    select?: AsignacionGastoProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsignacionGastoProyecto
     */
    omit?: AsignacionGastoProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsignacionGastoProyectoInclude<ExtArgs> | null
    /**
     * Filter, which AsignacionGastoProyecto to fetch.
     */
    where: AsignacionGastoProyectoWhereUniqueInput
  }

  /**
   * AsignacionGastoProyecto findFirst
   */
  export type AsignacionGastoProyectoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsignacionGastoProyecto
     */
    select?: AsignacionGastoProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsignacionGastoProyecto
     */
    omit?: AsignacionGastoProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsignacionGastoProyectoInclude<ExtArgs> | null
    /**
     * Filter, which AsignacionGastoProyecto to fetch.
     */
    where?: AsignacionGastoProyectoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AsignacionGastoProyectos to fetch.
     */
    orderBy?: AsignacionGastoProyectoOrderByWithRelationInput | AsignacionGastoProyectoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AsignacionGastoProyectos.
     */
    cursor?: AsignacionGastoProyectoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AsignacionGastoProyectos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AsignacionGastoProyectos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AsignacionGastoProyectos.
     */
    distinct?: AsignacionGastoProyectoScalarFieldEnum | AsignacionGastoProyectoScalarFieldEnum[]
  }

  /**
   * AsignacionGastoProyecto findFirstOrThrow
   */
  export type AsignacionGastoProyectoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsignacionGastoProyecto
     */
    select?: AsignacionGastoProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsignacionGastoProyecto
     */
    omit?: AsignacionGastoProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsignacionGastoProyectoInclude<ExtArgs> | null
    /**
     * Filter, which AsignacionGastoProyecto to fetch.
     */
    where?: AsignacionGastoProyectoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AsignacionGastoProyectos to fetch.
     */
    orderBy?: AsignacionGastoProyectoOrderByWithRelationInput | AsignacionGastoProyectoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AsignacionGastoProyectos.
     */
    cursor?: AsignacionGastoProyectoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AsignacionGastoProyectos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AsignacionGastoProyectos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AsignacionGastoProyectos.
     */
    distinct?: AsignacionGastoProyectoScalarFieldEnum | AsignacionGastoProyectoScalarFieldEnum[]
  }

  /**
   * AsignacionGastoProyecto findMany
   */
  export type AsignacionGastoProyectoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsignacionGastoProyecto
     */
    select?: AsignacionGastoProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsignacionGastoProyecto
     */
    omit?: AsignacionGastoProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsignacionGastoProyectoInclude<ExtArgs> | null
    /**
     * Filter, which AsignacionGastoProyectos to fetch.
     */
    where?: AsignacionGastoProyectoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AsignacionGastoProyectos to fetch.
     */
    orderBy?: AsignacionGastoProyectoOrderByWithRelationInput | AsignacionGastoProyectoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AsignacionGastoProyectos.
     */
    cursor?: AsignacionGastoProyectoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AsignacionGastoProyectos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AsignacionGastoProyectos.
     */
    skip?: number
    distinct?: AsignacionGastoProyectoScalarFieldEnum | AsignacionGastoProyectoScalarFieldEnum[]
  }

  /**
   * AsignacionGastoProyecto create
   */
  export type AsignacionGastoProyectoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsignacionGastoProyecto
     */
    select?: AsignacionGastoProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsignacionGastoProyecto
     */
    omit?: AsignacionGastoProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsignacionGastoProyectoInclude<ExtArgs> | null
    /**
     * The data needed to create a AsignacionGastoProyecto.
     */
    data: XOR<AsignacionGastoProyectoCreateInput, AsignacionGastoProyectoUncheckedCreateInput>
  }

  /**
   * AsignacionGastoProyecto createMany
   */
  export type AsignacionGastoProyectoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AsignacionGastoProyectos.
     */
    data: AsignacionGastoProyectoCreateManyInput | AsignacionGastoProyectoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AsignacionGastoProyecto createManyAndReturn
   */
  export type AsignacionGastoProyectoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsignacionGastoProyecto
     */
    select?: AsignacionGastoProyectoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AsignacionGastoProyecto
     */
    omit?: AsignacionGastoProyectoOmit<ExtArgs> | null
    /**
     * The data used to create many AsignacionGastoProyectos.
     */
    data: AsignacionGastoProyectoCreateManyInput | AsignacionGastoProyectoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsignacionGastoProyectoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AsignacionGastoProyecto update
   */
  export type AsignacionGastoProyectoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsignacionGastoProyecto
     */
    select?: AsignacionGastoProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsignacionGastoProyecto
     */
    omit?: AsignacionGastoProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsignacionGastoProyectoInclude<ExtArgs> | null
    /**
     * The data needed to update a AsignacionGastoProyecto.
     */
    data: XOR<AsignacionGastoProyectoUpdateInput, AsignacionGastoProyectoUncheckedUpdateInput>
    /**
     * Choose, which AsignacionGastoProyecto to update.
     */
    where: AsignacionGastoProyectoWhereUniqueInput
  }

  /**
   * AsignacionGastoProyecto updateMany
   */
  export type AsignacionGastoProyectoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AsignacionGastoProyectos.
     */
    data: XOR<AsignacionGastoProyectoUpdateManyMutationInput, AsignacionGastoProyectoUncheckedUpdateManyInput>
    /**
     * Filter which AsignacionGastoProyectos to update
     */
    where?: AsignacionGastoProyectoWhereInput
    /**
     * Limit how many AsignacionGastoProyectos to update.
     */
    limit?: number
  }

  /**
   * AsignacionGastoProyecto updateManyAndReturn
   */
  export type AsignacionGastoProyectoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsignacionGastoProyecto
     */
    select?: AsignacionGastoProyectoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AsignacionGastoProyecto
     */
    omit?: AsignacionGastoProyectoOmit<ExtArgs> | null
    /**
     * The data used to update AsignacionGastoProyectos.
     */
    data: XOR<AsignacionGastoProyectoUpdateManyMutationInput, AsignacionGastoProyectoUncheckedUpdateManyInput>
    /**
     * Filter which AsignacionGastoProyectos to update
     */
    where?: AsignacionGastoProyectoWhereInput
    /**
     * Limit how many AsignacionGastoProyectos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsignacionGastoProyectoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AsignacionGastoProyecto upsert
   */
  export type AsignacionGastoProyectoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsignacionGastoProyecto
     */
    select?: AsignacionGastoProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsignacionGastoProyecto
     */
    omit?: AsignacionGastoProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsignacionGastoProyectoInclude<ExtArgs> | null
    /**
     * The filter to search for the AsignacionGastoProyecto to update in case it exists.
     */
    where: AsignacionGastoProyectoWhereUniqueInput
    /**
     * In case the AsignacionGastoProyecto found by the `where` argument doesn't exist, create a new AsignacionGastoProyecto with this data.
     */
    create: XOR<AsignacionGastoProyectoCreateInput, AsignacionGastoProyectoUncheckedCreateInput>
    /**
     * In case the AsignacionGastoProyecto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AsignacionGastoProyectoUpdateInput, AsignacionGastoProyectoUncheckedUpdateInput>
  }

  /**
   * AsignacionGastoProyecto delete
   */
  export type AsignacionGastoProyectoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsignacionGastoProyecto
     */
    select?: AsignacionGastoProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsignacionGastoProyecto
     */
    omit?: AsignacionGastoProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsignacionGastoProyectoInclude<ExtArgs> | null
    /**
     * Filter which AsignacionGastoProyecto to delete.
     */
    where: AsignacionGastoProyectoWhereUniqueInput
  }

  /**
   * AsignacionGastoProyecto deleteMany
   */
  export type AsignacionGastoProyectoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AsignacionGastoProyectos to delete
     */
    where?: AsignacionGastoProyectoWhereInput
    /**
     * Limit how many AsignacionGastoProyectos to delete.
     */
    limit?: number
  }

  /**
   * AsignacionGastoProyecto without action
   */
  export type AsignacionGastoProyectoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsignacionGastoProyecto
     */
    select?: AsignacionGastoProyectoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsignacionGastoProyecto
     */
    omit?: AsignacionGastoProyectoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsignacionGastoProyectoInclude<ExtArgs> | null
  }


  /**
   * Model HistorialPrecio
   */

  export type AggregateHistorialPrecio = {
    _count: HistorialPrecioCountAggregateOutputType | null
    _avg: HistorialPrecioAvgAggregateOutputType | null
    _sum: HistorialPrecioSumAggregateOutputType | null
    _min: HistorialPrecioMinAggregateOutputType | null
    _max: HistorialPrecioMaxAggregateOutputType | null
  }

  export type HistorialPrecioAvgAggregateOutputType = {
    id: number | null
    productoId: number | null
    servicioId: number | null
    monedaId: number | null
    precio: Decimal | null
    usuarioId: number | null
  }

  export type HistorialPrecioSumAggregateOutputType = {
    id: number | null
    productoId: number | null
    servicioId: number | null
    monedaId: number | null
    precio: Decimal | null
    usuarioId: number | null
  }

  export type HistorialPrecioMinAggregateOutputType = {
    id: number | null
    productoId: number | null
    servicioId: number | null
    monedaId: number | null
    precio: Decimal | null
    fechaDesde: Date | null
    fechaHasta: Date | null
    motivoCambio: string | null
    usuarioId: number | null
    activo: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type HistorialPrecioMaxAggregateOutputType = {
    id: number | null
    productoId: number | null
    servicioId: number | null
    monedaId: number | null
    precio: Decimal | null
    fechaDesde: Date | null
    fechaHasta: Date | null
    motivoCambio: string | null
    usuarioId: number | null
    activo: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type HistorialPrecioCountAggregateOutputType = {
    id: number
    productoId: number
    servicioId: number
    monedaId: number
    precio: number
    fechaDesde: number
    fechaHasta: number
    motivoCambio: number
    usuarioId: number
    activo: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type HistorialPrecioAvgAggregateInputType = {
    id?: true
    productoId?: true
    servicioId?: true
    monedaId?: true
    precio?: true
    usuarioId?: true
  }

  export type HistorialPrecioSumAggregateInputType = {
    id?: true
    productoId?: true
    servicioId?: true
    monedaId?: true
    precio?: true
    usuarioId?: true
  }

  export type HistorialPrecioMinAggregateInputType = {
    id?: true
    productoId?: true
    servicioId?: true
    monedaId?: true
    precio?: true
    fechaDesde?: true
    fechaHasta?: true
    motivoCambio?: true
    usuarioId?: true
    activo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type HistorialPrecioMaxAggregateInputType = {
    id?: true
    productoId?: true
    servicioId?: true
    monedaId?: true
    precio?: true
    fechaDesde?: true
    fechaHasta?: true
    motivoCambio?: true
    usuarioId?: true
    activo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type HistorialPrecioCountAggregateInputType = {
    id?: true
    productoId?: true
    servicioId?: true
    monedaId?: true
    precio?: true
    fechaDesde?: true
    fechaHasta?: true
    motivoCambio?: true
    usuarioId?: true
    activo?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type HistorialPrecioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistorialPrecio to aggregate.
     */
    where?: HistorialPrecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialPrecios to fetch.
     */
    orderBy?: HistorialPrecioOrderByWithRelationInput | HistorialPrecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HistorialPrecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialPrecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialPrecios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HistorialPrecios
    **/
    _count?: true | HistorialPrecioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HistorialPrecioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HistorialPrecioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HistorialPrecioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HistorialPrecioMaxAggregateInputType
  }

  export type GetHistorialPrecioAggregateType<T extends HistorialPrecioAggregateArgs> = {
        [P in keyof T & keyof AggregateHistorialPrecio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistorialPrecio[P]>
      : GetScalarType<T[P], AggregateHistorialPrecio[P]>
  }




  export type HistorialPrecioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialPrecioWhereInput
    orderBy?: HistorialPrecioOrderByWithAggregationInput | HistorialPrecioOrderByWithAggregationInput[]
    by: HistorialPrecioScalarFieldEnum[] | HistorialPrecioScalarFieldEnum
    having?: HistorialPrecioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HistorialPrecioCountAggregateInputType | true
    _avg?: HistorialPrecioAvgAggregateInputType
    _sum?: HistorialPrecioSumAggregateInputType
    _min?: HistorialPrecioMinAggregateInputType
    _max?: HistorialPrecioMaxAggregateInputType
  }

  export type HistorialPrecioGroupByOutputType = {
    id: number
    productoId: number | null
    servicioId: number | null
    monedaId: number
    precio: Decimal
    fechaDesde: Date
    fechaHasta: Date | null
    motivoCambio: string | null
    usuarioId: number | null
    activo: boolean
    createdAt: Date
    updatedAt: Date
    _count: HistorialPrecioCountAggregateOutputType | null
    _avg: HistorialPrecioAvgAggregateOutputType | null
    _sum: HistorialPrecioSumAggregateOutputType | null
    _min: HistorialPrecioMinAggregateOutputType | null
    _max: HistorialPrecioMaxAggregateOutputType | null
  }

  type GetHistorialPrecioGroupByPayload<T extends HistorialPrecioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HistorialPrecioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HistorialPrecioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HistorialPrecioGroupByOutputType[P]>
            : GetScalarType<T[P], HistorialPrecioGroupByOutputType[P]>
        }
      >
    >


  export type HistorialPrecioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    servicioId?: boolean
    monedaId?: boolean
    precio?: boolean
    fechaDesde?: boolean
    fechaHasta?: boolean
    motivoCambio?: boolean
    usuarioId?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    producto?: boolean | HistorialPrecio$productoArgs<ExtArgs>
    servicio?: boolean | HistorialPrecio$servicioArgs<ExtArgs>
    usuario?: boolean | HistorialPrecio$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["historialPrecio"]>

  export type HistorialPrecioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    servicioId?: boolean
    monedaId?: boolean
    precio?: boolean
    fechaDesde?: boolean
    fechaHasta?: boolean
    motivoCambio?: boolean
    usuarioId?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    producto?: boolean | HistorialPrecio$productoArgs<ExtArgs>
    servicio?: boolean | HistorialPrecio$servicioArgs<ExtArgs>
    usuario?: boolean | HistorialPrecio$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["historialPrecio"]>

  export type HistorialPrecioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    servicioId?: boolean
    monedaId?: boolean
    precio?: boolean
    fechaDesde?: boolean
    fechaHasta?: boolean
    motivoCambio?: boolean
    usuarioId?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    producto?: boolean | HistorialPrecio$productoArgs<ExtArgs>
    servicio?: boolean | HistorialPrecio$servicioArgs<ExtArgs>
    usuario?: boolean | HistorialPrecio$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["historialPrecio"]>

  export type HistorialPrecioSelectScalar = {
    id?: boolean
    productoId?: boolean
    servicioId?: boolean
    monedaId?: boolean
    precio?: boolean
    fechaDesde?: boolean
    fechaHasta?: boolean
    motivoCambio?: boolean
    usuarioId?: boolean
    activo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type HistorialPrecioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productoId" | "servicioId" | "monedaId" | "precio" | "fechaDesde" | "fechaHasta" | "motivoCambio" | "usuarioId" | "activo" | "createdAt" | "updatedAt", ExtArgs["result"]["historialPrecio"]>
  export type HistorialPrecioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    producto?: boolean | HistorialPrecio$productoArgs<ExtArgs>
    servicio?: boolean | HistorialPrecio$servicioArgs<ExtArgs>
    usuario?: boolean | HistorialPrecio$usuarioArgs<ExtArgs>
  }
  export type HistorialPrecioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    producto?: boolean | HistorialPrecio$productoArgs<ExtArgs>
    servicio?: boolean | HistorialPrecio$servicioArgs<ExtArgs>
    usuario?: boolean | HistorialPrecio$usuarioArgs<ExtArgs>
  }
  export type HistorialPrecioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
    producto?: boolean | HistorialPrecio$productoArgs<ExtArgs>
    servicio?: boolean | HistorialPrecio$servicioArgs<ExtArgs>
    usuario?: boolean | HistorialPrecio$usuarioArgs<ExtArgs>
  }

  export type $HistorialPrecioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HistorialPrecio"
    objects: {
      moneda: Prisma.$MonedaPayload<ExtArgs>
      producto: Prisma.$ProductoPayload<ExtArgs> | null
      servicio: Prisma.$ServicioPayload<ExtArgs> | null
      usuario: Prisma.$PersonaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productoId: number | null
      servicioId: number | null
      monedaId: number
      precio: Prisma.Decimal
      fechaDesde: Date
      fechaHasta: Date | null
      motivoCambio: string | null
      usuarioId: number | null
      activo: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["historialPrecio"]>
    composites: {}
  }

  type HistorialPrecioGetPayload<S extends boolean | null | undefined | HistorialPrecioDefaultArgs> = $Result.GetResult<Prisma.$HistorialPrecioPayload, S>

  type HistorialPrecioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<HistorialPrecioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HistorialPrecioCountAggregateInputType | true
    }

  export interface HistorialPrecioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HistorialPrecio'], meta: { name: 'HistorialPrecio' } }
    /**
     * Find zero or one HistorialPrecio that matches the filter.
     * @param {HistorialPrecioFindUniqueArgs} args - Arguments to find a HistorialPrecio
     * @example
     * // Get one HistorialPrecio
     * const historialPrecio = await prisma.historialPrecio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HistorialPrecioFindUniqueArgs>(args: SelectSubset<T, HistorialPrecioFindUniqueArgs<ExtArgs>>): Prisma__HistorialPrecioClient<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one HistorialPrecio that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {HistorialPrecioFindUniqueOrThrowArgs} args - Arguments to find a HistorialPrecio
     * @example
     * // Get one HistorialPrecio
     * const historialPrecio = await prisma.historialPrecio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HistorialPrecioFindUniqueOrThrowArgs>(args: SelectSubset<T, HistorialPrecioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HistorialPrecioClient<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HistorialPrecio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioFindFirstArgs} args - Arguments to find a HistorialPrecio
     * @example
     * // Get one HistorialPrecio
     * const historialPrecio = await prisma.historialPrecio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HistorialPrecioFindFirstArgs>(args?: SelectSubset<T, HistorialPrecioFindFirstArgs<ExtArgs>>): Prisma__HistorialPrecioClient<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HistorialPrecio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioFindFirstOrThrowArgs} args - Arguments to find a HistorialPrecio
     * @example
     * // Get one HistorialPrecio
     * const historialPrecio = await prisma.historialPrecio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HistorialPrecioFindFirstOrThrowArgs>(args?: SelectSubset<T, HistorialPrecioFindFirstOrThrowArgs<ExtArgs>>): Prisma__HistorialPrecioClient<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more HistorialPrecios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HistorialPrecios
     * const historialPrecios = await prisma.historialPrecio.findMany()
     * 
     * // Get first 10 HistorialPrecios
     * const historialPrecios = await prisma.historialPrecio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const historialPrecioWithIdOnly = await prisma.historialPrecio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HistorialPrecioFindManyArgs>(args?: SelectSubset<T, HistorialPrecioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a HistorialPrecio.
     * @param {HistorialPrecioCreateArgs} args - Arguments to create a HistorialPrecio.
     * @example
     * // Create one HistorialPrecio
     * const HistorialPrecio = await prisma.historialPrecio.create({
     *   data: {
     *     // ... data to create a HistorialPrecio
     *   }
     * })
     * 
     */
    create<T extends HistorialPrecioCreateArgs>(args: SelectSubset<T, HistorialPrecioCreateArgs<ExtArgs>>): Prisma__HistorialPrecioClient<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many HistorialPrecios.
     * @param {HistorialPrecioCreateManyArgs} args - Arguments to create many HistorialPrecios.
     * @example
     * // Create many HistorialPrecios
     * const historialPrecio = await prisma.historialPrecio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HistorialPrecioCreateManyArgs>(args?: SelectSubset<T, HistorialPrecioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many HistorialPrecios and returns the data saved in the database.
     * @param {HistorialPrecioCreateManyAndReturnArgs} args - Arguments to create many HistorialPrecios.
     * @example
     * // Create many HistorialPrecios
     * const historialPrecio = await prisma.historialPrecio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many HistorialPrecios and only return the `id`
     * const historialPrecioWithIdOnly = await prisma.historialPrecio.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HistorialPrecioCreateManyAndReturnArgs>(args?: SelectSubset<T, HistorialPrecioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a HistorialPrecio.
     * @param {HistorialPrecioDeleteArgs} args - Arguments to delete one HistorialPrecio.
     * @example
     * // Delete one HistorialPrecio
     * const HistorialPrecio = await prisma.historialPrecio.delete({
     *   where: {
     *     // ... filter to delete one HistorialPrecio
     *   }
     * })
     * 
     */
    delete<T extends HistorialPrecioDeleteArgs>(args: SelectSubset<T, HistorialPrecioDeleteArgs<ExtArgs>>): Prisma__HistorialPrecioClient<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one HistorialPrecio.
     * @param {HistorialPrecioUpdateArgs} args - Arguments to update one HistorialPrecio.
     * @example
     * // Update one HistorialPrecio
     * const historialPrecio = await prisma.historialPrecio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HistorialPrecioUpdateArgs>(args: SelectSubset<T, HistorialPrecioUpdateArgs<ExtArgs>>): Prisma__HistorialPrecioClient<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more HistorialPrecios.
     * @param {HistorialPrecioDeleteManyArgs} args - Arguments to filter HistorialPrecios to delete.
     * @example
     * // Delete a few HistorialPrecios
     * const { count } = await prisma.historialPrecio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HistorialPrecioDeleteManyArgs>(args?: SelectSubset<T, HistorialPrecioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistorialPrecios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HistorialPrecios
     * const historialPrecio = await prisma.historialPrecio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HistorialPrecioUpdateManyArgs>(args: SelectSubset<T, HistorialPrecioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistorialPrecios and returns the data updated in the database.
     * @param {HistorialPrecioUpdateManyAndReturnArgs} args - Arguments to update many HistorialPrecios.
     * @example
     * // Update many HistorialPrecios
     * const historialPrecio = await prisma.historialPrecio.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more HistorialPrecios and only return the `id`
     * const historialPrecioWithIdOnly = await prisma.historialPrecio.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends HistorialPrecioUpdateManyAndReturnArgs>(args: SelectSubset<T, HistorialPrecioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one HistorialPrecio.
     * @param {HistorialPrecioUpsertArgs} args - Arguments to update or create a HistorialPrecio.
     * @example
     * // Update or create a HistorialPrecio
     * const historialPrecio = await prisma.historialPrecio.upsert({
     *   create: {
     *     // ... data to create a HistorialPrecio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HistorialPrecio we want to update
     *   }
     * })
     */
    upsert<T extends HistorialPrecioUpsertArgs>(args: SelectSubset<T, HistorialPrecioUpsertArgs<ExtArgs>>): Prisma__HistorialPrecioClient<$Result.GetResult<Prisma.$HistorialPrecioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of HistorialPrecios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioCountArgs} args - Arguments to filter HistorialPrecios to count.
     * @example
     * // Count the number of HistorialPrecios
     * const count = await prisma.historialPrecio.count({
     *   where: {
     *     // ... the filter for the HistorialPrecios we want to count
     *   }
     * })
    **/
    count<T extends HistorialPrecioCountArgs>(
      args?: Subset<T, HistorialPrecioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HistorialPrecioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HistorialPrecio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HistorialPrecioAggregateArgs>(args: Subset<T, HistorialPrecioAggregateArgs>): Prisma.PrismaPromise<GetHistorialPrecioAggregateType<T>>

    /**
     * Group by HistorialPrecio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialPrecioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HistorialPrecioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HistorialPrecioGroupByArgs['orderBy'] }
        : { orderBy?: HistorialPrecioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HistorialPrecioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistorialPrecioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HistorialPrecio model
   */
  readonly fields: HistorialPrecioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HistorialPrecio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HistorialPrecioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    moneda<T extends MonedaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MonedaDefaultArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    producto<T extends HistorialPrecio$productoArgs<ExtArgs> = {}>(args?: Subset<T, HistorialPrecio$productoArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    servicio<T extends HistorialPrecio$servicioArgs<ExtArgs> = {}>(args?: Subset<T, HistorialPrecio$servicioArgs<ExtArgs>>): Prisma__ServicioClient<$Result.GetResult<Prisma.$ServicioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    usuario<T extends HistorialPrecio$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, HistorialPrecio$usuarioArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HistorialPrecio model
   */
  interface HistorialPrecioFieldRefs {
    readonly id: FieldRef<"HistorialPrecio", 'Int'>
    readonly productoId: FieldRef<"HistorialPrecio", 'Int'>
    readonly servicioId: FieldRef<"HistorialPrecio", 'Int'>
    readonly monedaId: FieldRef<"HistorialPrecio", 'Int'>
    readonly precio: FieldRef<"HistorialPrecio", 'Decimal'>
    readonly fechaDesde: FieldRef<"HistorialPrecio", 'DateTime'>
    readonly fechaHasta: FieldRef<"HistorialPrecio", 'DateTime'>
    readonly motivoCambio: FieldRef<"HistorialPrecio", 'String'>
    readonly usuarioId: FieldRef<"HistorialPrecio", 'Int'>
    readonly activo: FieldRef<"HistorialPrecio", 'Boolean'>
    readonly createdAt: FieldRef<"HistorialPrecio", 'DateTime'>
    readonly updatedAt: FieldRef<"HistorialPrecio", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * HistorialPrecio findUnique
   */
  export type HistorialPrecioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialPrecio
     */
    omit?: HistorialPrecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    /**
     * Filter, which HistorialPrecio to fetch.
     */
    where: HistorialPrecioWhereUniqueInput
  }

  /**
   * HistorialPrecio findUniqueOrThrow
   */
  export type HistorialPrecioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialPrecio
     */
    omit?: HistorialPrecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    /**
     * Filter, which HistorialPrecio to fetch.
     */
    where: HistorialPrecioWhereUniqueInput
  }

  /**
   * HistorialPrecio findFirst
   */
  export type HistorialPrecioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialPrecio
     */
    omit?: HistorialPrecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    /**
     * Filter, which HistorialPrecio to fetch.
     */
    where?: HistorialPrecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialPrecios to fetch.
     */
    orderBy?: HistorialPrecioOrderByWithRelationInput | HistorialPrecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistorialPrecios.
     */
    cursor?: HistorialPrecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialPrecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialPrecios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistorialPrecios.
     */
    distinct?: HistorialPrecioScalarFieldEnum | HistorialPrecioScalarFieldEnum[]
  }

  /**
   * HistorialPrecio findFirstOrThrow
   */
  export type HistorialPrecioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialPrecio
     */
    omit?: HistorialPrecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    /**
     * Filter, which HistorialPrecio to fetch.
     */
    where?: HistorialPrecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialPrecios to fetch.
     */
    orderBy?: HistorialPrecioOrderByWithRelationInput | HistorialPrecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistorialPrecios.
     */
    cursor?: HistorialPrecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialPrecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialPrecios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistorialPrecios.
     */
    distinct?: HistorialPrecioScalarFieldEnum | HistorialPrecioScalarFieldEnum[]
  }

  /**
   * HistorialPrecio findMany
   */
  export type HistorialPrecioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialPrecio
     */
    omit?: HistorialPrecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    /**
     * Filter, which HistorialPrecios to fetch.
     */
    where?: HistorialPrecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialPrecios to fetch.
     */
    orderBy?: HistorialPrecioOrderByWithRelationInput | HistorialPrecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HistorialPrecios.
     */
    cursor?: HistorialPrecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialPrecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialPrecios.
     */
    skip?: number
    distinct?: HistorialPrecioScalarFieldEnum | HistorialPrecioScalarFieldEnum[]
  }

  /**
   * HistorialPrecio create
   */
  export type HistorialPrecioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialPrecio
     */
    omit?: HistorialPrecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    /**
     * The data needed to create a HistorialPrecio.
     */
    data: XOR<HistorialPrecioCreateInput, HistorialPrecioUncheckedCreateInput>
  }

  /**
   * HistorialPrecio createMany
   */
  export type HistorialPrecioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HistorialPrecios.
     */
    data: HistorialPrecioCreateManyInput | HistorialPrecioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HistorialPrecio createManyAndReturn
   */
  export type HistorialPrecioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialPrecio
     */
    omit?: HistorialPrecioOmit<ExtArgs> | null
    /**
     * The data used to create many HistorialPrecios.
     */
    data: HistorialPrecioCreateManyInput | HistorialPrecioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * HistorialPrecio update
   */
  export type HistorialPrecioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialPrecio
     */
    omit?: HistorialPrecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    /**
     * The data needed to update a HistorialPrecio.
     */
    data: XOR<HistorialPrecioUpdateInput, HistorialPrecioUncheckedUpdateInput>
    /**
     * Choose, which HistorialPrecio to update.
     */
    where: HistorialPrecioWhereUniqueInput
  }

  /**
   * HistorialPrecio updateMany
   */
  export type HistorialPrecioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HistorialPrecios.
     */
    data: XOR<HistorialPrecioUpdateManyMutationInput, HistorialPrecioUncheckedUpdateManyInput>
    /**
     * Filter which HistorialPrecios to update
     */
    where?: HistorialPrecioWhereInput
    /**
     * Limit how many HistorialPrecios to update.
     */
    limit?: number
  }

  /**
   * HistorialPrecio updateManyAndReturn
   */
  export type HistorialPrecioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialPrecio
     */
    omit?: HistorialPrecioOmit<ExtArgs> | null
    /**
     * The data used to update HistorialPrecios.
     */
    data: XOR<HistorialPrecioUpdateManyMutationInput, HistorialPrecioUncheckedUpdateManyInput>
    /**
     * Filter which HistorialPrecios to update
     */
    where?: HistorialPrecioWhereInput
    /**
     * Limit how many HistorialPrecios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * HistorialPrecio upsert
   */
  export type HistorialPrecioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialPrecio
     */
    omit?: HistorialPrecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    /**
     * The filter to search for the HistorialPrecio to update in case it exists.
     */
    where: HistorialPrecioWhereUniqueInput
    /**
     * In case the HistorialPrecio found by the `where` argument doesn't exist, create a new HistorialPrecio with this data.
     */
    create: XOR<HistorialPrecioCreateInput, HistorialPrecioUncheckedCreateInput>
    /**
     * In case the HistorialPrecio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HistorialPrecioUpdateInput, HistorialPrecioUncheckedUpdateInput>
  }

  /**
   * HistorialPrecio delete
   */
  export type HistorialPrecioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialPrecio
     */
    omit?: HistorialPrecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
    /**
     * Filter which HistorialPrecio to delete.
     */
    where: HistorialPrecioWhereUniqueInput
  }

  /**
   * HistorialPrecio deleteMany
   */
  export type HistorialPrecioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistorialPrecios to delete
     */
    where?: HistorialPrecioWhereInput
    /**
     * Limit how many HistorialPrecios to delete.
     */
    limit?: number
  }

  /**
   * HistorialPrecio.producto
   */
  export type HistorialPrecio$productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
  }

  /**
   * HistorialPrecio.servicio
   */
  export type HistorialPrecio$servicioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicio
     */
    select?: ServicioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Servicio
     */
    omit?: ServicioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServicioInclude<ExtArgs> | null
    where?: ServicioWhereInput
  }

  /**
   * HistorialPrecio.usuario
   */
  export type HistorialPrecio$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Persona
     */
    select?: PersonaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Persona
     */
    omit?: PersonaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PersonaInclude<ExtArgs> | null
    where?: PersonaWhereInput
  }

  /**
   * HistorialPrecio without action
   */
  export type HistorialPrecioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialPrecio
     */
    select?: HistorialPrecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialPrecio
     */
    omit?: HistorialPrecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialPrecioInclude<ExtArgs> | null
  }


  /**
   * Model PagoAdmin
   */

  export type AggregatePagoAdmin = {
    _count: PagoAdminCountAggregateOutputType | null
    _avg: PagoAdminAvgAggregateOutputType | null
    _sum: PagoAdminSumAggregateOutputType | null
    _min: PagoAdminMinAggregateOutputType | null
    _max: PagoAdminMaxAggregateOutputType | null
  }

  export type PagoAdminAvgAggregateOutputType = {
    id: number | null
    adminId: number | null
    presupuestoId: number | null
    monto: Decimal | null
    monedaId: number | null
  }

  export type PagoAdminSumAggregateOutputType = {
    id: number | null
    adminId: number | null
    presupuestoId: number | null
    monto: Decimal | null
    monedaId: number | null
  }

  export type PagoAdminMinAggregateOutputType = {
    id: number | null
    adminId: number | null
    presupuestoId: number | null
    monto: Decimal | null
    monedaId: number | null
    fecha: Date | null
    metodoPago: string | null
    concepto: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PagoAdminMaxAggregateOutputType = {
    id: number | null
    adminId: number | null
    presupuestoId: number | null
    monto: Decimal | null
    monedaId: number | null
    fecha: Date | null
    metodoPago: string | null
    concepto: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PagoAdminCountAggregateOutputType = {
    id: number
    adminId: number
    presupuestoId: number
    monto: number
    monedaId: number
    fecha: number
    metodoPago: number
    concepto: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PagoAdminAvgAggregateInputType = {
    id?: true
    adminId?: true
    presupuestoId?: true
    monto?: true
    monedaId?: true
  }

  export type PagoAdminSumAggregateInputType = {
    id?: true
    adminId?: true
    presupuestoId?: true
    monto?: true
    monedaId?: true
  }

  export type PagoAdminMinAggregateInputType = {
    id?: true
    adminId?: true
    presupuestoId?: true
    monto?: true
    monedaId?: true
    fecha?: true
    metodoPago?: true
    concepto?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PagoAdminMaxAggregateInputType = {
    id?: true
    adminId?: true
    presupuestoId?: true
    monto?: true
    monedaId?: true
    fecha?: true
    metodoPago?: true
    concepto?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PagoAdminCountAggregateInputType = {
    id?: true
    adminId?: true
    presupuestoId?: true
    monto?: true
    monedaId?: true
    fecha?: true
    metodoPago?: true
    concepto?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PagoAdminAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PagoAdmin to aggregate.
     */
    where?: PagoAdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PagoAdmins to fetch.
     */
    orderBy?: PagoAdminOrderByWithRelationInput | PagoAdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PagoAdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PagoAdmins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PagoAdmins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PagoAdmins
    **/
    _count?: true | PagoAdminCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PagoAdminAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PagoAdminSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PagoAdminMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PagoAdminMaxAggregateInputType
  }

  export type GetPagoAdminAggregateType<T extends PagoAdminAggregateArgs> = {
        [P in keyof T & keyof AggregatePagoAdmin]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePagoAdmin[P]>
      : GetScalarType<T[P], AggregatePagoAdmin[P]>
  }




  export type PagoAdminGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagoAdminWhereInput
    orderBy?: PagoAdminOrderByWithAggregationInput | PagoAdminOrderByWithAggregationInput[]
    by: PagoAdminScalarFieldEnum[] | PagoAdminScalarFieldEnum
    having?: PagoAdminScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PagoAdminCountAggregateInputType | true
    _avg?: PagoAdminAvgAggregateInputType
    _sum?: PagoAdminSumAggregateInputType
    _min?: PagoAdminMinAggregateInputType
    _max?: PagoAdminMaxAggregateInputType
  }

  export type PagoAdminGroupByOutputType = {
    id: number
    adminId: number
    presupuestoId: number
    monto: Decimal
    monedaId: number
    fecha: Date
    metodoPago: string
    concepto: string | null
    createdAt: Date
    updatedAt: Date
    _count: PagoAdminCountAggregateOutputType | null
    _avg: PagoAdminAvgAggregateOutputType | null
    _sum: PagoAdminSumAggregateOutputType | null
    _min: PagoAdminMinAggregateOutputType | null
    _max: PagoAdminMaxAggregateOutputType | null
  }

  type GetPagoAdminGroupByPayload<T extends PagoAdminGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PagoAdminGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PagoAdminGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PagoAdminGroupByOutputType[P]>
            : GetScalarType<T[P], PagoAdminGroupByOutputType[P]>
        }
      >
    >


  export type PagoAdminSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    adminId?: boolean
    presupuestoId?: boolean
    monto?: boolean
    monedaId?: boolean
    fecha?: boolean
    metodoPago?: boolean
    concepto?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    admin?: boolean | PersonaDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pagoAdmin"]>

  export type PagoAdminSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    adminId?: boolean
    presupuestoId?: boolean
    monto?: boolean
    monedaId?: boolean
    fecha?: boolean
    metodoPago?: boolean
    concepto?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    admin?: boolean | PersonaDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pagoAdmin"]>

  export type PagoAdminSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    adminId?: boolean
    presupuestoId?: boolean
    monto?: boolean
    monedaId?: boolean
    fecha?: boolean
    metodoPago?: boolean
    concepto?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    admin?: boolean | PersonaDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pagoAdmin"]>

  export type PagoAdminSelectScalar = {
    id?: boolean
    adminId?: boolean
    presupuestoId?: boolean
    monto?: boolean
    monedaId?: boolean
    fecha?: boolean
    metodoPago?: boolean
    concepto?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PagoAdminOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "adminId" | "presupuestoId" | "monto" | "monedaId" | "fecha" | "metodoPago" | "concepto" | "createdAt" | "updatedAt", ExtArgs["result"]["pagoAdmin"]>
  export type PagoAdminInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin?: boolean | PersonaDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }
  export type PagoAdminIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin?: boolean | PersonaDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }
  export type PagoAdminIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin?: boolean | PersonaDefaultArgs<ExtArgs>
    presupuesto?: boolean | PresupuestoDefaultArgs<ExtArgs>
    moneda?: boolean | MonedaDefaultArgs<ExtArgs>
  }

  export type $PagoAdminPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PagoAdmin"
    objects: {
      admin: Prisma.$PersonaPayload<ExtArgs>
      presupuesto: Prisma.$PresupuestoPayload<ExtArgs>
      moneda: Prisma.$MonedaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      adminId: number
      presupuestoId: number
      monto: Prisma.Decimal
      monedaId: number
      fecha: Date
      metodoPago: string
      concepto: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["pagoAdmin"]>
    composites: {}
  }

  type PagoAdminGetPayload<S extends boolean | null | undefined | PagoAdminDefaultArgs> = $Result.GetResult<Prisma.$PagoAdminPayload, S>

  type PagoAdminCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PagoAdminFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PagoAdminCountAggregateInputType | true
    }

  export interface PagoAdminDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PagoAdmin'], meta: { name: 'PagoAdmin' } }
    /**
     * Find zero or one PagoAdmin that matches the filter.
     * @param {PagoAdminFindUniqueArgs} args - Arguments to find a PagoAdmin
     * @example
     * // Get one PagoAdmin
     * const pagoAdmin = await prisma.pagoAdmin.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PagoAdminFindUniqueArgs>(args: SelectSubset<T, PagoAdminFindUniqueArgs<ExtArgs>>): Prisma__PagoAdminClient<$Result.GetResult<Prisma.$PagoAdminPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PagoAdmin that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PagoAdminFindUniqueOrThrowArgs} args - Arguments to find a PagoAdmin
     * @example
     * // Get one PagoAdmin
     * const pagoAdmin = await prisma.pagoAdmin.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PagoAdminFindUniqueOrThrowArgs>(args: SelectSubset<T, PagoAdminFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PagoAdminClient<$Result.GetResult<Prisma.$PagoAdminPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PagoAdmin that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoAdminFindFirstArgs} args - Arguments to find a PagoAdmin
     * @example
     * // Get one PagoAdmin
     * const pagoAdmin = await prisma.pagoAdmin.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PagoAdminFindFirstArgs>(args?: SelectSubset<T, PagoAdminFindFirstArgs<ExtArgs>>): Prisma__PagoAdminClient<$Result.GetResult<Prisma.$PagoAdminPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PagoAdmin that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoAdminFindFirstOrThrowArgs} args - Arguments to find a PagoAdmin
     * @example
     * // Get one PagoAdmin
     * const pagoAdmin = await prisma.pagoAdmin.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PagoAdminFindFirstOrThrowArgs>(args?: SelectSubset<T, PagoAdminFindFirstOrThrowArgs<ExtArgs>>): Prisma__PagoAdminClient<$Result.GetResult<Prisma.$PagoAdminPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PagoAdmins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoAdminFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PagoAdmins
     * const pagoAdmins = await prisma.pagoAdmin.findMany()
     * 
     * // Get first 10 PagoAdmins
     * const pagoAdmins = await prisma.pagoAdmin.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pagoAdminWithIdOnly = await prisma.pagoAdmin.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PagoAdminFindManyArgs>(args?: SelectSubset<T, PagoAdminFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoAdminPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PagoAdmin.
     * @param {PagoAdminCreateArgs} args - Arguments to create a PagoAdmin.
     * @example
     * // Create one PagoAdmin
     * const PagoAdmin = await prisma.pagoAdmin.create({
     *   data: {
     *     // ... data to create a PagoAdmin
     *   }
     * })
     * 
     */
    create<T extends PagoAdminCreateArgs>(args: SelectSubset<T, PagoAdminCreateArgs<ExtArgs>>): Prisma__PagoAdminClient<$Result.GetResult<Prisma.$PagoAdminPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PagoAdmins.
     * @param {PagoAdminCreateManyArgs} args - Arguments to create many PagoAdmins.
     * @example
     * // Create many PagoAdmins
     * const pagoAdmin = await prisma.pagoAdmin.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PagoAdminCreateManyArgs>(args?: SelectSubset<T, PagoAdminCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PagoAdmins and returns the data saved in the database.
     * @param {PagoAdminCreateManyAndReturnArgs} args - Arguments to create many PagoAdmins.
     * @example
     * // Create many PagoAdmins
     * const pagoAdmin = await prisma.pagoAdmin.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PagoAdmins and only return the `id`
     * const pagoAdminWithIdOnly = await prisma.pagoAdmin.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PagoAdminCreateManyAndReturnArgs>(args?: SelectSubset<T, PagoAdminCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoAdminPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PagoAdmin.
     * @param {PagoAdminDeleteArgs} args - Arguments to delete one PagoAdmin.
     * @example
     * // Delete one PagoAdmin
     * const PagoAdmin = await prisma.pagoAdmin.delete({
     *   where: {
     *     // ... filter to delete one PagoAdmin
     *   }
     * })
     * 
     */
    delete<T extends PagoAdminDeleteArgs>(args: SelectSubset<T, PagoAdminDeleteArgs<ExtArgs>>): Prisma__PagoAdminClient<$Result.GetResult<Prisma.$PagoAdminPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PagoAdmin.
     * @param {PagoAdminUpdateArgs} args - Arguments to update one PagoAdmin.
     * @example
     * // Update one PagoAdmin
     * const pagoAdmin = await prisma.pagoAdmin.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PagoAdminUpdateArgs>(args: SelectSubset<T, PagoAdminUpdateArgs<ExtArgs>>): Prisma__PagoAdminClient<$Result.GetResult<Prisma.$PagoAdminPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PagoAdmins.
     * @param {PagoAdminDeleteManyArgs} args - Arguments to filter PagoAdmins to delete.
     * @example
     * // Delete a few PagoAdmins
     * const { count } = await prisma.pagoAdmin.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PagoAdminDeleteManyArgs>(args?: SelectSubset<T, PagoAdminDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PagoAdmins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoAdminUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PagoAdmins
     * const pagoAdmin = await prisma.pagoAdmin.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PagoAdminUpdateManyArgs>(args: SelectSubset<T, PagoAdminUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PagoAdmins and returns the data updated in the database.
     * @param {PagoAdminUpdateManyAndReturnArgs} args - Arguments to update many PagoAdmins.
     * @example
     * // Update many PagoAdmins
     * const pagoAdmin = await prisma.pagoAdmin.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PagoAdmins and only return the `id`
     * const pagoAdminWithIdOnly = await prisma.pagoAdmin.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PagoAdminUpdateManyAndReturnArgs>(args: SelectSubset<T, PagoAdminUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoAdminPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PagoAdmin.
     * @param {PagoAdminUpsertArgs} args - Arguments to update or create a PagoAdmin.
     * @example
     * // Update or create a PagoAdmin
     * const pagoAdmin = await prisma.pagoAdmin.upsert({
     *   create: {
     *     // ... data to create a PagoAdmin
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PagoAdmin we want to update
     *   }
     * })
     */
    upsert<T extends PagoAdminUpsertArgs>(args: SelectSubset<T, PagoAdminUpsertArgs<ExtArgs>>): Prisma__PagoAdminClient<$Result.GetResult<Prisma.$PagoAdminPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PagoAdmins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoAdminCountArgs} args - Arguments to filter PagoAdmins to count.
     * @example
     * // Count the number of PagoAdmins
     * const count = await prisma.pagoAdmin.count({
     *   where: {
     *     // ... the filter for the PagoAdmins we want to count
     *   }
     * })
    **/
    count<T extends PagoAdminCountArgs>(
      args?: Subset<T, PagoAdminCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PagoAdminCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PagoAdmin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoAdminAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PagoAdminAggregateArgs>(args: Subset<T, PagoAdminAggregateArgs>): Prisma.PrismaPromise<GetPagoAdminAggregateType<T>>

    /**
     * Group by PagoAdmin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoAdminGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PagoAdminGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PagoAdminGroupByArgs['orderBy'] }
        : { orderBy?: PagoAdminGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PagoAdminGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPagoAdminGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PagoAdmin model
   */
  readonly fields: PagoAdminFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PagoAdmin.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PagoAdminClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admin<T extends PersonaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PersonaDefaultArgs<ExtArgs>>): Prisma__PersonaClient<$Result.GetResult<Prisma.$PersonaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    presupuesto<T extends PresupuestoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PresupuestoDefaultArgs<ExtArgs>>): Prisma__PresupuestoClient<$Result.GetResult<Prisma.$PresupuestoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    moneda<T extends MonedaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MonedaDefaultArgs<ExtArgs>>): Prisma__MonedaClient<$Result.GetResult<Prisma.$MonedaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PagoAdmin model
   */
  interface PagoAdminFieldRefs {
    readonly id: FieldRef<"PagoAdmin", 'Int'>
    readonly adminId: FieldRef<"PagoAdmin", 'Int'>
    readonly presupuestoId: FieldRef<"PagoAdmin", 'Int'>
    readonly monto: FieldRef<"PagoAdmin", 'Decimal'>
    readonly monedaId: FieldRef<"PagoAdmin", 'Int'>
    readonly fecha: FieldRef<"PagoAdmin", 'DateTime'>
    readonly metodoPago: FieldRef<"PagoAdmin", 'String'>
    readonly concepto: FieldRef<"PagoAdmin", 'String'>
    readonly createdAt: FieldRef<"PagoAdmin", 'DateTime'>
    readonly updatedAt: FieldRef<"PagoAdmin", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PagoAdmin findUnique
   */
  export type PagoAdminFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PagoAdmin
     */
    select?: PagoAdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PagoAdmin
     */
    omit?: PagoAdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoAdminInclude<ExtArgs> | null
    /**
     * Filter, which PagoAdmin to fetch.
     */
    where: PagoAdminWhereUniqueInput
  }

  /**
   * PagoAdmin findUniqueOrThrow
   */
  export type PagoAdminFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PagoAdmin
     */
    select?: PagoAdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PagoAdmin
     */
    omit?: PagoAdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoAdminInclude<ExtArgs> | null
    /**
     * Filter, which PagoAdmin to fetch.
     */
    where: PagoAdminWhereUniqueInput
  }

  /**
   * PagoAdmin findFirst
   */
  export type PagoAdminFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PagoAdmin
     */
    select?: PagoAdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PagoAdmin
     */
    omit?: PagoAdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoAdminInclude<ExtArgs> | null
    /**
     * Filter, which PagoAdmin to fetch.
     */
    where?: PagoAdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PagoAdmins to fetch.
     */
    orderBy?: PagoAdminOrderByWithRelationInput | PagoAdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PagoAdmins.
     */
    cursor?: PagoAdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PagoAdmins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PagoAdmins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PagoAdmins.
     */
    distinct?: PagoAdminScalarFieldEnum | PagoAdminScalarFieldEnum[]
  }

  /**
   * PagoAdmin findFirstOrThrow
   */
  export type PagoAdminFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PagoAdmin
     */
    select?: PagoAdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PagoAdmin
     */
    omit?: PagoAdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoAdminInclude<ExtArgs> | null
    /**
     * Filter, which PagoAdmin to fetch.
     */
    where?: PagoAdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PagoAdmins to fetch.
     */
    orderBy?: PagoAdminOrderByWithRelationInput | PagoAdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PagoAdmins.
     */
    cursor?: PagoAdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PagoAdmins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PagoAdmins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PagoAdmins.
     */
    distinct?: PagoAdminScalarFieldEnum | PagoAdminScalarFieldEnum[]
  }

  /**
   * PagoAdmin findMany
   */
  export type PagoAdminFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PagoAdmin
     */
    select?: PagoAdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PagoAdmin
     */
    omit?: PagoAdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoAdminInclude<ExtArgs> | null
    /**
     * Filter, which PagoAdmins to fetch.
     */
    where?: PagoAdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PagoAdmins to fetch.
     */
    orderBy?: PagoAdminOrderByWithRelationInput | PagoAdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PagoAdmins.
     */
    cursor?: PagoAdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PagoAdmins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PagoAdmins.
     */
    skip?: number
    distinct?: PagoAdminScalarFieldEnum | PagoAdminScalarFieldEnum[]
  }

  /**
   * PagoAdmin create
   */
  export type PagoAdminCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PagoAdmin
     */
    select?: PagoAdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PagoAdmin
     */
    omit?: PagoAdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoAdminInclude<ExtArgs> | null
    /**
     * The data needed to create a PagoAdmin.
     */
    data: XOR<PagoAdminCreateInput, PagoAdminUncheckedCreateInput>
  }

  /**
   * PagoAdmin createMany
   */
  export type PagoAdminCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PagoAdmins.
     */
    data: PagoAdminCreateManyInput | PagoAdminCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PagoAdmin createManyAndReturn
   */
  export type PagoAdminCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PagoAdmin
     */
    select?: PagoAdminSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PagoAdmin
     */
    omit?: PagoAdminOmit<ExtArgs> | null
    /**
     * The data used to create many PagoAdmins.
     */
    data: PagoAdminCreateManyInput | PagoAdminCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoAdminIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PagoAdmin update
   */
  export type PagoAdminUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PagoAdmin
     */
    select?: PagoAdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PagoAdmin
     */
    omit?: PagoAdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoAdminInclude<ExtArgs> | null
    /**
     * The data needed to update a PagoAdmin.
     */
    data: XOR<PagoAdminUpdateInput, PagoAdminUncheckedUpdateInput>
    /**
     * Choose, which PagoAdmin to update.
     */
    where: PagoAdminWhereUniqueInput
  }

  /**
   * PagoAdmin updateMany
   */
  export type PagoAdminUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PagoAdmins.
     */
    data: XOR<PagoAdminUpdateManyMutationInput, PagoAdminUncheckedUpdateManyInput>
    /**
     * Filter which PagoAdmins to update
     */
    where?: PagoAdminWhereInput
    /**
     * Limit how many PagoAdmins to update.
     */
    limit?: number
  }

  /**
   * PagoAdmin updateManyAndReturn
   */
  export type PagoAdminUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PagoAdmin
     */
    select?: PagoAdminSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PagoAdmin
     */
    omit?: PagoAdminOmit<ExtArgs> | null
    /**
     * The data used to update PagoAdmins.
     */
    data: XOR<PagoAdminUpdateManyMutationInput, PagoAdminUncheckedUpdateManyInput>
    /**
     * Filter which PagoAdmins to update
     */
    where?: PagoAdminWhereInput
    /**
     * Limit how many PagoAdmins to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoAdminIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PagoAdmin upsert
   */
  export type PagoAdminUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PagoAdmin
     */
    select?: PagoAdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PagoAdmin
     */
    omit?: PagoAdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoAdminInclude<ExtArgs> | null
    /**
     * The filter to search for the PagoAdmin to update in case it exists.
     */
    where: PagoAdminWhereUniqueInput
    /**
     * In case the PagoAdmin found by the `where` argument doesn't exist, create a new PagoAdmin with this data.
     */
    create: XOR<PagoAdminCreateInput, PagoAdminUncheckedCreateInput>
    /**
     * In case the PagoAdmin was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PagoAdminUpdateInput, PagoAdminUncheckedUpdateInput>
  }

  /**
   * PagoAdmin delete
   */
  export type PagoAdminDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PagoAdmin
     */
    select?: PagoAdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PagoAdmin
     */
    omit?: PagoAdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoAdminInclude<ExtArgs> | null
    /**
     * Filter which PagoAdmin to delete.
     */
    where: PagoAdminWhereUniqueInput
  }

  /**
   * PagoAdmin deleteMany
   */
  export type PagoAdminDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PagoAdmins to delete
     */
    where?: PagoAdminWhereInput
    /**
     * Limit how many PagoAdmins to delete.
     */
    limit?: number
  }

  /**
   * PagoAdmin without action
   */
  export type PagoAdminDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PagoAdmin
     */
    select?: PagoAdminSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PagoAdmin
     */
    omit?: PagoAdminOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoAdminInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const MonedaScalarFieldEnum: {
    id: 'id',
    codigo: 'codigo',
    nombre: 'nombre',
    simbolo: 'simbolo',
    activo: 'activo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type MonedaScalarFieldEnum = (typeof MonedaScalarFieldEnum)[keyof typeof MonedaScalarFieldEnum]


  export const CobroClienteScalarFieldEnum: {
    id: 'id',
    presupuestoId: 'presupuestoId',
    monto: 'monto',
    monedaId: 'monedaId',
    fecha: 'fecha',
    metodoPago: 'metodoPago',
    concepto: 'concepto',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CobroClienteScalarFieldEnum = (typeof CobroClienteScalarFieldEnum)[keyof typeof CobroClienteScalarFieldEnum]


  export const TipoCambioScalarFieldEnum: {
    id: 'id',
    monedaDesdeId: 'monedaDesdeId',
    monedaHaciaId: 'monedaHaciaId',
    valor: 'valor',
    fecha: 'fecha',
    tipo: 'tipo',
    fuente: 'fuente',
    createdAt: 'createdAt'
  };

  export type TipoCambioScalarFieldEnum = (typeof TipoCambioScalarFieldEnum)[keyof typeof TipoCambioScalarFieldEnum]


  export const PersonaScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    tipo: 'tipo',
    telefono: 'telefono',
    cvu: 'cvu',
    roles: 'roles',
    password: 'password',
    email: 'email',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    activo: 'activo',
    esUsuario: 'esUsuario'
  };

  export type PersonaScalarFieldEnum = (typeof PersonaScalarFieldEnum)[keyof typeof PersonaScalarFieldEnum]


  export const EmpresaScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    razonSocial: 'razonSocial',
    cuit: 'cuit',
    telefono: 'telefono',
    email: 'email',
    direccion: 'direccion',
    clienteId: 'clienteId',
    activo: 'activo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type EmpresaScalarFieldEnum = (typeof EmpresaScalarFieldEnum)[keyof typeof EmpresaScalarFieldEnum]


  export const ProductoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    costoProveedor: 'costoProveedor',
    margenAgencia: 'margenAgencia',
    precio: 'precio',
    proveedorId: 'proveedorId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    monedaId: 'monedaId'
  };

  export type ProductoScalarFieldEnum = (typeof ProductoScalarFieldEnum)[keyof typeof ProductoScalarFieldEnum]


  export const ServicioScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    costoProveedor: 'costoProveedor',
    margenAgencia: 'margenAgencia',
    precio: 'precio',
    proveedorId: 'proveedorId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    monedaId: 'monedaId'
  };

  export type ServicioScalarFieldEnum = (typeof ServicioScalarFieldEnum)[keyof typeof ServicioScalarFieldEnum]


  export const PresupuestoScalarFieldEnum: {
    id: 'id',
    clienteId: 'clienteId',
    empresaId: 'empresaId',
    subtotal: 'subtotal',
    impuestos: 'impuestos',
    total: 'total',
    estado: 'estado',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    monedaId: 'monedaId',
    tipoCambioFecha: 'tipoCambioFecha',
    periodoInicio: 'periodoInicio',
    periodoFin: 'periodoFin',
    esRecurrente: 'esRecurrente',
    frecuencia: 'frecuencia',
    renovacionAutomatica: 'renovacionAutomatica',
    precioPeriodo: 'precioPeriodo'
  };

  export type PresupuestoScalarFieldEnum = (typeof PresupuestoScalarFieldEnum)[keyof typeof PresupuestoScalarFieldEnum]


  export const ItemScalarFieldEnum: {
    id: 'id',
    presupuestoId: 'presupuestoId',
    productoId: 'productoId',
    servicioId: 'servicioId',
    cantidad: 'cantidad',
    precioUnitario: 'precioUnitario'
  };

  export type ItemScalarFieldEnum = (typeof ItemScalarFieldEnum)[keyof typeof ItemScalarFieldEnum]


  export const FacturaScalarFieldEnum: {
    id: 'id',
    numero: 'numero',
    presupuestoId: 'presupuestoId',
    empresaId: 'empresaId',
    fecha: 'fecha',
    subtotal: 'subtotal',
    impuestos: 'impuestos',
    total: 'total',
    estado: 'estado',
    impuestoAplicadoId: 'impuestoAplicadoId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    monedaId: 'monedaId',
    tipoCambioFecha: 'tipoCambioFecha'
  };

  export type FacturaScalarFieldEnum = (typeof FacturaScalarFieldEnum)[keyof typeof FacturaScalarFieldEnum]


  export const ReciboScalarFieldEnum: {
    id: 'id',
    personaId: 'personaId',
    presupuestoId: 'presupuestoId',
    concepto: 'concepto',
    monto: 'monto',
    fecha: 'fecha',
    metodoPago: 'metodoPago',
    tipo: 'tipo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    monedaId: 'monedaId'
  };

  export type ReciboScalarFieldEnum = (typeof ReciboScalarFieldEnum)[keyof typeof ReciboScalarFieldEnum]


  export const ImpuestoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    porcentaje: 'porcentaje',
    activo: 'activo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    descripcion: 'descripcion'
  };

  export type ImpuestoScalarFieldEnum = (typeof ImpuestoScalarFieldEnum)[keyof typeof ImpuestoScalarFieldEnum]


  export const PresupuestoImpuestoScalarFieldEnum: {
    id: 'id',
    presupuestoId: 'presupuestoId',
    impuestoId: 'impuestoId',
    monto: 'monto',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PresupuestoImpuestoScalarFieldEnum = (typeof PresupuestoImpuestoScalarFieldEnum)[keyof typeof PresupuestoImpuestoScalarFieldEnum]


  export const GastoOperativoScalarFieldEnum: {
    id: 'id',
    concepto: 'concepto',
    descripcion: 'descripcion',
    monto: 'monto',
    monedaId: 'monedaId',
    fecha: 'fecha',
    categoria: 'categoria',
    esRecurrente: 'esRecurrente',
    frecuencia: 'frecuencia',
    proveedorId: 'proveedorId',
    comprobante: 'comprobante',
    observaciones: 'observaciones',
    activo: 'activo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type GastoOperativoScalarFieldEnum = (typeof GastoOperativoScalarFieldEnum)[keyof typeof GastoOperativoScalarFieldEnum]


  export const AsignacionGastoProyectoScalarFieldEnum: {
    id: 'id',
    gastoId: 'gastoId',
    presupuestoId: 'presupuestoId',
    porcentaje: 'porcentaje',
    montoAsignado: 'montoAsignado',
    justificacion: 'justificacion',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AsignacionGastoProyectoScalarFieldEnum = (typeof AsignacionGastoProyectoScalarFieldEnum)[keyof typeof AsignacionGastoProyectoScalarFieldEnum]


  export const HistorialPrecioScalarFieldEnum: {
    id: 'id',
    productoId: 'productoId',
    servicioId: 'servicioId',
    monedaId: 'monedaId',
    precio: 'precio',
    fechaDesde: 'fechaDesde',
    fechaHasta: 'fechaHasta',
    motivoCambio: 'motivoCambio',
    usuarioId: 'usuarioId',
    activo: 'activo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type HistorialPrecioScalarFieldEnum = (typeof HistorialPrecioScalarFieldEnum)[keyof typeof HistorialPrecioScalarFieldEnum]


  export const PagoAdminScalarFieldEnum: {
    id: 'id',
    adminId: 'adminId',
    presupuestoId: 'presupuestoId',
    monto: 'monto',
    monedaId: 'monedaId',
    fecha: 'fecha',
    metodoPago: 'metodoPago',
    concepto: 'concepto',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PagoAdminScalarFieldEnum = (typeof PagoAdminScalarFieldEnum)[keyof typeof PagoAdminScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'CodigoMoneda'
   */
  export type EnumCodigoMonedaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CodigoMoneda'>
    


  /**
   * Reference to a field of type 'CodigoMoneda[]'
   */
  export type ListEnumCodigoMonedaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CodigoMoneda[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'TipoCotizacion'
   */
  export type EnumTipoCotizacionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoCotizacion'>
    


  /**
   * Reference to a field of type 'TipoCotizacion[]'
   */
  export type ListEnumTipoCotizacionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoCotizacion[]'>
    


  /**
   * Reference to a field of type 'TipoPersona'
   */
  export type EnumTipoPersonaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoPersona'>
    


  /**
   * Reference to a field of type 'TipoPersona[]'
   */
  export type ListEnumTipoPersonaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoPersona[]'>
    


  /**
   * Reference to a field of type 'RolUsuario[]'
   */
  export type ListEnumRolUsuarioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RolUsuario[]'>
    


  /**
   * Reference to a field of type 'RolUsuario'
   */
  export type EnumRolUsuarioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RolUsuario'>
    


  /**
   * Reference to a field of type 'EstadoPresupuesto'
   */
  export type EnumEstadoPresupuestoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoPresupuesto'>
    


  /**
   * Reference to a field of type 'EstadoPresupuesto[]'
   */
  export type ListEnumEstadoPresupuestoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoPresupuesto[]'>
    


  /**
   * Reference to a field of type 'FrecuenciaContrato'
   */
  export type EnumFrecuenciaContratoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FrecuenciaContrato'>
    


  /**
   * Reference to a field of type 'FrecuenciaContrato[]'
   */
  export type ListEnumFrecuenciaContratoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FrecuenciaContrato[]'>
    


  /**
   * Reference to a field of type 'EstadoFactura'
   */
  export type EnumEstadoFacturaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoFactura'>
    


  /**
   * Reference to a field of type 'EstadoFactura[]'
   */
  export type ListEnumEstadoFacturaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoFactura[]'>
    


  /**
   * Reference to a field of type 'ReciboTipo'
   */
  export type EnumReciboTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReciboTipo'>
    


  /**
   * Reference to a field of type 'ReciboTipo[]'
   */
  export type ListEnumReciboTipoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReciboTipo[]'>
    


  /**
   * Reference to a field of type 'CategoriaGasto'
   */
  export type EnumCategoriaGastoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CategoriaGasto'>
    


  /**
   * Reference to a field of type 'CategoriaGasto[]'
   */
  export type ListEnumCategoriaGastoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CategoriaGasto[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type MonedaWhereInput = {
    AND?: MonedaWhereInput | MonedaWhereInput[]
    OR?: MonedaWhereInput[]
    NOT?: MonedaWhereInput | MonedaWhereInput[]
    id?: IntFilter<"Moneda"> | number
    codigo?: EnumCodigoMonedaFilter<"Moneda"> | $Enums.CodigoMoneda
    nombre?: StringFilter<"Moneda"> | string
    simbolo?: StringFilter<"Moneda"> | string
    activo?: BoolFilter<"Moneda"> | boolean
    createdAt?: DateTimeFilter<"Moneda"> | Date | string
    updatedAt?: DateTimeFilter<"Moneda"> | Date | string
    facturas?: FacturaListRelationFilter
    gastosOperativos?: GastoOperativoListRelationFilter
    historialPrecios?: HistorialPrecioListRelationFilter
    presupuestos?: PresupuestoListRelationFilter
    productos?: ProductoListRelationFilter
    servicios?: ServicioListRelationFilter
    recibos?: ReciboListRelationFilter
    pagosAdmin?: PagoAdminListRelationFilter
    cobrosCliente?: CobroClienteListRelationFilter
    tiposCambio?: TipoCambioListRelationFilter
    tiposCambioDestino?: TipoCambioListRelationFilter
  }

  export type MonedaOrderByWithRelationInput = {
    id?: SortOrder
    codigo?: SortOrder
    nombre?: SortOrder
    simbolo?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    facturas?: FacturaOrderByRelationAggregateInput
    gastosOperativos?: GastoOperativoOrderByRelationAggregateInput
    historialPrecios?: HistorialPrecioOrderByRelationAggregateInput
    presupuestos?: PresupuestoOrderByRelationAggregateInput
    productos?: ProductoOrderByRelationAggregateInput
    servicios?: ServicioOrderByRelationAggregateInput
    recibos?: ReciboOrderByRelationAggregateInput
    pagosAdmin?: PagoAdminOrderByRelationAggregateInput
    cobrosCliente?: CobroClienteOrderByRelationAggregateInput
    tiposCambio?: TipoCambioOrderByRelationAggregateInput
    tiposCambioDestino?: TipoCambioOrderByRelationAggregateInput
  }

  export type MonedaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigo?: $Enums.CodigoMoneda
    AND?: MonedaWhereInput | MonedaWhereInput[]
    OR?: MonedaWhereInput[]
    NOT?: MonedaWhereInput | MonedaWhereInput[]
    nombre?: StringFilter<"Moneda"> | string
    simbolo?: StringFilter<"Moneda"> | string
    activo?: BoolFilter<"Moneda"> | boolean
    createdAt?: DateTimeFilter<"Moneda"> | Date | string
    updatedAt?: DateTimeFilter<"Moneda"> | Date | string
    facturas?: FacturaListRelationFilter
    gastosOperativos?: GastoOperativoListRelationFilter
    historialPrecios?: HistorialPrecioListRelationFilter
    presupuestos?: PresupuestoListRelationFilter
    productos?: ProductoListRelationFilter
    servicios?: ServicioListRelationFilter
    recibos?: ReciboListRelationFilter
    pagosAdmin?: PagoAdminListRelationFilter
    cobrosCliente?: CobroClienteListRelationFilter
    tiposCambio?: TipoCambioListRelationFilter
    tiposCambioDestino?: TipoCambioListRelationFilter
  }, "id" | "codigo">

  export type MonedaOrderByWithAggregationInput = {
    id?: SortOrder
    codigo?: SortOrder
    nombre?: SortOrder
    simbolo?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: MonedaCountOrderByAggregateInput
    _avg?: MonedaAvgOrderByAggregateInput
    _max?: MonedaMaxOrderByAggregateInput
    _min?: MonedaMinOrderByAggregateInput
    _sum?: MonedaSumOrderByAggregateInput
  }

  export type MonedaScalarWhereWithAggregatesInput = {
    AND?: MonedaScalarWhereWithAggregatesInput | MonedaScalarWhereWithAggregatesInput[]
    OR?: MonedaScalarWhereWithAggregatesInput[]
    NOT?: MonedaScalarWhereWithAggregatesInput | MonedaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Moneda"> | number
    codigo?: EnumCodigoMonedaWithAggregatesFilter<"Moneda"> | $Enums.CodigoMoneda
    nombre?: StringWithAggregatesFilter<"Moneda"> | string
    simbolo?: StringWithAggregatesFilter<"Moneda"> | string
    activo?: BoolWithAggregatesFilter<"Moneda"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Moneda"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Moneda"> | Date | string
  }

  export type CobroClienteWhereInput = {
    AND?: CobroClienteWhereInput | CobroClienteWhereInput[]
    OR?: CobroClienteWhereInput[]
    NOT?: CobroClienteWhereInput | CobroClienteWhereInput[]
    id?: IntFilter<"CobroCliente"> | number
    presupuestoId?: IntFilter<"CobroCliente"> | number
    monto?: DecimalFilter<"CobroCliente"> | Decimal | DecimalJsLike | number | string
    monedaId?: IntFilter<"CobroCliente"> | number
    fecha?: DateTimeFilter<"CobroCliente"> | Date | string
    metodoPago?: StringFilter<"CobroCliente"> | string
    concepto?: StringNullableFilter<"CobroCliente"> | string | null
    createdAt?: DateTimeFilter<"CobroCliente"> | Date | string
    updatedAt?: DateTimeFilter<"CobroCliente"> | Date | string
    presupuesto?: XOR<PresupuestoScalarRelationFilter, PresupuestoWhereInput>
    moneda?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
  }

  export type CobroClienteOrderByWithRelationInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
    fecha?: SortOrder
    metodoPago?: SortOrder
    concepto?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    presupuesto?: PresupuestoOrderByWithRelationInput
    moneda?: MonedaOrderByWithRelationInput
  }

  export type CobroClienteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CobroClienteWhereInput | CobroClienteWhereInput[]
    OR?: CobroClienteWhereInput[]
    NOT?: CobroClienteWhereInput | CobroClienteWhereInput[]
    presupuestoId?: IntFilter<"CobroCliente"> | number
    monto?: DecimalFilter<"CobroCliente"> | Decimal | DecimalJsLike | number | string
    monedaId?: IntFilter<"CobroCliente"> | number
    fecha?: DateTimeFilter<"CobroCliente"> | Date | string
    metodoPago?: StringFilter<"CobroCliente"> | string
    concepto?: StringNullableFilter<"CobroCliente"> | string | null
    createdAt?: DateTimeFilter<"CobroCliente"> | Date | string
    updatedAt?: DateTimeFilter<"CobroCliente"> | Date | string
    presupuesto?: XOR<PresupuestoScalarRelationFilter, PresupuestoWhereInput>
    moneda?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
  }, "id">

  export type CobroClienteOrderByWithAggregationInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
    fecha?: SortOrder
    metodoPago?: SortOrder
    concepto?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CobroClienteCountOrderByAggregateInput
    _avg?: CobroClienteAvgOrderByAggregateInput
    _max?: CobroClienteMaxOrderByAggregateInput
    _min?: CobroClienteMinOrderByAggregateInput
    _sum?: CobroClienteSumOrderByAggregateInput
  }

  export type CobroClienteScalarWhereWithAggregatesInput = {
    AND?: CobroClienteScalarWhereWithAggregatesInput | CobroClienteScalarWhereWithAggregatesInput[]
    OR?: CobroClienteScalarWhereWithAggregatesInput[]
    NOT?: CobroClienteScalarWhereWithAggregatesInput | CobroClienteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CobroCliente"> | number
    presupuestoId?: IntWithAggregatesFilter<"CobroCliente"> | number
    monto?: DecimalWithAggregatesFilter<"CobroCliente"> | Decimal | DecimalJsLike | number | string
    monedaId?: IntWithAggregatesFilter<"CobroCliente"> | number
    fecha?: DateTimeWithAggregatesFilter<"CobroCliente"> | Date | string
    metodoPago?: StringWithAggregatesFilter<"CobroCliente"> | string
    concepto?: StringNullableWithAggregatesFilter<"CobroCliente"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"CobroCliente"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CobroCliente"> | Date | string
  }

  export type TipoCambioWhereInput = {
    AND?: TipoCambioWhereInput | TipoCambioWhereInput[]
    OR?: TipoCambioWhereInput[]
    NOT?: TipoCambioWhereInput | TipoCambioWhereInput[]
    id?: IntFilter<"TipoCambio"> | number
    monedaDesdeId?: IntFilter<"TipoCambio"> | number
    monedaHaciaId?: IntFilter<"TipoCambio"> | number
    valor?: DecimalFilter<"TipoCambio"> | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFilter<"TipoCambio"> | Date | string
    tipo?: EnumTipoCotizacionFilter<"TipoCambio"> | $Enums.TipoCotizacion
    fuente?: StringNullableFilter<"TipoCambio"> | string | null
    createdAt?: DateTimeFilter<"TipoCambio"> | Date | string
    monedaDesde?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
    monedaHacia?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
  }

  export type TipoCambioOrderByWithRelationInput = {
    id?: SortOrder
    monedaDesdeId?: SortOrder
    monedaHaciaId?: SortOrder
    valor?: SortOrder
    fecha?: SortOrder
    tipo?: SortOrder
    fuente?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    monedaDesde?: MonedaOrderByWithRelationInput
    monedaHacia?: MonedaOrderByWithRelationInput
  }

  export type TipoCambioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    monedaDesdeId_monedaHaciaId_tipo_fecha?: TipoCambioMonedaDesdeIdMonedaHaciaIdTipoFechaCompoundUniqueInput
    AND?: TipoCambioWhereInput | TipoCambioWhereInput[]
    OR?: TipoCambioWhereInput[]
    NOT?: TipoCambioWhereInput | TipoCambioWhereInput[]
    monedaDesdeId?: IntFilter<"TipoCambio"> | number
    monedaHaciaId?: IntFilter<"TipoCambio"> | number
    valor?: DecimalFilter<"TipoCambio"> | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFilter<"TipoCambio"> | Date | string
    tipo?: EnumTipoCotizacionFilter<"TipoCambio"> | $Enums.TipoCotizacion
    fuente?: StringNullableFilter<"TipoCambio"> | string | null
    createdAt?: DateTimeFilter<"TipoCambio"> | Date | string
    monedaDesde?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
    monedaHacia?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
  }, "id" | "monedaDesdeId_monedaHaciaId_tipo_fecha">

  export type TipoCambioOrderByWithAggregationInput = {
    id?: SortOrder
    monedaDesdeId?: SortOrder
    monedaHaciaId?: SortOrder
    valor?: SortOrder
    fecha?: SortOrder
    tipo?: SortOrder
    fuente?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: TipoCambioCountOrderByAggregateInput
    _avg?: TipoCambioAvgOrderByAggregateInput
    _max?: TipoCambioMaxOrderByAggregateInput
    _min?: TipoCambioMinOrderByAggregateInput
    _sum?: TipoCambioSumOrderByAggregateInput
  }

  export type TipoCambioScalarWhereWithAggregatesInput = {
    AND?: TipoCambioScalarWhereWithAggregatesInput | TipoCambioScalarWhereWithAggregatesInput[]
    OR?: TipoCambioScalarWhereWithAggregatesInput[]
    NOT?: TipoCambioScalarWhereWithAggregatesInput | TipoCambioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TipoCambio"> | number
    monedaDesdeId?: IntWithAggregatesFilter<"TipoCambio"> | number
    monedaHaciaId?: IntWithAggregatesFilter<"TipoCambio"> | number
    valor?: DecimalWithAggregatesFilter<"TipoCambio"> | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeWithAggregatesFilter<"TipoCambio"> | Date | string
    tipo?: EnumTipoCotizacionWithAggregatesFilter<"TipoCambio"> | $Enums.TipoCotizacion
    fuente?: StringNullableWithAggregatesFilter<"TipoCambio"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"TipoCambio"> | Date | string
  }

  export type PersonaWhereInput = {
    AND?: PersonaWhereInput | PersonaWhereInput[]
    OR?: PersonaWhereInput[]
    NOT?: PersonaWhereInput | PersonaWhereInput[]
    id?: IntFilter<"Persona"> | number
    nombre?: StringFilter<"Persona"> | string
    tipo?: EnumTipoPersonaFilter<"Persona"> | $Enums.TipoPersona
    telefono?: StringNullableFilter<"Persona"> | string | null
    cvu?: StringNullableFilter<"Persona"> | string | null
    roles?: EnumRolUsuarioNullableListFilter<"Persona">
    password?: StringNullableFilter<"Persona"> | string | null
    email?: StringFilter<"Persona"> | string
    createdAt?: DateTimeFilter<"Persona"> | Date | string
    updatedAt?: DateTimeFilter<"Persona"> | Date | string
    activo?: BoolFilter<"Persona"> | boolean
    esUsuario?: BoolFilter<"Persona"> | boolean
    gastosComoProveedor?: GastoOperativoListRelationFilter
    historialPreciosUsuario?: HistorialPrecioListRelationFilter
    presupuestos?: PresupuestoListRelationFilter
    productos?: ProductoListRelationFilter
    recibos?: ReciboListRelationFilter
    pagosAdmin?: PagoAdminListRelationFilter
    servicios?: ServicioListRelationFilter
    empresas?: EmpresaListRelationFilter
  }

  export type PersonaOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo?: SortOrder
    telefono?: SortOrderInput | SortOrder
    cvu?: SortOrderInput | SortOrder
    roles?: SortOrder
    password?: SortOrderInput | SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    activo?: SortOrder
    esUsuario?: SortOrder
    gastosComoProveedor?: GastoOperativoOrderByRelationAggregateInput
    historialPreciosUsuario?: HistorialPrecioOrderByRelationAggregateInput
    presupuestos?: PresupuestoOrderByRelationAggregateInput
    productos?: ProductoOrderByRelationAggregateInput
    recibos?: ReciboOrderByRelationAggregateInput
    pagosAdmin?: PagoAdminOrderByRelationAggregateInput
    servicios?: ServicioOrderByRelationAggregateInput
    empresas?: EmpresaOrderByRelationAggregateInput
  }

  export type PersonaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: PersonaWhereInput | PersonaWhereInput[]
    OR?: PersonaWhereInput[]
    NOT?: PersonaWhereInput | PersonaWhereInput[]
    nombre?: StringFilter<"Persona"> | string
    tipo?: EnumTipoPersonaFilter<"Persona"> | $Enums.TipoPersona
    telefono?: StringNullableFilter<"Persona"> | string | null
    cvu?: StringNullableFilter<"Persona"> | string | null
    roles?: EnumRolUsuarioNullableListFilter<"Persona">
    password?: StringNullableFilter<"Persona"> | string | null
    createdAt?: DateTimeFilter<"Persona"> | Date | string
    updatedAt?: DateTimeFilter<"Persona"> | Date | string
    activo?: BoolFilter<"Persona"> | boolean
    esUsuario?: BoolFilter<"Persona"> | boolean
    gastosComoProveedor?: GastoOperativoListRelationFilter
    historialPreciosUsuario?: HistorialPrecioListRelationFilter
    presupuestos?: PresupuestoListRelationFilter
    productos?: ProductoListRelationFilter
    recibos?: ReciboListRelationFilter
    pagosAdmin?: PagoAdminListRelationFilter
    servicios?: ServicioListRelationFilter
    empresas?: EmpresaListRelationFilter
  }, "id" | "email">

  export type PersonaOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo?: SortOrder
    telefono?: SortOrderInput | SortOrder
    cvu?: SortOrderInput | SortOrder
    roles?: SortOrder
    password?: SortOrderInput | SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    activo?: SortOrder
    esUsuario?: SortOrder
    _count?: PersonaCountOrderByAggregateInput
    _avg?: PersonaAvgOrderByAggregateInput
    _max?: PersonaMaxOrderByAggregateInput
    _min?: PersonaMinOrderByAggregateInput
    _sum?: PersonaSumOrderByAggregateInput
  }

  export type PersonaScalarWhereWithAggregatesInput = {
    AND?: PersonaScalarWhereWithAggregatesInput | PersonaScalarWhereWithAggregatesInput[]
    OR?: PersonaScalarWhereWithAggregatesInput[]
    NOT?: PersonaScalarWhereWithAggregatesInput | PersonaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Persona"> | number
    nombre?: StringWithAggregatesFilter<"Persona"> | string
    tipo?: EnumTipoPersonaWithAggregatesFilter<"Persona"> | $Enums.TipoPersona
    telefono?: StringNullableWithAggregatesFilter<"Persona"> | string | null
    cvu?: StringNullableWithAggregatesFilter<"Persona"> | string | null
    roles?: EnumRolUsuarioNullableListFilter<"Persona">
    password?: StringNullableWithAggregatesFilter<"Persona"> | string | null
    email?: StringWithAggregatesFilter<"Persona"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Persona"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Persona"> | Date | string
    activo?: BoolWithAggregatesFilter<"Persona"> | boolean
    esUsuario?: BoolWithAggregatesFilter<"Persona"> | boolean
  }

  export type EmpresaWhereInput = {
    AND?: EmpresaWhereInput | EmpresaWhereInput[]
    OR?: EmpresaWhereInput[]
    NOT?: EmpresaWhereInput | EmpresaWhereInput[]
    id?: IntFilter<"Empresa"> | number
    nombre?: StringFilter<"Empresa"> | string
    razonSocial?: StringNullableFilter<"Empresa"> | string | null
    cuit?: StringNullableFilter<"Empresa"> | string | null
    telefono?: StringNullableFilter<"Empresa"> | string | null
    email?: StringNullableFilter<"Empresa"> | string | null
    direccion?: StringNullableFilter<"Empresa"> | string | null
    clienteId?: IntFilter<"Empresa"> | number
    activo?: BoolFilter<"Empresa"> | boolean
    createdAt?: DateTimeFilter<"Empresa"> | Date | string
    updatedAt?: DateTimeFilter<"Empresa"> | Date | string
    cliente?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
    presupuestos?: PresupuestoListRelationFilter
    facturas?: FacturaListRelationFilter
  }

  export type EmpresaOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    razonSocial?: SortOrderInput | SortOrder
    cuit?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    clienteId?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cliente?: PersonaOrderByWithRelationInput
    presupuestos?: PresupuestoOrderByRelationAggregateInput
    facturas?: FacturaOrderByRelationAggregateInput
  }

  export type EmpresaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    cuit?: string
    AND?: EmpresaWhereInput | EmpresaWhereInput[]
    OR?: EmpresaWhereInput[]
    NOT?: EmpresaWhereInput | EmpresaWhereInput[]
    nombre?: StringFilter<"Empresa"> | string
    razonSocial?: StringNullableFilter<"Empresa"> | string | null
    telefono?: StringNullableFilter<"Empresa"> | string | null
    email?: StringNullableFilter<"Empresa"> | string | null
    direccion?: StringNullableFilter<"Empresa"> | string | null
    clienteId?: IntFilter<"Empresa"> | number
    activo?: BoolFilter<"Empresa"> | boolean
    createdAt?: DateTimeFilter<"Empresa"> | Date | string
    updatedAt?: DateTimeFilter<"Empresa"> | Date | string
    cliente?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
    presupuestos?: PresupuestoListRelationFilter
    facturas?: FacturaListRelationFilter
  }, "id" | "cuit">

  export type EmpresaOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    razonSocial?: SortOrderInput | SortOrder
    cuit?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    clienteId?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: EmpresaCountOrderByAggregateInput
    _avg?: EmpresaAvgOrderByAggregateInput
    _max?: EmpresaMaxOrderByAggregateInput
    _min?: EmpresaMinOrderByAggregateInput
    _sum?: EmpresaSumOrderByAggregateInput
  }

  export type EmpresaScalarWhereWithAggregatesInput = {
    AND?: EmpresaScalarWhereWithAggregatesInput | EmpresaScalarWhereWithAggregatesInput[]
    OR?: EmpresaScalarWhereWithAggregatesInput[]
    NOT?: EmpresaScalarWhereWithAggregatesInput | EmpresaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Empresa"> | number
    nombre?: StringWithAggregatesFilter<"Empresa"> | string
    razonSocial?: StringNullableWithAggregatesFilter<"Empresa"> | string | null
    cuit?: StringNullableWithAggregatesFilter<"Empresa"> | string | null
    telefono?: StringNullableWithAggregatesFilter<"Empresa"> | string | null
    email?: StringNullableWithAggregatesFilter<"Empresa"> | string | null
    direccion?: StringNullableWithAggregatesFilter<"Empresa"> | string | null
    clienteId?: IntWithAggregatesFilter<"Empresa"> | number
    activo?: BoolWithAggregatesFilter<"Empresa"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Empresa"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Empresa"> | Date | string
  }

  export type ProductoWhereInput = {
    AND?: ProductoWhereInput | ProductoWhereInput[]
    OR?: ProductoWhereInput[]
    NOT?: ProductoWhereInput | ProductoWhereInput[]
    id?: IntFilter<"Producto"> | number
    nombre?: StringFilter<"Producto"> | string
    costoProveedor?: DecimalFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    precio?: DecimalFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    proveedorId?: IntFilter<"Producto"> | number
    createdAt?: DateTimeFilter<"Producto"> | Date | string
    updatedAt?: DateTimeFilter<"Producto"> | Date | string
    monedaId?: IntFilter<"Producto"> | number
    historialPrecios?: HistorialPrecioListRelationFilter
    items?: ItemListRelationFilter
    moneda?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
    proveedor?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
  }

  export type ProductoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    costoProveedor?: SortOrder
    margenAgencia?: SortOrder
    precio?: SortOrder
    proveedorId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
    historialPrecios?: HistorialPrecioOrderByRelationAggregateInput
    items?: ItemOrderByRelationAggregateInput
    moneda?: MonedaOrderByWithRelationInput
    proveedor?: PersonaOrderByWithRelationInput
  }

  export type ProductoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProductoWhereInput | ProductoWhereInput[]
    OR?: ProductoWhereInput[]
    NOT?: ProductoWhereInput | ProductoWhereInput[]
    nombre?: StringFilter<"Producto"> | string
    costoProveedor?: DecimalFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    precio?: DecimalFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    proveedorId?: IntFilter<"Producto"> | number
    createdAt?: DateTimeFilter<"Producto"> | Date | string
    updatedAt?: DateTimeFilter<"Producto"> | Date | string
    monedaId?: IntFilter<"Producto"> | number
    historialPrecios?: HistorialPrecioListRelationFilter
    items?: ItemListRelationFilter
    moneda?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
    proveedor?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
  }, "id">

  export type ProductoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    costoProveedor?: SortOrder
    margenAgencia?: SortOrder
    precio?: SortOrder
    proveedorId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
    _count?: ProductoCountOrderByAggregateInput
    _avg?: ProductoAvgOrderByAggregateInput
    _max?: ProductoMaxOrderByAggregateInput
    _min?: ProductoMinOrderByAggregateInput
    _sum?: ProductoSumOrderByAggregateInput
  }

  export type ProductoScalarWhereWithAggregatesInput = {
    AND?: ProductoScalarWhereWithAggregatesInput | ProductoScalarWhereWithAggregatesInput[]
    OR?: ProductoScalarWhereWithAggregatesInput[]
    NOT?: ProductoScalarWhereWithAggregatesInput | ProductoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Producto"> | number
    nombre?: StringWithAggregatesFilter<"Producto"> | string
    costoProveedor?: DecimalWithAggregatesFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalWithAggregatesFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    precio?: DecimalWithAggregatesFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    proveedorId?: IntWithAggregatesFilter<"Producto"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Producto"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Producto"> | Date | string
    monedaId?: IntWithAggregatesFilter<"Producto"> | number
  }

  export type ServicioWhereInput = {
    AND?: ServicioWhereInput | ServicioWhereInput[]
    OR?: ServicioWhereInput[]
    NOT?: ServicioWhereInput | ServicioWhereInput[]
    id?: IntFilter<"Servicio"> | number
    nombre?: StringFilter<"Servicio"> | string
    descripcion?: StringFilter<"Servicio"> | string
    costoProveedor?: DecimalFilter<"Servicio"> | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFilter<"Servicio"> | Decimal | DecimalJsLike | number | string
    precio?: DecimalFilter<"Servicio"> | Decimal | DecimalJsLike | number | string
    proveedorId?: IntFilter<"Servicio"> | number
    createdAt?: DateTimeFilter<"Servicio"> | Date | string
    updatedAt?: DateTimeFilter<"Servicio"> | Date | string
    monedaId?: IntFilter<"Servicio"> | number
    historialPrecios?: HistorialPrecioListRelationFilter
    items?: ItemListRelationFilter
    moneda?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
    proveedor?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
  }

  export type ServicioOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    costoProveedor?: SortOrder
    margenAgencia?: SortOrder
    precio?: SortOrder
    proveedorId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
    historialPrecios?: HistorialPrecioOrderByRelationAggregateInput
    items?: ItemOrderByRelationAggregateInput
    moneda?: MonedaOrderByWithRelationInput
    proveedor?: PersonaOrderByWithRelationInput
  }

  export type ServicioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ServicioWhereInput | ServicioWhereInput[]
    OR?: ServicioWhereInput[]
    NOT?: ServicioWhereInput | ServicioWhereInput[]
    nombre?: StringFilter<"Servicio"> | string
    descripcion?: StringFilter<"Servicio"> | string
    costoProveedor?: DecimalFilter<"Servicio"> | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFilter<"Servicio"> | Decimal | DecimalJsLike | number | string
    precio?: DecimalFilter<"Servicio"> | Decimal | DecimalJsLike | number | string
    proveedorId?: IntFilter<"Servicio"> | number
    createdAt?: DateTimeFilter<"Servicio"> | Date | string
    updatedAt?: DateTimeFilter<"Servicio"> | Date | string
    monedaId?: IntFilter<"Servicio"> | number
    historialPrecios?: HistorialPrecioListRelationFilter
    items?: ItemListRelationFilter
    moneda?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
    proveedor?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
  }, "id">

  export type ServicioOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    costoProveedor?: SortOrder
    margenAgencia?: SortOrder
    precio?: SortOrder
    proveedorId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
    _count?: ServicioCountOrderByAggregateInput
    _avg?: ServicioAvgOrderByAggregateInput
    _max?: ServicioMaxOrderByAggregateInput
    _min?: ServicioMinOrderByAggregateInput
    _sum?: ServicioSumOrderByAggregateInput
  }

  export type ServicioScalarWhereWithAggregatesInput = {
    AND?: ServicioScalarWhereWithAggregatesInput | ServicioScalarWhereWithAggregatesInput[]
    OR?: ServicioScalarWhereWithAggregatesInput[]
    NOT?: ServicioScalarWhereWithAggregatesInput | ServicioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Servicio"> | number
    nombre?: StringWithAggregatesFilter<"Servicio"> | string
    descripcion?: StringWithAggregatesFilter<"Servicio"> | string
    costoProveedor?: DecimalWithAggregatesFilter<"Servicio"> | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalWithAggregatesFilter<"Servicio"> | Decimal | DecimalJsLike | number | string
    precio?: DecimalWithAggregatesFilter<"Servicio"> | Decimal | DecimalJsLike | number | string
    proveedorId?: IntWithAggregatesFilter<"Servicio"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Servicio"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Servicio"> | Date | string
    monedaId?: IntWithAggregatesFilter<"Servicio"> | number
  }

  export type PresupuestoWhereInput = {
    AND?: PresupuestoWhereInput | PresupuestoWhereInput[]
    OR?: PresupuestoWhereInput[]
    NOT?: PresupuestoWhereInput | PresupuestoWhereInput[]
    id?: IntFilter<"Presupuesto"> | number
    clienteId?: IntFilter<"Presupuesto"> | number
    empresaId?: IntNullableFilter<"Presupuesto"> | number | null
    subtotal?: DecimalFilter<"Presupuesto"> | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFilter<"Presupuesto"> | Decimal | DecimalJsLike | number | string
    total?: DecimalFilter<"Presupuesto"> | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFilter<"Presupuesto"> | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFilter<"Presupuesto"> | Date | string
    updatedAt?: DateTimeFilter<"Presupuesto"> | Date | string
    monedaId?: IntFilter<"Presupuesto"> | number
    tipoCambioFecha?: DateTimeNullableFilter<"Presupuesto"> | Date | string | null
    periodoInicio?: DateTimeNullableFilter<"Presupuesto"> | Date | string | null
    periodoFin?: DateTimeNullableFilter<"Presupuesto"> | Date | string | null
    esRecurrente?: BoolFilter<"Presupuesto"> | boolean
    frecuencia?: EnumFrecuenciaContratoNullableFilter<"Presupuesto"> | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFilter<"Presupuesto"> | boolean
    precioPeriodo?: DecimalNullableFilter<"Presupuesto"> | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoListRelationFilter
    facturas?: FacturaListRelationFilter
    items?: ItemListRelationFilter
    cliente?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
    empresa?: XOR<EmpresaNullableScalarRelationFilter, EmpresaWhereInput> | null
    moneda?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
    presupuestoImpuestos?: PresupuestoImpuestoListRelationFilter
    recibos?: ReciboListRelationFilter
    pagosAdmin?: PagoAdminListRelationFilter
    cobrosCliente?: CobroClienteListRelationFilter
  }

  export type PresupuestoOrderByWithRelationInput = {
    id?: SortOrder
    clienteId?: SortOrder
    empresaId?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    total?: SortOrder
    estado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
    tipoCambioFecha?: SortOrderInput | SortOrder
    periodoInicio?: SortOrderInput | SortOrder
    periodoFin?: SortOrderInput | SortOrder
    esRecurrente?: SortOrder
    frecuencia?: SortOrderInput | SortOrder
    renovacionAutomatica?: SortOrder
    precioPeriodo?: SortOrderInput | SortOrder
    asignacionesGasto?: AsignacionGastoProyectoOrderByRelationAggregateInput
    facturas?: FacturaOrderByRelationAggregateInput
    items?: ItemOrderByRelationAggregateInput
    cliente?: PersonaOrderByWithRelationInput
    empresa?: EmpresaOrderByWithRelationInput
    moneda?: MonedaOrderByWithRelationInput
    presupuestoImpuestos?: PresupuestoImpuestoOrderByRelationAggregateInput
    recibos?: ReciboOrderByRelationAggregateInput
    pagosAdmin?: PagoAdminOrderByRelationAggregateInput
    cobrosCliente?: CobroClienteOrderByRelationAggregateInput
  }

  export type PresupuestoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PresupuestoWhereInput | PresupuestoWhereInput[]
    OR?: PresupuestoWhereInput[]
    NOT?: PresupuestoWhereInput | PresupuestoWhereInput[]
    clienteId?: IntFilter<"Presupuesto"> | number
    empresaId?: IntNullableFilter<"Presupuesto"> | number | null
    subtotal?: DecimalFilter<"Presupuesto"> | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFilter<"Presupuesto"> | Decimal | DecimalJsLike | number | string
    total?: DecimalFilter<"Presupuesto"> | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFilter<"Presupuesto"> | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFilter<"Presupuesto"> | Date | string
    updatedAt?: DateTimeFilter<"Presupuesto"> | Date | string
    monedaId?: IntFilter<"Presupuesto"> | number
    tipoCambioFecha?: DateTimeNullableFilter<"Presupuesto"> | Date | string | null
    periodoInicio?: DateTimeNullableFilter<"Presupuesto"> | Date | string | null
    periodoFin?: DateTimeNullableFilter<"Presupuesto"> | Date | string | null
    esRecurrente?: BoolFilter<"Presupuesto"> | boolean
    frecuencia?: EnumFrecuenciaContratoNullableFilter<"Presupuesto"> | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFilter<"Presupuesto"> | boolean
    precioPeriodo?: DecimalNullableFilter<"Presupuesto"> | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoListRelationFilter
    facturas?: FacturaListRelationFilter
    items?: ItemListRelationFilter
    cliente?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
    empresa?: XOR<EmpresaNullableScalarRelationFilter, EmpresaWhereInput> | null
    moneda?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
    presupuestoImpuestos?: PresupuestoImpuestoListRelationFilter
    recibos?: ReciboListRelationFilter
    pagosAdmin?: PagoAdminListRelationFilter
    cobrosCliente?: CobroClienteListRelationFilter
  }, "id">

  export type PresupuestoOrderByWithAggregationInput = {
    id?: SortOrder
    clienteId?: SortOrder
    empresaId?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    total?: SortOrder
    estado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
    tipoCambioFecha?: SortOrderInput | SortOrder
    periodoInicio?: SortOrderInput | SortOrder
    periodoFin?: SortOrderInput | SortOrder
    esRecurrente?: SortOrder
    frecuencia?: SortOrderInput | SortOrder
    renovacionAutomatica?: SortOrder
    precioPeriodo?: SortOrderInput | SortOrder
    _count?: PresupuestoCountOrderByAggregateInput
    _avg?: PresupuestoAvgOrderByAggregateInput
    _max?: PresupuestoMaxOrderByAggregateInput
    _min?: PresupuestoMinOrderByAggregateInput
    _sum?: PresupuestoSumOrderByAggregateInput
  }

  export type PresupuestoScalarWhereWithAggregatesInput = {
    AND?: PresupuestoScalarWhereWithAggregatesInput | PresupuestoScalarWhereWithAggregatesInput[]
    OR?: PresupuestoScalarWhereWithAggregatesInput[]
    NOT?: PresupuestoScalarWhereWithAggregatesInput | PresupuestoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Presupuesto"> | number
    clienteId?: IntWithAggregatesFilter<"Presupuesto"> | number
    empresaId?: IntNullableWithAggregatesFilter<"Presupuesto"> | number | null
    subtotal?: DecimalWithAggregatesFilter<"Presupuesto"> | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalWithAggregatesFilter<"Presupuesto"> | Decimal | DecimalJsLike | number | string
    total?: DecimalWithAggregatesFilter<"Presupuesto"> | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoWithAggregatesFilter<"Presupuesto"> | $Enums.EstadoPresupuesto
    createdAt?: DateTimeWithAggregatesFilter<"Presupuesto"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Presupuesto"> | Date | string
    monedaId?: IntWithAggregatesFilter<"Presupuesto"> | number
    tipoCambioFecha?: DateTimeNullableWithAggregatesFilter<"Presupuesto"> | Date | string | null
    periodoInicio?: DateTimeNullableWithAggregatesFilter<"Presupuesto"> | Date | string | null
    periodoFin?: DateTimeNullableWithAggregatesFilter<"Presupuesto"> | Date | string | null
    esRecurrente?: BoolWithAggregatesFilter<"Presupuesto"> | boolean
    frecuencia?: EnumFrecuenciaContratoNullableWithAggregatesFilter<"Presupuesto"> | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolWithAggregatesFilter<"Presupuesto"> | boolean
    precioPeriodo?: DecimalNullableWithAggregatesFilter<"Presupuesto"> | Decimal | DecimalJsLike | number | string | null
  }

  export type ItemWhereInput = {
    AND?: ItemWhereInput | ItemWhereInput[]
    OR?: ItemWhereInput[]
    NOT?: ItemWhereInput | ItemWhereInput[]
    id?: IntFilter<"Item"> | number
    presupuestoId?: IntFilter<"Item"> | number
    productoId?: IntNullableFilter<"Item"> | number | null
    servicioId?: IntNullableFilter<"Item"> | number | null
    cantidad?: IntFilter<"Item"> | number
    precioUnitario?: DecimalFilter<"Item"> | Decimal | DecimalJsLike | number | string
    presupuesto?: XOR<PresupuestoScalarRelationFilter, PresupuestoWhereInput>
    producto?: XOR<ProductoNullableScalarRelationFilter, ProductoWhereInput> | null
    servicio?: XOR<ServicioNullableScalarRelationFilter, ServicioWhereInput> | null
  }

  export type ItemOrderByWithRelationInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    productoId?: SortOrderInput | SortOrder
    servicioId?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    precioUnitario?: SortOrder
    presupuesto?: PresupuestoOrderByWithRelationInput
    producto?: ProductoOrderByWithRelationInput
    servicio?: ServicioOrderByWithRelationInput
  }

  export type ItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ItemWhereInput | ItemWhereInput[]
    OR?: ItemWhereInput[]
    NOT?: ItemWhereInput | ItemWhereInput[]
    presupuestoId?: IntFilter<"Item"> | number
    productoId?: IntNullableFilter<"Item"> | number | null
    servicioId?: IntNullableFilter<"Item"> | number | null
    cantidad?: IntFilter<"Item"> | number
    precioUnitario?: DecimalFilter<"Item"> | Decimal | DecimalJsLike | number | string
    presupuesto?: XOR<PresupuestoScalarRelationFilter, PresupuestoWhereInput>
    producto?: XOR<ProductoNullableScalarRelationFilter, ProductoWhereInput> | null
    servicio?: XOR<ServicioNullableScalarRelationFilter, ServicioWhereInput> | null
  }, "id">

  export type ItemOrderByWithAggregationInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    productoId?: SortOrderInput | SortOrder
    servicioId?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    precioUnitario?: SortOrder
    _count?: ItemCountOrderByAggregateInput
    _avg?: ItemAvgOrderByAggregateInput
    _max?: ItemMaxOrderByAggregateInput
    _min?: ItemMinOrderByAggregateInput
    _sum?: ItemSumOrderByAggregateInput
  }

  export type ItemScalarWhereWithAggregatesInput = {
    AND?: ItemScalarWhereWithAggregatesInput | ItemScalarWhereWithAggregatesInput[]
    OR?: ItemScalarWhereWithAggregatesInput[]
    NOT?: ItemScalarWhereWithAggregatesInput | ItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Item"> | number
    presupuestoId?: IntWithAggregatesFilter<"Item"> | number
    productoId?: IntNullableWithAggregatesFilter<"Item"> | number | null
    servicioId?: IntNullableWithAggregatesFilter<"Item"> | number | null
    cantidad?: IntWithAggregatesFilter<"Item"> | number
    precioUnitario?: DecimalWithAggregatesFilter<"Item"> | Decimal | DecimalJsLike | number | string
  }

  export type FacturaWhereInput = {
    AND?: FacturaWhereInput | FacturaWhereInput[]
    OR?: FacturaWhereInput[]
    NOT?: FacturaWhereInput | FacturaWhereInput[]
    id?: IntFilter<"Factura"> | number
    numero?: StringFilter<"Factura"> | string
    presupuestoId?: IntFilter<"Factura"> | number
    empresaId?: IntNullableFilter<"Factura"> | number | null
    fecha?: DateTimeFilter<"Factura"> | Date | string
    subtotal?: DecimalFilter<"Factura"> | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFilter<"Factura"> | Decimal | DecimalJsLike | number | string
    total?: DecimalFilter<"Factura"> | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFilter<"Factura"> | $Enums.EstadoFactura
    impuestoAplicadoId?: IntFilter<"Factura"> | number
    createdAt?: DateTimeFilter<"Factura"> | Date | string
    updatedAt?: DateTimeFilter<"Factura"> | Date | string
    monedaId?: IntFilter<"Factura"> | number
    tipoCambioFecha?: DateTimeNullableFilter<"Factura"> | Date | string | null
    empresa?: XOR<EmpresaNullableScalarRelationFilter, EmpresaWhereInput> | null
    impuestoAplicado?: XOR<ImpuestoScalarRelationFilter, ImpuestoWhereInput>
    moneda?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
    presupuesto?: XOR<PresupuestoScalarRelationFilter, PresupuestoWhereInput>
  }

  export type FacturaOrderByWithRelationInput = {
    id?: SortOrder
    numero?: SortOrder
    presupuestoId?: SortOrder
    empresaId?: SortOrderInput | SortOrder
    fecha?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    total?: SortOrder
    estado?: SortOrder
    impuestoAplicadoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
    tipoCambioFecha?: SortOrderInput | SortOrder
    empresa?: EmpresaOrderByWithRelationInput
    impuestoAplicado?: ImpuestoOrderByWithRelationInput
    moneda?: MonedaOrderByWithRelationInput
    presupuesto?: PresupuestoOrderByWithRelationInput
  }

  export type FacturaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    numero?: string
    AND?: FacturaWhereInput | FacturaWhereInput[]
    OR?: FacturaWhereInput[]
    NOT?: FacturaWhereInput | FacturaWhereInput[]
    presupuestoId?: IntFilter<"Factura"> | number
    empresaId?: IntNullableFilter<"Factura"> | number | null
    fecha?: DateTimeFilter<"Factura"> | Date | string
    subtotal?: DecimalFilter<"Factura"> | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFilter<"Factura"> | Decimal | DecimalJsLike | number | string
    total?: DecimalFilter<"Factura"> | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFilter<"Factura"> | $Enums.EstadoFactura
    impuestoAplicadoId?: IntFilter<"Factura"> | number
    createdAt?: DateTimeFilter<"Factura"> | Date | string
    updatedAt?: DateTimeFilter<"Factura"> | Date | string
    monedaId?: IntFilter<"Factura"> | number
    tipoCambioFecha?: DateTimeNullableFilter<"Factura"> | Date | string | null
    empresa?: XOR<EmpresaNullableScalarRelationFilter, EmpresaWhereInput> | null
    impuestoAplicado?: XOR<ImpuestoScalarRelationFilter, ImpuestoWhereInput>
    moneda?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
    presupuesto?: XOR<PresupuestoScalarRelationFilter, PresupuestoWhereInput>
  }, "id" | "numero">

  export type FacturaOrderByWithAggregationInput = {
    id?: SortOrder
    numero?: SortOrder
    presupuestoId?: SortOrder
    empresaId?: SortOrderInput | SortOrder
    fecha?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    total?: SortOrder
    estado?: SortOrder
    impuestoAplicadoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
    tipoCambioFecha?: SortOrderInput | SortOrder
    _count?: FacturaCountOrderByAggregateInput
    _avg?: FacturaAvgOrderByAggregateInput
    _max?: FacturaMaxOrderByAggregateInput
    _min?: FacturaMinOrderByAggregateInput
    _sum?: FacturaSumOrderByAggregateInput
  }

  export type FacturaScalarWhereWithAggregatesInput = {
    AND?: FacturaScalarWhereWithAggregatesInput | FacturaScalarWhereWithAggregatesInput[]
    OR?: FacturaScalarWhereWithAggregatesInput[]
    NOT?: FacturaScalarWhereWithAggregatesInput | FacturaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Factura"> | number
    numero?: StringWithAggregatesFilter<"Factura"> | string
    presupuestoId?: IntWithAggregatesFilter<"Factura"> | number
    empresaId?: IntNullableWithAggregatesFilter<"Factura"> | number | null
    fecha?: DateTimeWithAggregatesFilter<"Factura"> | Date | string
    subtotal?: DecimalWithAggregatesFilter<"Factura"> | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalWithAggregatesFilter<"Factura"> | Decimal | DecimalJsLike | number | string
    total?: DecimalWithAggregatesFilter<"Factura"> | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaWithAggregatesFilter<"Factura"> | $Enums.EstadoFactura
    impuestoAplicadoId?: IntWithAggregatesFilter<"Factura"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Factura"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Factura"> | Date | string
    monedaId?: IntWithAggregatesFilter<"Factura"> | number
    tipoCambioFecha?: DateTimeNullableWithAggregatesFilter<"Factura"> | Date | string | null
  }

  export type ReciboWhereInput = {
    AND?: ReciboWhereInput | ReciboWhereInput[]
    OR?: ReciboWhereInput[]
    NOT?: ReciboWhereInput | ReciboWhereInput[]
    id?: IntFilter<"Recibo"> | number
    personaId?: IntFilter<"Recibo"> | number
    presupuestoId?: IntNullableFilter<"Recibo"> | number | null
    concepto?: StringFilter<"Recibo"> | string
    monto?: DecimalFilter<"Recibo"> | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFilter<"Recibo"> | Date | string
    metodoPago?: StringFilter<"Recibo"> | string
    tipo?: EnumReciboTipoFilter<"Recibo"> | $Enums.ReciboTipo
    createdAt?: DateTimeFilter<"Recibo"> | Date | string
    updatedAt?: DateTimeFilter<"Recibo"> | Date | string
    monedaId?: IntFilter<"Recibo"> | number
    persona?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
    presupuesto?: XOR<PresupuestoNullableScalarRelationFilter, PresupuestoWhereInput> | null
    moneda?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
  }

  export type ReciboOrderByWithRelationInput = {
    id?: SortOrder
    personaId?: SortOrder
    presupuestoId?: SortOrderInput | SortOrder
    concepto?: SortOrder
    monto?: SortOrder
    fecha?: SortOrder
    metodoPago?: SortOrder
    tipo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
    persona?: PersonaOrderByWithRelationInput
    presupuesto?: PresupuestoOrderByWithRelationInput
    moneda?: MonedaOrderByWithRelationInput
  }

  export type ReciboWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReciboWhereInput | ReciboWhereInput[]
    OR?: ReciboWhereInput[]
    NOT?: ReciboWhereInput | ReciboWhereInput[]
    personaId?: IntFilter<"Recibo"> | number
    presupuestoId?: IntNullableFilter<"Recibo"> | number | null
    concepto?: StringFilter<"Recibo"> | string
    monto?: DecimalFilter<"Recibo"> | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFilter<"Recibo"> | Date | string
    metodoPago?: StringFilter<"Recibo"> | string
    tipo?: EnumReciboTipoFilter<"Recibo"> | $Enums.ReciboTipo
    createdAt?: DateTimeFilter<"Recibo"> | Date | string
    updatedAt?: DateTimeFilter<"Recibo"> | Date | string
    monedaId?: IntFilter<"Recibo"> | number
    persona?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
    presupuesto?: XOR<PresupuestoNullableScalarRelationFilter, PresupuestoWhereInput> | null
    moneda?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
  }, "id">

  export type ReciboOrderByWithAggregationInput = {
    id?: SortOrder
    personaId?: SortOrder
    presupuestoId?: SortOrderInput | SortOrder
    concepto?: SortOrder
    monto?: SortOrder
    fecha?: SortOrder
    metodoPago?: SortOrder
    tipo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
    _count?: ReciboCountOrderByAggregateInput
    _avg?: ReciboAvgOrderByAggregateInput
    _max?: ReciboMaxOrderByAggregateInput
    _min?: ReciboMinOrderByAggregateInput
    _sum?: ReciboSumOrderByAggregateInput
  }

  export type ReciboScalarWhereWithAggregatesInput = {
    AND?: ReciboScalarWhereWithAggregatesInput | ReciboScalarWhereWithAggregatesInput[]
    OR?: ReciboScalarWhereWithAggregatesInput[]
    NOT?: ReciboScalarWhereWithAggregatesInput | ReciboScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Recibo"> | number
    personaId?: IntWithAggregatesFilter<"Recibo"> | number
    presupuestoId?: IntNullableWithAggregatesFilter<"Recibo"> | number | null
    concepto?: StringWithAggregatesFilter<"Recibo"> | string
    monto?: DecimalWithAggregatesFilter<"Recibo"> | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeWithAggregatesFilter<"Recibo"> | Date | string
    metodoPago?: StringWithAggregatesFilter<"Recibo"> | string
    tipo?: EnumReciboTipoWithAggregatesFilter<"Recibo"> | $Enums.ReciboTipo
    createdAt?: DateTimeWithAggregatesFilter<"Recibo"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Recibo"> | Date | string
    monedaId?: IntWithAggregatesFilter<"Recibo"> | number
  }

  export type ImpuestoWhereInput = {
    AND?: ImpuestoWhereInput | ImpuestoWhereInput[]
    OR?: ImpuestoWhereInput[]
    NOT?: ImpuestoWhereInput | ImpuestoWhereInput[]
    id?: IntFilter<"Impuesto"> | number
    nombre?: StringFilter<"Impuesto"> | string
    porcentaje?: DecimalFilter<"Impuesto"> | Decimal | DecimalJsLike | number | string
    activo?: BoolFilter<"Impuesto"> | boolean
    createdAt?: DateTimeFilter<"Impuesto"> | Date | string
    updatedAt?: DateTimeFilter<"Impuesto"> | Date | string
    descripcion?: StringNullableFilter<"Impuesto"> | string | null
    facturas?: FacturaListRelationFilter
    presupuestoImpuestos?: PresupuestoImpuestoListRelationFilter
  }

  export type ImpuestoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    porcentaje?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    facturas?: FacturaOrderByRelationAggregateInput
    presupuestoImpuestos?: PresupuestoImpuestoOrderByRelationAggregateInput
  }

  export type ImpuestoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: ImpuestoWhereInput | ImpuestoWhereInput[]
    OR?: ImpuestoWhereInput[]
    NOT?: ImpuestoWhereInput | ImpuestoWhereInput[]
    porcentaje?: DecimalFilter<"Impuesto"> | Decimal | DecimalJsLike | number | string
    activo?: BoolFilter<"Impuesto"> | boolean
    createdAt?: DateTimeFilter<"Impuesto"> | Date | string
    updatedAt?: DateTimeFilter<"Impuesto"> | Date | string
    descripcion?: StringNullableFilter<"Impuesto"> | string | null
    facturas?: FacturaListRelationFilter
    presupuestoImpuestos?: PresupuestoImpuestoListRelationFilter
  }, "id" | "nombre">

  export type ImpuestoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    porcentaje?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: ImpuestoCountOrderByAggregateInput
    _avg?: ImpuestoAvgOrderByAggregateInput
    _max?: ImpuestoMaxOrderByAggregateInput
    _min?: ImpuestoMinOrderByAggregateInput
    _sum?: ImpuestoSumOrderByAggregateInput
  }

  export type ImpuestoScalarWhereWithAggregatesInput = {
    AND?: ImpuestoScalarWhereWithAggregatesInput | ImpuestoScalarWhereWithAggregatesInput[]
    OR?: ImpuestoScalarWhereWithAggregatesInput[]
    NOT?: ImpuestoScalarWhereWithAggregatesInput | ImpuestoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Impuesto"> | number
    nombre?: StringWithAggregatesFilter<"Impuesto"> | string
    porcentaje?: DecimalWithAggregatesFilter<"Impuesto"> | Decimal | DecimalJsLike | number | string
    activo?: BoolWithAggregatesFilter<"Impuesto"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Impuesto"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Impuesto"> | Date | string
    descripcion?: StringNullableWithAggregatesFilter<"Impuesto"> | string | null
  }

  export type PresupuestoImpuestoWhereInput = {
    AND?: PresupuestoImpuestoWhereInput | PresupuestoImpuestoWhereInput[]
    OR?: PresupuestoImpuestoWhereInput[]
    NOT?: PresupuestoImpuestoWhereInput | PresupuestoImpuestoWhereInput[]
    id?: IntFilter<"PresupuestoImpuesto"> | number
    presupuestoId?: IntFilter<"PresupuestoImpuesto"> | number
    impuestoId?: IntFilter<"PresupuestoImpuesto"> | number
    monto?: DecimalFilter<"PresupuestoImpuesto"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"PresupuestoImpuesto"> | Date | string
    updatedAt?: DateTimeFilter<"PresupuestoImpuesto"> | Date | string
    impuesto?: XOR<ImpuestoScalarRelationFilter, ImpuestoWhereInput>
    presupuesto?: XOR<PresupuestoScalarRelationFilter, PresupuestoWhereInput>
  }

  export type PresupuestoImpuestoOrderByWithRelationInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    impuestoId?: SortOrder
    monto?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    impuesto?: ImpuestoOrderByWithRelationInput
    presupuesto?: PresupuestoOrderByWithRelationInput
  }

  export type PresupuestoImpuestoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    presupuestoId_impuestoId?: PresupuestoImpuestoPresupuestoIdImpuestoIdCompoundUniqueInput
    AND?: PresupuestoImpuestoWhereInput | PresupuestoImpuestoWhereInput[]
    OR?: PresupuestoImpuestoWhereInput[]
    NOT?: PresupuestoImpuestoWhereInput | PresupuestoImpuestoWhereInput[]
    presupuestoId?: IntFilter<"PresupuestoImpuesto"> | number
    impuestoId?: IntFilter<"PresupuestoImpuesto"> | number
    monto?: DecimalFilter<"PresupuestoImpuesto"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"PresupuestoImpuesto"> | Date | string
    updatedAt?: DateTimeFilter<"PresupuestoImpuesto"> | Date | string
    impuesto?: XOR<ImpuestoScalarRelationFilter, ImpuestoWhereInput>
    presupuesto?: XOR<PresupuestoScalarRelationFilter, PresupuestoWhereInput>
  }, "id" | "presupuestoId_impuestoId">

  export type PresupuestoImpuestoOrderByWithAggregationInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    impuestoId?: SortOrder
    monto?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PresupuestoImpuestoCountOrderByAggregateInput
    _avg?: PresupuestoImpuestoAvgOrderByAggregateInput
    _max?: PresupuestoImpuestoMaxOrderByAggregateInput
    _min?: PresupuestoImpuestoMinOrderByAggregateInput
    _sum?: PresupuestoImpuestoSumOrderByAggregateInput
  }

  export type PresupuestoImpuestoScalarWhereWithAggregatesInput = {
    AND?: PresupuestoImpuestoScalarWhereWithAggregatesInput | PresupuestoImpuestoScalarWhereWithAggregatesInput[]
    OR?: PresupuestoImpuestoScalarWhereWithAggregatesInput[]
    NOT?: PresupuestoImpuestoScalarWhereWithAggregatesInput | PresupuestoImpuestoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PresupuestoImpuesto"> | number
    presupuestoId?: IntWithAggregatesFilter<"PresupuestoImpuesto"> | number
    impuestoId?: IntWithAggregatesFilter<"PresupuestoImpuesto"> | number
    monto?: DecimalWithAggregatesFilter<"PresupuestoImpuesto"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"PresupuestoImpuesto"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PresupuestoImpuesto"> | Date | string
  }

  export type GastoOperativoWhereInput = {
    AND?: GastoOperativoWhereInput | GastoOperativoWhereInput[]
    OR?: GastoOperativoWhereInput[]
    NOT?: GastoOperativoWhereInput | GastoOperativoWhereInput[]
    id?: IntFilter<"GastoOperativo"> | number
    concepto?: StringFilter<"GastoOperativo"> | string
    descripcion?: StringNullableFilter<"GastoOperativo"> | string | null
    monto?: DecimalFilter<"GastoOperativo"> | Decimal | DecimalJsLike | number | string
    monedaId?: IntFilter<"GastoOperativo"> | number
    fecha?: DateTimeFilter<"GastoOperativo"> | Date | string
    categoria?: EnumCategoriaGastoFilter<"GastoOperativo"> | $Enums.CategoriaGasto
    esRecurrente?: BoolFilter<"GastoOperativo"> | boolean
    frecuencia?: StringNullableFilter<"GastoOperativo"> | string | null
    proveedorId?: IntNullableFilter<"GastoOperativo"> | number | null
    comprobante?: StringNullableFilter<"GastoOperativo"> | string | null
    observaciones?: StringNullableFilter<"GastoOperativo"> | string | null
    activo?: BoolFilter<"GastoOperativo"> | boolean
    createdAt?: DateTimeFilter<"GastoOperativo"> | Date | string
    updatedAt?: DateTimeFilter<"GastoOperativo"> | Date | string
    asignaciones?: AsignacionGastoProyectoListRelationFilter
    moneda?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
    proveedor?: XOR<PersonaNullableScalarRelationFilter, PersonaWhereInput> | null
  }

  export type GastoOperativoOrderByWithRelationInput = {
    id?: SortOrder
    concepto?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
    fecha?: SortOrder
    categoria?: SortOrder
    esRecurrente?: SortOrder
    frecuencia?: SortOrderInput | SortOrder
    proveedorId?: SortOrderInput | SortOrder
    comprobante?: SortOrderInput | SortOrder
    observaciones?: SortOrderInput | SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    asignaciones?: AsignacionGastoProyectoOrderByRelationAggregateInput
    moneda?: MonedaOrderByWithRelationInput
    proveedor?: PersonaOrderByWithRelationInput
  }

  export type GastoOperativoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: GastoOperativoWhereInput | GastoOperativoWhereInput[]
    OR?: GastoOperativoWhereInput[]
    NOT?: GastoOperativoWhereInput | GastoOperativoWhereInput[]
    concepto?: StringFilter<"GastoOperativo"> | string
    descripcion?: StringNullableFilter<"GastoOperativo"> | string | null
    monto?: DecimalFilter<"GastoOperativo"> | Decimal | DecimalJsLike | number | string
    monedaId?: IntFilter<"GastoOperativo"> | number
    fecha?: DateTimeFilter<"GastoOperativo"> | Date | string
    categoria?: EnumCategoriaGastoFilter<"GastoOperativo"> | $Enums.CategoriaGasto
    esRecurrente?: BoolFilter<"GastoOperativo"> | boolean
    frecuencia?: StringNullableFilter<"GastoOperativo"> | string | null
    proveedorId?: IntNullableFilter<"GastoOperativo"> | number | null
    comprobante?: StringNullableFilter<"GastoOperativo"> | string | null
    observaciones?: StringNullableFilter<"GastoOperativo"> | string | null
    activo?: BoolFilter<"GastoOperativo"> | boolean
    createdAt?: DateTimeFilter<"GastoOperativo"> | Date | string
    updatedAt?: DateTimeFilter<"GastoOperativo"> | Date | string
    asignaciones?: AsignacionGastoProyectoListRelationFilter
    moneda?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
    proveedor?: XOR<PersonaNullableScalarRelationFilter, PersonaWhereInput> | null
  }, "id">

  export type GastoOperativoOrderByWithAggregationInput = {
    id?: SortOrder
    concepto?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
    fecha?: SortOrder
    categoria?: SortOrder
    esRecurrente?: SortOrder
    frecuencia?: SortOrderInput | SortOrder
    proveedorId?: SortOrderInput | SortOrder
    comprobante?: SortOrderInput | SortOrder
    observaciones?: SortOrderInput | SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: GastoOperativoCountOrderByAggregateInput
    _avg?: GastoOperativoAvgOrderByAggregateInput
    _max?: GastoOperativoMaxOrderByAggregateInput
    _min?: GastoOperativoMinOrderByAggregateInput
    _sum?: GastoOperativoSumOrderByAggregateInput
  }

  export type GastoOperativoScalarWhereWithAggregatesInput = {
    AND?: GastoOperativoScalarWhereWithAggregatesInput | GastoOperativoScalarWhereWithAggregatesInput[]
    OR?: GastoOperativoScalarWhereWithAggregatesInput[]
    NOT?: GastoOperativoScalarWhereWithAggregatesInput | GastoOperativoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"GastoOperativo"> | number
    concepto?: StringWithAggregatesFilter<"GastoOperativo"> | string
    descripcion?: StringNullableWithAggregatesFilter<"GastoOperativo"> | string | null
    monto?: DecimalWithAggregatesFilter<"GastoOperativo"> | Decimal | DecimalJsLike | number | string
    monedaId?: IntWithAggregatesFilter<"GastoOperativo"> | number
    fecha?: DateTimeWithAggregatesFilter<"GastoOperativo"> | Date | string
    categoria?: EnumCategoriaGastoWithAggregatesFilter<"GastoOperativo"> | $Enums.CategoriaGasto
    esRecurrente?: BoolWithAggregatesFilter<"GastoOperativo"> | boolean
    frecuencia?: StringNullableWithAggregatesFilter<"GastoOperativo"> | string | null
    proveedorId?: IntNullableWithAggregatesFilter<"GastoOperativo"> | number | null
    comprobante?: StringNullableWithAggregatesFilter<"GastoOperativo"> | string | null
    observaciones?: StringNullableWithAggregatesFilter<"GastoOperativo"> | string | null
    activo?: BoolWithAggregatesFilter<"GastoOperativo"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"GastoOperativo"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"GastoOperativo"> | Date | string
  }

  export type AsignacionGastoProyectoWhereInput = {
    AND?: AsignacionGastoProyectoWhereInput | AsignacionGastoProyectoWhereInput[]
    OR?: AsignacionGastoProyectoWhereInput[]
    NOT?: AsignacionGastoProyectoWhereInput | AsignacionGastoProyectoWhereInput[]
    id?: IntFilter<"AsignacionGastoProyecto"> | number
    gastoId?: IntFilter<"AsignacionGastoProyecto"> | number
    presupuestoId?: IntFilter<"AsignacionGastoProyecto"> | number
    porcentaje?: DecimalFilter<"AsignacionGastoProyecto"> | Decimal | DecimalJsLike | number | string
    montoAsignado?: DecimalFilter<"AsignacionGastoProyecto"> | Decimal | DecimalJsLike | number | string
    justificacion?: StringNullableFilter<"AsignacionGastoProyecto"> | string | null
    createdAt?: DateTimeFilter<"AsignacionGastoProyecto"> | Date | string
    updatedAt?: DateTimeFilter<"AsignacionGastoProyecto"> | Date | string
    gasto?: XOR<GastoOperativoScalarRelationFilter, GastoOperativoWhereInput>
    presupuesto?: XOR<PresupuestoScalarRelationFilter, PresupuestoWhereInput>
  }

  export type AsignacionGastoProyectoOrderByWithRelationInput = {
    id?: SortOrder
    gastoId?: SortOrder
    presupuestoId?: SortOrder
    porcentaje?: SortOrder
    montoAsignado?: SortOrder
    justificacion?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    gasto?: GastoOperativoOrderByWithRelationInput
    presupuesto?: PresupuestoOrderByWithRelationInput
  }

  export type AsignacionGastoProyectoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    gastoId_presupuestoId?: AsignacionGastoProyectoGastoIdPresupuestoIdCompoundUniqueInput
    AND?: AsignacionGastoProyectoWhereInput | AsignacionGastoProyectoWhereInput[]
    OR?: AsignacionGastoProyectoWhereInput[]
    NOT?: AsignacionGastoProyectoWhereInput | AsignacionGastoProyectoWhereInput[]
    gastoId?: IntFilter<"AsignacionGastoProyecto"> | number
    presupuestoId?: IntFilter<"AsignacionGastoProyecto"> | number
    porcentaje?: DecimalFilter<"AsignacionGastoProyecto"> | Decimal | DecimalJsLike | number | string
    montoAsignado?: DecimalFilter<"AsignacionGastoProyecto"> | Decimal | DecimalJsLike | number | string
    justificacion?: StringNullableFilter<"AsignacionGastoProyecto"> | string | null
    createdAt?: DateTimeFilter<"AsignacionGastoProyecto"> | Date | string
    updatedAt?: DateTimeFilter<"AsignacionGastoProyecto"> | Date | string
    gasto?: XOR<GastoOperativoScalarRelationFilter, GastoOperativoWhereInput>
    presupuesto?: XOR<PresupuestoScalarRelationFilter, PresupuestoWhereInput>
  }, "id" | "gastoId_presupuestoId">

  export type AsignacionGastoProyectoOrderByWithAggregationInput = {
    id?: SortOrder
    gastoId?: SortOrder
    presupuestoId?: SortOrder
    porcentaje?: SortOrder
    montoAsignado?: SortOrder
    justificacion?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AsignacionGastoProyectoCountOrderByAggregateInput
    _avg?: AsignacionGastoProyectoAvgOrderByAggregateInput
    _max?: AsignacionGastoProyectoMaxOrderByAggregateInput
    _min?: AsignacionGastoProyectoMinOrderByAggregateInput
    _sum?: AsignacionGastoProyectoSumOrderByAggregateInput
  }

  export type AsignacionGastoProyectoScalarWhereWithAggregatesInput = {
    AND?: AsignacionGastoProyectoScalarWhereWithAggregatesInput | AsignacionGastoProyectoScalarWhereWithAggregatesInput[]
    OR?: AsignacionGastoProyectoScalarWhereWithAggregatesInput[]
    NOT?: AsignacionGastoProyectoScalarWhereWithAggregatesInput | AsignacionGastoProyectoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"AsignacionGastoProyecto"> | number
    gastoId?: IntWithAggregatesFilter<"AsignacionGastoProyecto"> | number
    presupuestoId?: IntWithAggregatesFilter<"AsignacionGastoProyecto"> | number
    porcentaje?: DecimalWithAggregatesFilter<"AsignacionGastoProyecto"> | Decimal | DecimalJsLike | number | string
    montoAsignado?: DecimalWithAggregatesFilter<"AsignacionGastoProyecto"> | Decimal | DecimalJsLike | number | string
    justificacion?: StringNullableWithAggregatesFilter<"AsignacionGastoProyecto"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"AsignacionGastoProyecto"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AsignacionGastoProyecto"> | Date | string
  }

  export type HistorialPrecioWhereInput = {
    AND?: HistorialPrecioWhereInput | HistorialPrecioWhereInput[]
    OR?: HistorialPrecioWhereInput[]
    NOT?: HistorialPrecioWhereInput | HistorialPrecioWhereInput[]
    id?: IntFilter<"HistorialPrecio"> | number
    productoId?: IntNullableFilter<"HistorialPrecio"> | number | null
    servicioId?: IntNullableFilter<"HistorialPrecio"> | number | null
    monedaId?: IntFilter<"HistorialPrecio"> | number
    precio?: DecimalFilter<"HistorialPrecio"> | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFilter<"HistorialPrecio"> | Date | string
    fechaHasta?: DateTimeNullableFilter<"HistorialPrecio"> | Date | string | null
    motivoCambio?: StringNullableFilter<"HistorialPrecio"> | string | null
    usuarioId?: IntNullableFilter<"HistorialPrecio"> | number | null
    activo?: BoolFilter<"HistorialPrecio"> | boolean
    createdAt?: DateTimeFilter<"HistorialPrecio"> | Date | string
    updatedAt?: DateTimeFilter<"HistorialPrecio"> | Date | string
    moneda?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
    producto?: XOR<ProductoNullableScalarRelationFilter, ProductoWhereInput> | null
    servicio?: XOR<ServicioNullableScalarRelationFilter, ServicioWhereInput> | null
    usuario?: XOR<PersonaNullableScalarRelationFilter, PersonaWhereInput> | null
  }

  export type HistorialPrecioOrderByWithRelationInput = {
    id?: SortOrder
    productoId?: SortOrderInput | SortOrder
    servicioId?: SortOrderInput | SortOrder
    monedaId?: SortOrder
    precio?: SortOrder
    fechaDesde?: SortOrder
    fechaHasta?: SortOrderInput | SortOrder
    motivoCambio?: SortOrderInput | SortOrder
    usuarioId?: SortOrderInput | SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    moneda?: MonedaOrderByWithRelationInput
    producto?: ProductoOrderByWithRelationInput
    servicio?: ServicioOrderByWithRelationInput
    usuario?: PersonaOrderByWithRelationInput
  }

  export type HistorialPrecioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: HistorialPrecioWhereInput | HistorialPrecioWhereInput[]
    OR?: HistorialPrecioWhereInput[]
    NOT?: HistorialPrecioWhereInput | HistorialPrecioWhereInput[]
    productoId?: IntNullableFilter<"HistorialPrecio"> | number | null
    servicioId?: IntNullableFilter<"HistorialPrecio"> | number | null
    monedaId?: IntFilter<"HistorialPrecio"> | number
    precio?: DecimalFilter<"HistorialPrecio"> | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFilter<"HistorialPrecio"> | Date | string
    fechaHasta?: DateTimeNullableFilter<"HistorialPrecio"> | Date | string | null
    motivoCambio?: StringNullableFilter<"HistorialPrecio"> | string | null
    usuarioId?: IntNullableFilter<"HistorialPrecio"> | number | null
    activo?: BoolFilter<"HistorialPrecio"> | boolean
    createdAt?: DateTimeFilter<"HistorialPrecio"> | Date | string
    updatedAt?: DateTimeFilter<"HistorialPrecio"> | Date | string
    moneda?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
    producto?: XOR<ProductoNullableScalarRelationFilter, ProductoWhereInput> | null
    servicio?: XOR<ServicioNullableScalarRelationFilter, ServicioWhereInput> | null
    usuario?: XOR<PersonaNullableScalarRelationFilter, PersonaWhereInput> | null
  }, "id">

  export type HistorialPrecioOrderByWithAggregationInput = {
    id?: SortOrder
    productoId?: SortOrderInput | SortOrder
    servicioId?: SortOrderInput | SortOrder
    monedaId?: SortOrder
    precio?: SortOrder
    fechaDesde?: SortOrder
    fechaHasta?: SortOrderInput | SortOrder
    motivoCambio?: SortOrderInput | SortOrder
    usuarioId?: SortOrderInput | SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: HistorialPrecioCountOrderByAggregateInput
    _avg?: HistorialPrecioAvgOrderByAggregateInput
    _max?: HistorialPrecioMaxOrderByAggregateInput
    _min?: HistorialPrecioMinOrderByAggregateInput
    _sum?: HistorialPrecioSumOrderByAggregateInput
  }

  export type HistorialPrecioScalarWhereWithAggregatesInput = {
    AND?: HistorialPrecioScalarWhereWithAggregatesInput | HistorialPrecioScalarWhereWithAggregatesInput[]
    OR?: HistorialPrecioScalarWhereWithAggregatesInput[]
    NOT?: HistorialPrecioScalarWhereWithAggregatesInput | HistorialPrecioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"HistorialPrecio"> | number
    productoId?: IntNullableWithAggregatesFilter<"HistorialPrecio"> | number | null
    servicioId?: IntNullableWithAggregatesFilter<"HistorialPrecio"> | number | null
    monedaId?: IntWithAggregatesFilter<"HistorialPrecio"> | number
    precio?: DecimalWithAggregatesFilter<"HistorialPrecio"> | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeWithAggregatesFilter<"HistorialPrecio"> | Date | string
    fechaHasta?: DateTimeNullableWithAggregatesFilter<"HistorialPrecio"> | Date | string | null
    motivoCambio?: StringNullableWithAggregatesFilter<"HistorialPrecio"> | string | null
    usuarioId?: IntNullableWithAggregatesFilter<"HistorialPrecio"> | number | null
    activo?: BoolWithAggregatesFilter<"HistorialPrecio"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"HistorialPrecio"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"HistorialPrecio"> | Date | string
  }

  export type PagoAdminWhereInput = {
    AND?: PagoAdminWhereInput | PagoAdminWhereInput[]
    OR?: PagoAdminWhereInput[]
    NOT?: PagoAdminWhereInput | PagoAdminWhereInput[]
    id?: IntFilter<"PagoAdmin"> | number
    adminId?: IntFilter<"PagoAdmin"> | number
    presupuestoId?: IntFilter<"PagoAdmin"> | number
    monto?: DecimalFilter<"PagoAdmin"> | Decimal | DecimalJsLike | number | string
    monedaId?: IntFilter<"PagoAdmin"> | number
    fecha?: DateTimeFilter<"PagoAdmin"> | Date | string
    metodoPago?: StringFilter<"PagoAdmin"> | string
    concepto?: StringNullableFilter<"PagoAdmin"> | string | null
    createdAt?: DateTimeFilter<"PagoAdmin"> | Date | string
    updatedAt?: DateTimeFilter<"PagoAdmin"> | Date | string
    admin?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
    presupuesto?: XOR<PresupuestoScalarRelationFilter, PresupuestoWhereInput>
    moneda?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
  }

  export type PagoAdminOrderByWithRelationInput = {
    id?: SortOrder
    adminId?: SortOrder
    presupuestoId?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
    fecha?: SortOrder
    metodoPago?: SortOrder
    concepto?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    admin?: PersonaOrderByWithRelationInput
    presupuesto?: PresupuestoOrderByWithRelationInput
    moneda?: MonedaOrderByWithRelationInput
  }

  export type PagoAdminWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PagoAdminWhereInput | PagoAdminWhereInput[]
    OR?: PagoAdminWhereInput[]
    NOT?: PagoAdminWhereInput | PagoAdminWhereInput[]
    adminId?: IntFilter<"PagoAdmin"> | number
    presupuestoId?: IntFilter<"PagoAdmin"> | number
    monto?: DecimalFilter<"PagoAdmin"> | Decimal | DecimalJsLike | number | string
    monedaId?: IntFilter<"PagoAdmin"> | number
    fecha?: DateTimeFilter<"PagoAdmin"> | Date | string
    metodoPago?: StringFilter<"PagoAdmin"> | string
    concepto?: StringNullableFilter<"PagoAdmin"> | string | null
    createdAt?: DateTimeFilter<"PagoAdmin"> | Date | string
    updatedAt?: DateTimeFilter<"PagoAdmin"> | Date | string
    admin?: XOR<PersonaScalarRelationFilter, PersonaWhereInput>
    presupuesto?: XOR<PresupuestoScalarRelationFilter, PresupuestoWhereInput>
    moneda?: XOR<MonedaScalarRelationFilter, MonedaWhereInput>
  }, "id">

  export type PagoAdminOrderByWithAggregationInput = {
    id?: SortOrder
    adminId?: SortOrder
    presupuestoId?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
    fecha?: SortOrder
    metodoPago?: SortOrder
    concepto?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PagoAdminCountOrderByAggregateInput
    _avg?: PagoAdminAvgOrderByAggregateInput
    _max?: PagoAdminMaxOrderByAggregateInput
    _min?: PagoAdminMinOrderByAggregateInput
    _sum?: PagoAdminSumOrderByAggregateInput
  }

  export type PagoAdminScalarWhereWithAggregatesInput = {
    AND?: PagoAdminScalarWhereWithAggregatesInput | PagoAdminScalarWhereWithAggregatesInput[]
    OR?: PagoAdminScalarWhereWithAggregatesInput[]
    NOT?: PagoAdminScalarWhereWithAggregatesInput | PagoAdminScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PagoAdmin"> | number
    adminId?: IntWithAggregatesFilter<"PagoAdmin"> | number
    presupuestoId?: IntWithAggregatesFilter<"PagoAdmin"> | number
    monto?: DecimalWithAggregatesFilter<"PagoAdmin"> | Decimal | DecimalJsLike | number | string
    monedaId?: IntWithAggregatesFilter<"PagoAdmin"> | number
    fecha?: DateTimeWithAggregatesFilter<"PagoAdmin"> | Date | string
    metodoPago?: StringWithAggregatesFilter<"PagoAdmin"> | string
    concepto?: StringNullableWithAggregatesFilter<"PagoAdmin"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PagoAdmin"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PagoAdmin"> | Date | string
  }

  export type MonedaCreateInput = {
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoCreateNestedManyWithoutMonedaInput
    productos?: ProductoCreateNestedManyWithoutMonedaInput
    servicios?: ServicioCreateNestedManyWithoutMonedaInput
    recibos?: ReciboCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaUncheckedCreateInput = {
    id?: number
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaUncheckedCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoUncheckedCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutMonedaInput
    productos?: ProductoUncheckedCreateNestedManyWithoutMonedaInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutMonedaInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioUncheckedCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioUncheckedCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaUpdateInput = {
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type MonedaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUncheckedUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUncheckedUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUncheckedUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUncheckedUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type MonedaCreateManyInput = {
    id?: number
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MonedaUpdateManyMutationInput = {
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MonedaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CobroClienteCreateInput = {
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    presupuesto: PresupuestoCreateNestedOneWithoutCobrosClienteInput
    moneda?: MonedaCreateNestedOneWithoutCobrosClienteInput
  }

  export type CobroClienteUncheckedCreateInput = {
    id?: number
    presupuestoId: number
    monto: Decimal | DecimalJsLike | number | string
    monedaId?: number
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CobroClienteUpdateInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    presupuesto?: PresupuestoUpdateOneRequiredWithoutCobrosClienteNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutCobrosClienteNestedInput
  }

  export type CobroClienteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monedaId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CobroClienteCreateManyInput = {
    id?: number
    presupuestoId: number
    monto: Decimal | DecimalJsLike | number | string
    monedaId?: number
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CobroClienteUpdateManyMutationInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CobroClienteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monedaId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TipoCambioCreateInput = {
    valor: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    tipo?: $Enums.TipoCotizacion
    fuente?: string | null
    createdAt?: Date | string
    monedaDesde: MonedaCreateNestedOneWithoutTiposCambioInput
    monedaHacia: MonedaCreateNestedOneWithoutTiposCambioDestinoInput
  }

  export type TipoCambioUncheckedCreateInput = {
    id?: number
    monedaDesdeId: number
    monedaHaciaId: number
    valor: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    tipo?: $Enums.TipoCotizacion
    fuente?: string | null
    createdAt?: Date | string
  }

  export type TipoCambioUpdateInput = {
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoCotizacionFieldUpdateOperationsInput | $Enums.TipoCotizacion
    fuente?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaDesde?: MonedaUpdateOneRequiredWithoutTiposCambioNestedInput
    monedaHacia?: MonedaUpdateOneRequiredWithoutTiposCambioDestinoNestedInput
  }

  export type TipoCambioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    monedaDesdeId?: IntFieldUpdateOperationsInput | number
    monedaHaciaId?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoCotizacionFieldUpdateOperationsInput | $Enums.TipoCotizacion
    fuente?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TipoCambioCreateManyInput = {
    id?: number
    monedaDesdeId: number
    monedaHaciaId: number
    valor: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    tipo?: $Enums.TipoCotizacion
    fuente?: string | null
    createdAt?: Date | string
  }

  export type TipoCambioUpdateManyMutationInput = {
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoCotizacionFieldUpdateOperationsInput | $Enums.TipoCotizacion
    fuente?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TipoCambioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    monedaDesdeId?: IntFieldUpdateOperationsInput | number
    monedaHaciaId?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoCotizacionFieldUpdateOperationsInput | $Enums.TipoCotizacion
    fuente?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PersonaCreateInput = {
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
    gastosComoProveedor?: GastoOperativoCreateNestedManyWithoutProveedorInput
    historialPreciosUsuario?: HistorialPrecioCreateNestedManyWithoutUsuarioInput
    presupuestos?: PresupuestoCreateNestedManyWithoutClienteInput
    productos?: ProductoCreateNestedManyWithoutProveedorInput
    recibos?: ReciboCreateNestedManyWithoutPersonaInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutAdminInput
    servicios?: ServicioCreateNestedManyWithoutProveedorInput
    empresas?: EmpresaCreateNestedManyWithoutClienteInput
  }

  export type PersonaUncheckedCreateInput = {
    id?: number
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
    gastosComoProveedor?: GastoOperativoUncheckedCreateNestedManyWithoutProveedorInput
    historialPreciosUsuario?: HistorialPrecioUncheckedCreateNestedManyWithoutUsuarioInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutClienteInput
    productos?: ProductoUncheckedCreateNestedManyWithoutProveedorInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutPersonaInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutAdminInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutProveedorInput
    empresas?: EmpresaUncheckedCreateNestedManyWithoutClienteInput
  }

  export type PersonaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
    gastosComoProveedor?: GastoOperativoUpdateManyWithoutProveedorNestedInput
    historialPreciosUsuario?: HistorialPrecioUpdateManyWithoutUsuarioNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutClienteNestedInput
    productos?: ProductoUpdateManyWithoutProveedorNestedInput
    recibos?: ReciboUpdateManyWithoutPersonaNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutAdminNestedInput
    servicios?: ServicioUpdateManyWithoutProveedorNestedInput
    empresas?: EmpresaUpdateManyWithoutClienteNestedInput
  }

  export type PersonaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
    gastosComoProveedor?: GastoOperativoUncheckedUpdateManyWithoutProveedorNestedInput
    historialPreciosUsuario?: HistorialPrecioUncheckedUpdateManyWithoutUsuarioNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutClienteNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutProveedorNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutPersonaNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutAdminNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutProveedorNestedInput
    empresas?: EmpresaUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type PersonaCreateManyInput = {
    id?: number
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
  }

  export type PersonaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PersonaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EmpresaCreateInput = {
    nombre: string
    razonSocial?: string | null
    cuit?: string | null
    telefono?: string | null
    email?: string | null
    direccion?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    cliente: PersonaCreateNestedOneWithoutEmpresasInput
    presupuestos?: PresupuestoCreateNestedManyWithoutEmpresaInput
    facturas?: FacturaCreateNestedManyWithoutEmpresaInput
  }

  export type EmpresaUncheckedCreateInput = {
    id?: number
    nombre: string
    razonSocial?: string | null
    cuit?: string | null
    telefono?: string | null
    email?: string | null
    direccion?: string | null
    clienteId: number
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutEmpresaInput
    facturas?: FacturaUncheckedCreateNestedManyWithoutEmpresaInput
  }

  export type EmpresaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    cuit?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: PersonaUpdateOneRequiredWithoutEmpresasNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutEmpresaNestedInput
    facturas?: FacturaUpdateManyWithoutEmpresaNestedInput
  }

  export type EmpresaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    cuit?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutEmpresaNestedInput
    facturas?: FacturaUncheckedUpdateManyWithoutEmpresaNestedInput
  }

  export type EmpresaCreateManyInput = {
    id?: number
    nombre: string
    razonSocial?: string | null
    cuit?: string | null
    telefono?: string | null
    email?: string | null
    direccion?: string | null
    clienteId: number
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EmpresaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    cuit?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EmpresaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    cuit?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductoCreateInput = {
    nombre: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutProductoInput
    items?: ItemCreateNestedManyWithoutProductoInput
    moneda?: MonedaCreateNestedOneWithoutProductosInput
    proveedor: PersonaCreateNestedOneWithoutProductosInput
  }

  export type ProductoUncheckedCreateInput = {
    id?: number
    nombre: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    proveedorId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    items?: ItemUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    historialPrecios?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    items?: ItemUpdateManyWithoutProductoNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutProductosNestedInput
    proveedor?: PersonaUpdateOneRequiredWithoutProductosNestedInput
  }

  export type ProductoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    proveedorId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    items?: ItemUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoCreateManyInput = {
    id?: number
    nombre: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    proveedorId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
  }

  export type ProductoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    proveedorId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
  }

  export type ServicioCreateInput = {
    nombre: string
    descripcion: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutServicioInput
    items?: ItemCreateNestedManyWithoutServicioInput
    moneda?: MonedaCreateNestedOneWithoutServiciosInput
    proveedor: PersonaCreateNestedOneWithoutServiciosInput
  }

  export type ServicioUncheckedCreateInput = {
    id?: number
    nombre: string
    descripcion: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    proveedorId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutServicioInput
    items?: ItemUncheckedCreateNestedManyWithoutServicioInput
  }

  export type ServicioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    historialPrecios?: HistorialPrecioUpdateManyWithoutServicioNestedInput
    items?: ItemUpdateManyWithoutServicioNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutServiciosNestedInput
    proveedor?: PersonaUpdateOneRequiredWithoutServiciosNestedInput
  }

  export type ServicioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    proveedorId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutServicioNestedInput
    items?: ItemUncheckedUpdateManyWithoutServicioNestedInput
  }

  export type ServicioCreateManyInput = {
    id?: number
    nombre: string
    descripcion: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    proveedorId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
  }

  export type ServicioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ServicioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    proveedorId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
  }

  export type PresupuestoCreateInput = {
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoCreateNestedManyWithoutPresupuestoInput
    facturas?: FacturaCreateNestedManyWithoutPresupuestoInput
    items?: ItemCreateNestedManyWithoutPresupuestoInput
    cliente: PersonaCreateNestedOneWithoutPresupuestosInput
    empresa?: EmpresaCreateNestedOneWithoutPresupuestosInput
    moneda?: MonedaCreateNestedOneWithoutPresupuestosInput
    presupuestoImpuestos?: PresupuestoImpuestoCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoUncheckedCreateInput = {
    id?: number
    clienteId: number
    empresaId?: number | null
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedCreateNestedManyWithoutPresupuestoInput
    facturas?: FacturaUncheckedCreateNestedManyWithoutPresupuestoInput
    items?: ItemUncheckedCreateNestedManyWithoutPresupuestoInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoUpdateInput = {
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUpdateManyWithoutPresupuestoNestedInput
    facturas?: FacturaUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUpdateManyWithoutPresupuestoNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutPresupuestosNestedInput
    empresa?: EmpresaUpdateOneWithoutPresupuestosNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutPresupuestosNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutPresupuestoNestedInput
  }

  export type PresupuestoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedUpdateManyWithoutPresupuestoNestedInput
    facturas?: FacturaUncheckedUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUncheckedUpdateManyWithoutPresupuestoNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutPresupuestoNestedInput
  }

  export type PresupuestoCreateManyInput = {
    id?: number
    clienteId: number
    empresaId?: number | null
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
  }

  export type PresupuestoUpdateManyMutationInput = {
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type PresupuestoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type ItemCreateInput = {
    cantidad: number
    precioUnitario: Decimal | DecimalJsLike | number | string
    presupuesto: PresupuestoCreateNestedOneWithoutItemsInput
    producto?: ProductoCreateNestedOneWithoutItemsInput
    servicio?: ServicioCreateNestedOneWithoutItemsInput
  }

  export type ItemUncheckedCreateInput = {
    id?: number
    presupuestoId: number
    productoId?: number | null
    servicioId?: number | null
    cantidad: number
    precioUnitario: Decimal | DecimalJsLike | number | string
  }

  export type ItemUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    presupuesto?: PresupuestoUpdateOneRequiredWithoutItemsNestedInput
    producto?: ProductoUpdateOneWithoutItemsNestedInput
    servicio?: ServicioUpdateOneWithoutItemsNestedInput
  }

  export type ItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    servicioId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ItemCreateManyInput = {
    id?: number
    presupuestoId: number
    productoId?: number | null
    servicioId?: number | null
    cantidad: number
    precioUnitario: Decimal | DecimalJsLike | number | string
  }

  export type ItemUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    servicioId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type FacturaCreateInput = {
    numero: string
    fecha: Date | string
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado: $Enums.EstadoFactura
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
    empresa?: EmpresaCreateNestedOneWithoutFacturasInput
    impuestoAplicado: ImpuestoCreateNestedOneWithoutFacturasInput
    moneda?: MonedaCreateNestedOneWithoutFacturasInput
    presupuesto: PresupuestoCreateNestedOneWithoutFacturasInput
  }

  export type FacturaUncheckedCreateInput = {
    id?: number
    numero: string
    presupuestoId: number
    empresaId?: number | null
    fecha: Date | string
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado: $Enums.EstadoFactura
    impuestoAplicadoId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
  }

  export type FacturaUpdateInput = {
    numero?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFieldUpdateOperationsInput | $Enums.EstadoFactura
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empresa?: EmpresaUpdateOneWithoutFacturasNestedInput
    impuestoAplicado?: ImpuestoUpdateOneRequiredWithoutFacturasNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutFacturasNestedInput
    presupuesto?: PresupuestoUpdateOneRequiredWithoutFacturasNestedInput
  }

  export type FacturaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    numero?: StringFieldUpdateOperationsInput | string
    presupuestoId?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFieldUpdateOperationsInput | $Enums.EstadoFactura
    impuestoAplicadoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FacturaCreateManyInput = {
    id?: number
    numero: string
    presupuestoId: number
    empresaId?: number | null
    fecha: Date | string
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado: $Enums.EstadoFactura
    impuestoAplicadoId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
  }

  export type FacturaUpdateManyMutationInput = {
    numero?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFieldUpdateOperationsInput | $Enums.EstadoFactura
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FacturaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    numero?: StringFieldUpdateOperationsInput | string
    presupuestoId?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFieldUpdateOperationsInput | $Enums.EstadoFactura
    impuestoAplicadoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReciboCreateInput = {
    concepto: string
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    tipo?: $Enums.ReciboTipo
    createdAt?: Date | string
    updatedAt?: Date | string
    persona: PersonaCreateNestedOneWithoutRecibosInput
    presupuesto?: PresupuestoCreateNestedOneWithoutRecibosInput
    moneda?: MonedaCreateNestedOneWithoutRecibosInput
  }

  export type ReciboUncheckedCreateInput = {
    id?: number
    personaId: number
    presupuestoId?: number | null
    concepto: string
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    tipo?: $Enums.ReciboTipo
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
  }

  export type ReciboUpdateInput = {
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    tipo?: EnumReciboTipoFieldUpdateOperationsInput | $Enums.ReciboTipo
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    persona?: PersonaUpdateOneRequiredWithoutRecibosNestedInput
    presupuesto?: PresupuestoUpdateOneWithoutRecibosNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutRecibosNestedInput
  }

  export type ReciboUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    personaId?: IntFieldUpdateOperationsInput | number
    presupuestoId?: NullableIntFieldUpdateOperationsInput | number | null
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    tipo?: EnumReciboTipoFieldUpdateOperationsInput | $Enums.ReciboTipo
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
  }

  export type ReciboCreateManyInput = {
    id?: number
    personaId: number
    presupuestoId?: number | null
    concepto: string
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    tipo?: $Enums.ReciboTipo
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
  }

  export type ReciboUpdateManyMutationInput = {
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    tipo?: EnumReciboTipoFieldUpdateOperationsInput | $Enums.ReciboTipo
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReciboUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    personaId?: IntFieldUpdateOperationsInput | number
    presupuestoId?: NullableIntFieldUpdateOperationsInput | number | null
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    tipo?: EnumReciboTipoFieldUpdateOperationsInput | $Enums.ReciboTipo
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
  }

  export type ImpuestoCreateInput = {
    nombre: string
    porcentaje: Decimal | DecimalJsLike | number | string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    descripcion?: string | null
    facturas?: FacturaCreateNestedManyWithoutImpuestoAplicadoInput
    presupuestoImpuestos?: PresupuestoImpuestoCreateNestedManyWithoutImpuestoInput
  }

  export type ImpuestoUncheckedCreateInput = {
    id?: number
    nombre: string
    porcentaje: Decimal | DecimalJsLike | number | string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    descripcion?: string | null
    facturas?: FacturaUncheckedCreateNestedManyWithoutImpuestoAplicadoInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedCreateNestedManyWithoutImpuestoInput
  }

  export type ImpuestoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    facturas?: FacturaUpdateManyWithoutImpuestoAplicadoNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUpdateManyWithoutImpuestoNestedInput
  }

  export type ImpuestoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    facturas?: FacturaUncheckedUpdateManyWithoutImpuestoAplicadoNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedUpdateManyWithoutImpuestoNestedInput
  }

  export type ImpuestoCreateManyInput = {
    id?: number
    nombre: string
    porcentaje: Decimal | DecimalJsLike | number | string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    descripcion?: string | null
  }

  export type ImpuestoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ImpuestoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PresupuestoImpuestoCreateInput = {
    monto: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    impuesto: ImpuestoCreateNestedOneWithoutPresupuestoImpuestosInput
    presupuesto: PresupuestoCreateNestedOneWithoutPresupuestoImpuestosInput
  }

  export type PresupuestoImpuestoUncheckedCreateInput = {
    id?: number
    presupuestoId: number
    impuestoId: number
    monto: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PresupuestoImpuestoUpdateInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    impuesto?: ImpuestoUpdateOneRequiredWithoutPresupuestoImpuestosNestedInput
    presupuesto?: PresupuestoUpdateOneRequiredWithoutPresupuestoImpuestosNestedInput
  }

  export type PresupuestoImpuestoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    impuestoId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PresupuestoImpuestoCreateManyInput = {
    id?: number
    presupuestoId: number
    impuestoId: number
    monto: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PresupuestoImpuestoUpdateManyMutationInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PresupuestoImpuestoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    impuestoId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GastoOperativoCreateInput = {
    concepto: string
    descripcion?: string | null
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    categoria: $Enums.CategoriaGasto
    esRecurrente?: boolean
    frecuencia?: string | null
    comprobante?: string | null
    observaciones?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    asignaciones?: AsignacionGastoProyectoCreateNestedManyWithoutGastoInput
    moneda: MonedaCreateNestedOneWithoutGastosOperativosInput
    proveedor?: PersonaCreateNestedOneWithoutGastosComoProveedorInput
  }

  export type GastoOperativoUncheckedCreateInput = {
    id?: number
    concepto: string
    descripcion?: string | null
    monto: Decimal | DecimalJsLike | number | string
    monedaId: number
    fecha: Date | string
    categoria: $Enums.CategoriaGasto
    esRecurrente?: boolean
    frecuencia?: string | null
    proveedorId?: number | null
    comprobante?: string | null
    observaciones?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    asignaciones?: AsignacionGastoProyectoUncheckedCreateNestedManyWithoutGastoInput
  }

  export type GastoOperativoUpdateInput = {
    concepto?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: EnumCategoriaGastoFieldUpdateOperationsInput | $Enums.CategoriaGasto
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableStringFieldUpdateOperationsInput | string | null
    comprobante?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asignaciones?: AsignacionGastoProyectoUpdateManyWithoutGastoNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutGastosOperativosNestedInput
    proveedor?: PersonaUpdateOneWithoutGastosComoProveedorNestedInput
  }

  export type GastoOperativoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    concepto?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monedaId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: EnumCategoriaGastoFieldUpdateOperationsInput | $Enums.CategoriaGasto
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableStringFieldUpdateOperationsInput | string | null
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
    comprobante?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asignaciones?: AsignacionGastoProyectoUncheckedUpdateManyWithoutGastoNestedInput
  }

  export type GastoOperativoCreateManyInput = {
    id?: number
    concepto: string
    descripcion?: string | null
    monto: Decimal | DecimalJsLike | number | string
    monedaId: number
    fecha: Date | string
    categoria: $Enums.CategoriaGasto
    esRecurrente?: boolean
    frecuencia?: string | null
    proveedorId?: number | null
    comprobante?: string | null
    observaciones?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GastoOperativoUpdateManyMutationInput = {
    concepto?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: EnumCategoriaGastoFieldUpdateOperationsInput | $Enums.CategoriaGasto
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableStringFieldUpdateOperationsInput | string | null
    comprobante?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GastoOperativoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    concepto?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monedaId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: EnumCategoriaGastoFieldUpdateOperationsInput | $Enums.CategoriaGasto
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableStringFieldUpdateOperationsInput | string | null
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
    comprobante?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AsignacionGastoProyectoCreateInput = {
    porcentaje: Decimal | DecimalJsLike | number | string
    montoAsignado: Decimal | DecimalJsLike | number | string
    justificacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    gasto: GastoOperativoCreateNestedOneWithoutAsignacionesInput
    presupuesto: PresupuestoCreateNestedOneWithoutAsignacionesGastoInput
  }

  export type AsignacionGastoProyectoUncheckedCreateInput = {
    id?: number
    gastoId: number
    presupuestoId: number
    porcentaje: Decimal | DecimalJsLike | number | string
    montoAsignado: Decimal | DecimalJsLike | number | string
    justificacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AsignacionGastoProyectoUpdateInput = {
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    montoAsignado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    justificacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    gasto?: GastoOperativoUpdateOneRequiredWithoutAsignacionesNestedInput
    presupuesto?: PresupuestoUpdateOneRequiredWithoutAsignacionesGastoNestedInput
  }

  export type AsignacionGastoProyectoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    gastoId?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    montoAsignado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    justificacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AsignacionGastoProyectoCreateManyInput = {
    id?: number
    gastoId: number
    presupuestoId: number
    porcentaje: Decimal | DecimalJsLike | number | string
    montoAsignado: Decimal | DecimalJsLike | number | string
    justificacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AsignacionGastoProyectoUpdateManyMutationInput = {
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    montoAsignado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    justificacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AsignacionGastoProyectoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    gastoId?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    montoAsignado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    justificacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialPrecioCreateInput = {
    precio: Decimal | DecimalJsLike | number | string
    fechaDesde: Date | string
    fechaHasta?: Date | string | null
    motivoCambio?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    moneda: MonedaCreateNestedOneWithoutHistorialPreciosInput
    producto?: ProductoCreateNestedOneWithoutHistorialPreciosInput
    servicio?: ServicioCreateNestedOneWithoutHistorialPreciosInput
    usuario?: PersonaCreateNestedOneWithoutHistorialPreciosUsuarioInput
  }

  export type HistorialPrecioUncheckedCreateInput = {
    id?: number
    productoId?: number | null
    servicioId?: number | null
    monedaId: number
    precio: Decimal | DecimalJsLike | number | string
    fechaDesde: Date | string
    fechaHasta?: Date | string | null
    motivoCambio?: string | null
    usuarioId?: number | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HistorialPrecioUpdateInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivoCambio?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    moneda?: MonedaUpdateOneRequiredWithoutHistorialPreciosNestedInput
    producto?: ProductoUpdateOneWithoutHistorialPreciosNestedInput
    servicio?: ServicioUpdateOneWithoutHistorialPreciosNestedInput
    usuario?: PersonaUpdateOneWithoutHistorialPreciosUsuarioNestedInput
  }

  export type HistorialPrecioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    servicioId?: NullableIntFieldUpdateOperationsInput | number | null
    monedaId?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivoCambio?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialPrecioCreateManyInput = {
    id?: number
    productoId?: number | null
    servicioId?: number | null
    monedaId: number
    precio: Decimal | DecimalJsLike | number | string
    fechaDesde: Date | string
    fechaHasta?: Date | string | null
    motivoCambio?: string | null
    usuarioId?: number | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HistorialPrecioUpdateManyMutationInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivoCambio?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialPrecioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    servicioId?: NullableIntFieldUpdateOperationsInput | number | null
    monedaId?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivoCambio?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagoAdminCreateInput = {
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admin: PersonaCreateNestedOneWithoutPagosAdminInput
    presupuesto: PresupuestoCreateNestedOneWithoutPagosAdminInput
    moneda?: MonedaCreateNestedOneWithoutPagosAdminInput
  }

  export type PagoAdminUncheckedCreateInput = {
    id?: number
    adminId: number
    presupuestoId: number
    monto: Decimal | DecimalJsLike | number | string
    monedaId?: number
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PagoAdminUpdateInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admin?: PersonaUpdateOneRequiredWithoutPagosAdminNestedInput
    presupuesto?: PresupuestoUpdateOneRequiredWithoutPagosAdminNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutPagosAdminNestedInput
  }

  export type PagoAdminUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monedaId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagoAdminCreateManyInput = {
    id?: number
    adminId: number
    presupuestoId: number
    monto: Decimal | DecimalJsLike | number | string
    monedaId?: number
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PagoAdminUpdateManyMutationInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagoAdminUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monedaId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type EnumCodigoMonedaFilter<$PrismaModel = never> = {
    equals?: $Enums.CodigoMoneda | EnumCodigoMonedaFieldRefInput<$PrismaModel>
    in?: $Enums.CodigoMoneda[] | ListEnumCodigoMonedaFieldRefInput<$PrismaModel>
    notIn?: $Enums.CodigoMoneda[] | ListEnumCodigoMonedaFieldRefInput<$PrismaModel>
    not?: NestedEnumCodigoMonedaFilter<$PrismaModel> | $Enums.CodigoMoneda
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type FacturaListRelationFilter = {
    every?: FacturaWhereInput
    some?: FacturaWhereInput
    none?: FacturaWhereInput
  }

  export type GastoOperativoListRelationFilter = {
    every?: GastoOperativoWhereInput
    some?: GastoOperativoWhereInput
    none?: GastoOperativoWhereInput
  }

  export type HistorialPrecioListRelationFilter = {
    every?: HistorialPrecioWhereInput
    some?: HistorialPrecioWhereInput
    none?: HistorialPrecioWhereInput
  }

  export type PresupuestoListRelationFilter = {
    every?: PresupuestoWhereInput
    some?: PresupuestoWhereInput
    none?: PresupuestoWhereInput
  }

  export type ProductoListRelationFilter = {
    every?: ProductoWhereInput
    some?: ProductoWhereInput
    none?: ProductoWhereInput
  }

  export type ServicioListRelationFilter = {
    every?: ServicioWhereInput
    some?: ServicioWhereInput
    none?: ServicioWhereInput
  }

  export type ReciboListRelationFilter = {
    every?: ReciboWhereInput
    some?: ReciboWhereInput
    none?: ReciboWhereInput
  }

  export type PagoAdminListRelationFilter = {
    every?: PagoAdminWhereInput
    some?: PagoAdminWhereInput
    none?: PagoAdminWhereInput
  }

  export type CobroClienteListRelationFilter = {
    every?: CobroClienteWhereInput
    some?: CobroClienteWhereInput
    none?: CobroClienteWhereInput
  }

  export type TipoCambioListRelationFilter = {
    every?: TipoCambioWhereInput
    some?: TipoCambioWhereInput
    none?: TipoCambioWhereInput
  }

  export type FacturaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type GastoOperativoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type HistorialPrecioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PresupuestoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ServicioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReciboOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PagoAdminOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CobroClienteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TipoCambioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MonedaCountOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    nombre?: SortOrder
    simbolo?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MonedaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type MonedaMaxOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    nombre?: SortOrder
    simbolo?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MonedaMinOrderByAggregateInput = {
    id?: SortOrder
    codigo?: SortOrder
    nombre?: SortOrder
    simbolo?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MonedaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type EnumCodigoMonedaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CodigoMoneda | EnumCodigoMonedaFieldRefInput<$PrismaModel>
    in?: $Enums.CodigoMoneda[] | ListEnumCodigoMonedaFieldRefInput<$PrismaModel>
    notIn?: $Enums.CodigoMoneda[] | ListEnumCodigoMonedaFieldRefInput<$PrismaModel>
    not?: NestedEnumCodigoMonedaWithAggregatesFilter<$PrismaModel> | $Enums.CodigoMoneda
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCodigoMonedaFilter<$PrismaModel>
    _max?: NestedEnumCodigoMonedaFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type PresupuestoScalarRelationFilter = {
    is?: PresupuestoWhereInput
    isNot?: PresupuestoWhereInput
  }

  export type MonedaScalarRelationFilter = {
    is?: MonedaWhereInput
    isNot?: MonedaWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CobroClienteCountOrderByAggregateInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
    fecha?: SortOrder
    metodoPago?: SortOrder
    concepto?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CobroClienteAvgOrderByAggregateInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
  }

  export type CobroClienteMaxOrderByAggregateInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
    fecha?: SortOrder
    metodoPago?: SortOrder
    concepto?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CobroClienteMinOrderByAggregateInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
    fecha?: SortOrder
    metodoPago?: SortOrder
    concepto?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CobroClienteSumOrderByAggregateInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumTipoCotizacionFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCotizacion | EnumTipoCotizacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCotizacion[] | ListEnumTipoCotizacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCotizacion[] | ListEnumTipoCotizacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoCotizacionFilter<$PrismaModel> | $Enums.TipoCotizacion
  }

  export type TipoCambioMonedaDesdeIdMonedaHaciaIdTipoFechaCompoundUniqueInput = {
    monedaDesdeId: number
    monedaHaciaId: number
    tipo: $Enums.TipoCotizacion
    fecha: Date | string
  }

  export type TipoCambioCountOrderByAggregateInput = {
    id?: SortOrder
    monedaDesdeId?: SortOrder
    monedaHaciaId?: SortOrder
    valor?: SortOrder
    fecha?: SortOrder
    tipo?: SortOrder
    fuente?: SortOrder
    createdAt?: SortOrder
  }

  export type TipoCambioAvgOrderByAggregateInput = {
    id?: SortOrder
    monedaDesdeId?: SortOrder
    monedaHaciaId?: SortOrder
    valor?: SortOrder
  }

  export type TipoCambioMaxOrderByAggregateInput = {
    id?: SortOrder
    monedaDesdeId?: SortOrder
    monedaHaciaId?: SortOrder
    valor?: SortOrder
    fecha?: SortOrder
    tipo?: SortOrder
    fuente?: SortOrder
    createdAt?: SortOrder
  }

  export type TipoCambioMinOrderByAggregateInput = {
    id?: SortOrder
    monedaDesdeId?: SortOrder
    monedaHaciaId?: SortOrder
    valor?: SortOrder
    fecha?: SortOrder
    tipo?: SortOrder
    fuente?: SortOrder
    createdAt?: SortOrder
  }

  export type TipoCambioSumOrderByAggregateInput = {
    id?: SortOrder
    monedaDesdeId?: SortOrder
    monedaHaciaId?: SortOrder
    valor?: SortOrder
  }

  export type EnumTipoCotizacionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCotizacion | EnumTipoCotizacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCotizacion[] | ListEnumTipoCotizacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCotizacion[] | ListEnumTipoCotizacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoCotizacionWithAggregatesFilter<$PrismaModel> | $Enums.TipoCotizacion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoCotizacionFilter<$PrismaModel>
    _max?: NestedEnumTipoCotizacionFilter<$PrismaModel>
  }

  export type EnumTipoPersonaFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPersona | EnumTipoPersonaFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPersona[] | ListEnumTipoPersonaFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPersona[] | ListEnumTipoPersonaFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPersonaFilter<$PrismaModel> | $Enums.TipoPersona
  }

  export type EnumRolUsuarioNullableListFilter<$PrismaModel = never> = {
    equals?: $Enums.RolUsuario[] | ListEnumRolUsuarioFieldRefInput<$PrismaModel> | null
    has?: $Enums.RolUsuario | EnumRolUsuarioFieldRefInput<$PrismaModel> | null
    hasEvery?: $Enums.RolUsuario[] | ListEnumRolUsuarioFieldRefInput<$PrismaModel>
    hasSome?: $Enums.RolUsuario[] | ListEnumRolUsuarioFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type EmpresaListRelationFilter = {
    every?: EmpresaWhereInput
    some?: EmpresaWhereInput
    none?: EmpresaWhereInput
  }

  export type EmpresaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PersonaCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo?: SortOrder
    telefono?: SortOrder
    cvu?: SortOrder
    roles?: SortOrder
    password?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    activo?: SortOrder
    esUsuario?: SortOrder
  }

  export type PersonaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PersonaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo?: SortOrder
    telefono?: SortOrder
    cvu?: SortOrder
    password?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    activo?: SortOrder
    esUsuario?: SortOrder
  }

  export type PersonaMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo?: SortOrder
    telefono?: SortOrder
    cvu?: SortOrder
    password?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    activo?: SortOrder
    esUsuario?: SortOrder
  }

  export type PersonaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumTipoPersonaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPersona | EnumTipoPersonaFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPersona[] | ListEnumTipoPersonaFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPersona[] | ListEnumTipoPersonaFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPersonaWithAggregatesFilter<$PrismaModel> | $Enums.TipoPersona
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoPersonaFilter<$PrismaModel>
    _max?: NestedEnumTipoPersonaFilter<$PrismaModel>
  }

  export type PersonaScalarRelationFilter = {
    is?: PersonaWhereInput
    isNot?: PersonaWhereInput
  }

  export type EmpresaCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    razonSocial?: SortOrder
    cuit?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    direccion?: SortOrder
    clienteId?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EmpresaAvgOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
  }

  export type EmpresaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    razonSocial?: SortOrder
    cuit?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    direccion?: SortOrder
    clienteId?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EmpresaMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    razonSocial?: SortOrder
    cuit?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    direccion?: SortOrder
    clienteId?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EmpresaSumOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
  }

  export type ItemListRelationFilter = {
    every?: ItemWhereInput
    some?: ItemWhereInput
    none?: ItemWhereInput
  }

  export type ItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    costoProveedor?: SortOrder
    margenAgencia?: SortOrder
    precio?: SortOrder
    proveedorId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
  }

  export type ProductoAvgOrderByAggregateInput = {
    id?: SortOrder
    costoProveedor?: SortOrder
    margenAgencia?: SortOrder
    precio?: SortOrder
    proveedorId?: SortOrder
    monedaId?: SortOrder
  }

  export type ProductoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    costoProveedor?: SortOrder
    margenAgencia?: SortOrder
    precio?: SortOrder
    proveedorId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
  }

  export type ProductoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    costoProveedor?: SortOrder
    margenAgencia?: SortOrder
    precio?: SortOrder
    proveedorId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
  }

  export type ProductoSumOrderByAggregateInput = {
    id?: SortOrder
    costoProveedor?: SortOrder
    margenAgencia?: SortOrder
    precio?: SortOrder
    proveedorId?: SortOrder
    monedaId?: SortOrder
  }

  export type ServicioCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    costoProveedor?: SortOrder
    margenAgencia?: SortOrder
    precio?: SortOrder
    proveedorId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
  }

  export type ServicioAvgOrderByAggregateInput = {
    id?: SortOrder
    costoProveedor?: SortOrder
    margenAgencia?: SortOrder
    precio?: SortOrder
    proveedorId?: SortOrder
    monedaId?: SortOrder
  }

  export type ServicioMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    costoProveedor?: SortOrder
    margenAgencia?: SortOrder
    precio?: SortOrder
    proveedorId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
  }

  export type ServicioMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    costoProveedor?: SortOrder
    margenAgencia?: SortOrder
    precio?: SortOrder
    proveedorId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
  }

  export type ServicioSumOrderByAggregateInput = {
    id?: SortOrder
    costoProveedor?: SortOrder
    margenAgencia?: SortOrder
    precio?: SortOrder
    proveedorId?: SortOrder
    monedaId?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EnumEstadoPresupuestoFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPresupuesto | EnumEstadoPresupuestoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPresupuesto[] | ListEnumEstadoPresupuestoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPresupuesto[] | ListEnumEstadoPresupuestoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPresupuestoFilter<$PrismaModel> | $Enums.EstadoPresupuesto
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EnumFrecuenciaContratoNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.FrecuenciaContrato | EnumFrecuenciaContratoFieldRefInput<$PrismaModel> | null
    in?: $Enums.FrecuenciaContrato[] | ListEnumFrecuenciaContratoFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FrecuenciaContrato[] | ListEnumFrecuenciaContratoFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFrecuenciaContratoNullableFilter<$PrismaModel> | $Enums.FrecuenciaContrato | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type AsignacionGastoProyectoListRelationFilter = {
    every?: AsignacionGastoProyectoWhereInput
    some?: AsignacionGastoProyectoWhereInput
    none?: AsignacionGastoProyectoWhereInput
  }

  export type EmpresaNullableScalarRelationFilter = {
    is?: EmpresaWhereInput | null
    isNot?: EmpresaWhereInput | null
  }

  export type PresupuestoImpuestoListRelationFilter = {
    every?: PresupuestoImpuestoWhereInput
    some?: PresupuestoImpuestoWhereInput
    none?: PresupuestoImpuestoWhereInput
  }

  export type AsignacionGastoProyectoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PresupuestoImpuestoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PresupuestoCountOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    empresaId?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    total?: SortOrder
    estado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
    tipoCambioFecha?: SortOrder
    periodoInicio?: SortOrder
    periodoFin?: SortOrder
    esRecurrente?: SortOrder
    frecuencia?: SortOrder
    renovacionAutomatica?: SortOrder
    precioPeriodo?: SortOrder
  }

  export type PresupuestoAvgOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    empresaId?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    total?: SortOrder
    monedaId?: SortOrder
    precioPeriodo?: SortOrder
  }

  export type PresupuestoMaxOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    empresaId?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    total?: SortOrder
    estado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
    tipoCambioFecha?: SortOrder
    periodoInicio?: SortOrder
    periodoFin?: SortOrder
    esRecurrente?: SortOrder
    frecuencia?: SortOrder
    renovacionAutomatica?: SortOrder
    precioPeriodo?: SortOrder
  }

  export type PresupuestoMinOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    empresaId?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    total?: SortOrder
    estado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
    tipoCambioFecha?: SortOrder
    periodoInicio?: SortOrder
    periodoFin?: SortOrder
    esRecurrente?: SortOrder
    frecuencia?: SortOrder
    renovacionAutomatica?: SortOrder
    precioPeriodo?: SortOrder
  }

  export type PresupuestoSumOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    empresaId?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    total?: SortOrder
    monedaId?: SortOrder
    precioPeriodo?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumEstadoPresupuestoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPresupuesto | EnumEstadoPresupuestoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPresupuesto[] | ListEnumEstadoPresupuestoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPresupuesto[] | ListEnumEstadoPresupuestoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPresupuestoWithAggregatesFilter<$PrismaModel> | $Enums.EstadoPresupuesto
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoPresupuestoFilter<$PrismaModel>
    _max?: NestedEnumEstadoPresupuestoFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumFrecuenciaContratoNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FrecuenciaContrato | EnumFrecuenciaContratoFieldRefInput<$PrismaModel> | null
    in?: $Enums.FrecuenciaContrato[] | ListEnumFrecuenciaContratoFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FrecuenciaContrato[] | ListEnumFrecuenciaContratoFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFrecuenciaContratoNullableWithAggregatesFilter<$PrismaModel> | $Enums.FrecuenciaContrato | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumFrecuenciaContratoNullableFilter<$PrismaModel>
    _max?: NestedEnumFrecuenciaContratoNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type ProductoNullableScalarRelationFilter = {
    is?: ProductoWhereInput | null
    isNot?: ProductoWhereInput | null
  }

  export type ServicioNullableScalarRelationFilter = {
    is?: ServicioWhereInput | null
    isNot?: ServicioWhereInput | null
  }

  export type ItemCountOrderByAggregateInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    productoId?: SortOrder
    servicioId?: SortOrder
    cantidad?: SortOrder
    precioUnitario?: SortOrder
  }

  export type ItemAvgOrderByAggregateInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    productoId?: SortOrder
    servicioId?: SortOrder
    cantidad?: SortOrder
    precioUnitario?: SortOrder
  }

  export type ItemMaxOrderByAggregateInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    productoId?: SortOrder
    servicioId?: SortOrder
    cantidad?: SortOrder
    precioUnitario?: SortOrder
  }

  export type ItemMinOrderByAggregateInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    productoId?: SortOrder
    servicioId?: SortOrder
    cantidad?: SortOrder
    precioUnitario?: SortOrder
  }

  export type ItemSumOrderByAggregateInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    productoId?: SortOrder
    servicioId?: SortOrder
    cantidad?: SortOrder
    precioUnitario?: SortOrder
  }

  export type EnumEstadoFacturaFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoFactura | EnumEstadoFacturaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoFactura[] | ListEnumEstadoFacturaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoFactura[] | ListEnumEstadoFacturaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoFacturaFilter<$PrismaModel> | $Enums.EstadoFactura
  }

  export type ImpuestoScalarRelationFilter = {
    is?: ImpuestoWhereInput
    isNot?: ImpuestoWhereInput
  }

  export type FacturaCountOrderByAggregateInput = {
    id?: SortOrder
    numero?: SortOrder
    presupuestoId?: SortOrder
    empresaId?: SortOrder
    fecha?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    total?: SortOrder
    estado?: SortOrder
    impuestoAplicadoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
    tipoCambioFecha?: SortOrder
  }

  export type FacturaAvgOrderByAggregateInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    empresaId?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    total?: SortOrder
    impuestoAplicadoId?: SortOrder
    monedaId?: SortOrder
  }

  export type FacturaMaxOrderByAggregateInput = {
    id?: SortOrder
    numero?: SortOrder
    presupuestoId?: SortOrder
    empresaId?: SortOrder
    fecha?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    total?: SortOrder
    estado?: SortOrder
    impuestoAplicadoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
    tipoCambioFecha?: SortOrder
  }

  export type FacturaMinOrderByAggregateInput = {
    id?: SortOrder
    numero?: SortOrder
    presupuestoId?: SortOrder
    empresaId?: SortOrder
    fecha?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    total?: SortOrder
    estado?: SortOrder
    impuestoAplicadoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
    tipoCambioFecha?: SortOrder
  }

  export type FacturaSumOrderByAggregateInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    empresaId?: SortOrder
    subtotal?: SortOrder
    impuestos?: SortOrder
    total?: SortOrder
    impuestoAplicadoId?: SortOrder
    monedaId?: SortOrder
  }

  export type EnumEstadoFacturaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoFactura | EnumEstadoFacturaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoFactura[] | ListEnumEstadoFacturaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoFactura[] | ListEnumEstadoFacturaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoFacturaWithAggregatesFilter<$PrismaModel> | $Enums.EstadoFactura
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoFacturaFilter<$PrismaModel>
    _max?: NestedEnumEstadoFacturaFilter<$PrismaModel>
  }

  export type EnumReciboTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.ReciboTipo | EnumReciboTipoFieldRefInput<$PrismaModel>
    in?: $Enums.ReciboTipo[] | ListEnumReciboTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReciboTipo[] | ListEnumReciboTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumReciboTipoFilter<$PrismaModel> | $Enums.ReciboTipo
  }

  export type PresupuestoNullableScalarRelationFilter = {
    is?: PresupuestoWhereInput | null
    isNot?: PresupuestoWhereInput | null
  }

  export type ReciboCountOrderByAggregateInput = {
    id?: SortOrder
    personaId?: SortOrder
    presupuestoId?: SortOrder
    concepto?: SortOrder
    monto?: SortOrder
    fecha?: SortOrder
    metodoPago?: SortOrder
    tipo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
  }

  export type ReciboAvgOrderByAggregateInput = {
    id?: SortOrder
    personaId?: SortOrder
    presupuestoId?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
  }

  export type ReciboMaxOrderByAggregateInput = {
    id?: SortOrder
    personaId?: SortOrder
    presupuestoId?: SortOrder
    concepto?: SortOrder
    monto?: SortOrder
    fecha?: SortOrder
    metodoPago?: SortOrder
    tipo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
  }

  export type ReciboMinOrderByAggregateInput = {
    id?: SortOrder
    personaId?: SortOrder
    presupuestoId?: SortOrder
    concepto?: SortOrder
    monto?: SortOrder
    fecha?: SortOrder
    metodoPago?: SortOrder
    tipo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    monedaId?: SortOrder
  }

  export type ReciboSumOrderByAggregateInput = {
    id?: SortOrder
    personaId?: SortOrder
    presupuestoId?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
  }

  export type EnumReciboTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReciboTipo | EnumReciboTipoFieldRefInput<$PrismaModel>
    in?: $Enums.ReciboTipo[] | ListEnumReciboTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReciboTipo[] | ListEnumReciboTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumReciboTipoWithAggregatesFilter<$PrismaModel> | $Enums.ReciboTipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReciboTipoFilter<$PrismaModel>
    _max?: NestedEnumReciboTipoFilter<$PrismaModel>
  }

  export type ImpuestoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    porcentaje?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    descripcion?: SortOrder
  }

  export type ImpuestoAvgOrderByAggregateInput = {
    id?: SortOrder
    porcentaje?: SortOrder
  }

  export type ImpuestoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    porcentaje?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    descripcion?: SortOrder
  }

  export type ImpuestoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    porcentaje?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    descripcion?: SortOrder
  }

  export type ImpuestoSumOrderByAggregateInput = {
    id?: SortOrder
    porcentaje?: SortOrder
  }

  export type PresupuestoImpuestoPresupuestoIdImpuestoIdCompoundUniqueInput = {
    presupuestoId: number
    impuestoId: number
  }

  export type PresupuestoImpuestoCountOrderByAggregateInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    impuestoId?: SortOrder
    monto?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PresupuestoImpuestoAvgOrderByAggregateInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    impuestoId?: SortOrder
    monto?: SortOrder
  }

  export type PresupuestoImpuestoMaxOrderByAggregateInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    impuestoId?: SortOrder
    monto?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PresupuestoImpuestoMinOrderByAggregateInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    impuestoId?: SortOrder
    monto?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PresupuestoImpuestoSumOrderByAggregateInput = {
    id?: SortOrder
    presupuestoId?: SortOrder
    impuestoId?: SortOrder
    monto?: SortOrder
  }

  export type EnumCategoriaGastoFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriaGasto | EnumCategoriaGastoFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriaGasto[] | ListEnumCategoriaGastoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriaGasto[] | ListEnumCategoriaGastoFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriaGastoFilter<$PrismaModel> | $Enums.CategoriaGasto
  }

  export type PersonaNullableScalarRelationFilter = {
    is?: PersonaWhereInput | null
    isNot?: PersonaWhereInput | null
  }

  export type GastoOperativoCountOrderByAggregateInput = {
    id?: SortOrder
    concepto?: SortOrder
    descripcion?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
    fecha?: SortOrder
    categoria?: SortOrder
    esRecurrente?: SortOrder
    frecuencia?: SortOrder
    proveedorId?: SortOrder
    comprobante?: SortOrder
    observaciones?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GastoOperativoAvgOrderByAggregateInput = {
    id?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
    proveedorId?: SortOrder
  }

  export type GastoOperativoMaxOrderByAggregateInput = {
    id?: SortOrder
    concepto?: SortOrder
    descripcion?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
    fecha?: SortOrder
    categoria?: SortOrder
    esRecurrente?: SortOrder
    frecuencia?: SortOrder
    proveedorId?: SortOrder
    comprobante?: SortOrder
    observaciones?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GastoOperativoMinOrderByAggregateInput = {
    id?: SortOrder
    concepto?: SortOrder
    descripcion?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
    fecha?: SortOrder
    categoria?: SortOrder
    esRecurrente?: SortOrder
    frecuencia?: SortOrder
    proveedorId?: SortOrder
    comprobante?: SortOrder
    observaciones?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GastoOperativoSumOrderByAggregateInput = {
    id?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
    proveedorId?: SortOrder
  }

  export type EnumCategoriaGastoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriaGasto | EnumCategoriaGastoFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriaGasto[] | ListEnumCategoriaGastoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriaGasto[] | ListEnumCategoriaGastoFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriaGastoWithAggregatesFilter<$PrismaModel> | $Enums.CategoriaGasto
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCategoriaGastoFilter<$PrismaModel>
    _max?: NestedEnumCategoriaGastoFilter<$PrismaModel>
  }

  export type GastoOperativoScalarRelationFilter = {
    is?: GastoOperativoWhereInput
    isNot?: GastoOperativoWhereInput
  }

  export type AsignacionGastoProyectoGastoIdPresupuestoIdCompoundUniqueInput = {
    gastoId: number
    presupuestoId: number
  }

  export type AsignacionGastoProyectoCountOrderByAggregateInput = {
    id?: SortOrder
    gastoId?: SortOrder
    presupuestoId?: SortOrder
    porcentaje?: SortOrder
    montoAsignado?: SortOrder
    justificacion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AsignacionGastoProyectoAvgOrderByAggregateInput = {
    id?: SortOrder
    gastoId?: SortOrder
    presupuestoId?: SortOrder
    porcentaje?: SortOrder
    montoAsignado?: SortOrder
  }

  export type AsignacionGastoProyectoMaxOrderByAggregateInput = {
    id?: SortOrder
    gastoId?: SortOrder
    presupuestoId?: SortOrder
    porcentaje?: SortOrder
    montoAsignado?: SortOrder
    justificacion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AsignacionGastoProyectoMinOrderByAggregateInput = {
    id?: SortOrder
    gastoId?: SortOrder
    presupuestoId?: SortOrder
    porcentaje?: SortOrder
    montoAsignado?: SortOrder
    justificacion?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AsignacionGastoProyectoSumOrderByAggregateInput = {
    id?: SortOrder
    gastoId?: SortOrder
    presupuestoId?: SortOrder
    porcentaje?: SortOrder
    montoAsignado?: SortOrder
  }

  export type HistorialPrecioCountOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    servicioId?: SortOrder
    monedaId?: SortOrder
    precio?: SortOrder
    fechaDesde?: SortOrder
    fechaHasta?: SortOrder
    motivoCambio?: SortOrder
    usuarioId?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HistorialPrecioAvgOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    servicioId?: SortOrder
    monedaId?: SortOrder
    precio?: SortOrder
    usuarioId?: SortOrder
  }

  export type HistorialPrecioMaxOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    servicioId?: SortOrder
    monedaId?: SortOrder
    precio?: SortOrder
    fechaDesde?: SortOrder
    fechaHasta?: SortOrder
    motivoCambio?: SortOrder
    usuarioId?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HistorialPrecioMinOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    servicioId?: SortOrder
    monedaId?: SortOrder
    precio?: SortOrder
    fechaDesde?: SortOrder
    fechaHasta?: SortOrder
    motivoCambio?: SortOrder
    usuarioId?: SortOrder
    activo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HistorialPrecioSumOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    servicioId?: SortOrder
    monedaId?: SortOrder
    precio?: SortOrder
    usuarioId?: SortOrder
  }

  export type PagoAdminCountOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    presupuestoId?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
    fecha?: SortOrder
    metodoPago?: SortOrder
    concepto?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PagoAdminAvgOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    presupuestoId?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
  }

  export type PagoAdminMaxOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    presupuestoId?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
    fecha?: SortOrder
    metodoPago?: SortOrder
    concepto?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PagoAdminMinOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    presupuestoId?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
    fecha?: SortOrder
    metodoPago?: SortOrder
    concepto?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PagoAdminSumOrderByAggregateInput = {
    id?: SortOrder
    adminId?: SortOrder
    presupuestoId?: SortOrder
    monto?: SortOrder
    monedaId?: SortOrder
  }

  export type FacturaCreateNestedManyWithoutMonedaInput = {
    create?: XOR<FacturaCreateWithoutMonedaInput, FacturaUncheckedCreateWithoutMonedaInput> | FacturaCreateWithoutMonedaInput[] | FacturaUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: FacturaCreateOrConnectWithoutMonedaInput | FacturaCreateOrConnectWithoutMonedaInput[]
    createMany?: FacturaCreateManyMonedaInputEnvelope
    connect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
  }

  export type GastoOperativoCreateNestedManyWithoutMonedaInput = {
    create?: XOR<GastoOperativoCreateWithoutMonedaInput, GastoOperativoUncheckedCreateWithoutMonedaInput> | GastoOperativoCreateWithoutMonedaInput[] | GastoOperativoUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: GastoOperativoCreateOrConnectWithoutMonedaInput | GastoOperativoCreateOrConnectWithoutMonedaInput[]
    createMany?: GastoOperativoCreateManyMonedaInputEnvelope
    connect?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
  }

  export type HistorialPrecioCreateNestedManyWithoutMonedaInput = {
    create?: XOR<HistorialPrecioCreateWithoutMonedaInput, HistorialPrecioUncheckedCreateWithoutMonedaInput> | HistorialPrecioCreateWithoutMonedaInput[] | HistorialPrecioUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutMonedaInput | HistorialPrecioCreateOrConnectWithoutMonedaInput[]
    createMany?: HistorialPrecioCreateManyMonedaInputEnvelope
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
  }

  export type PresupuestoCreateNestedManyWithoutMonedaInput = {
    create?: XOR<PresupuestoCreateWithoutMonedaInput, PresupuestoUncheckedCreateWithoutMonedaInput> | PresupuestoCreateWithoutMonedaInput[] | PresupuestoUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: PresupuestoCreateOrConnectWithoutMonedaInput | PresupuestoCreateOrConnectWithoutMonedaInput[]
    createMany?: PresupuestoCreateManyMonedaInputEnvelope
    connect?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
  }

  export type ProductoCreateNestedManyWithoutMonedaInput = {
    create?: XOR<ProductoCreateWithoutMonedaInput, ProductoUncheckedCreateWithoutMonedaInput> | ProductoCreateWithoutMonedaInput[] | ProductoUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutMonedaInput | ProductoCreateOrConnectWithoutMonedaInput[]
    createMany?: ProductoCreateManyMonedaInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type ServicioCreateNestedManyWithoutMonedaInput = {
    create?: XOR<ServicioCreateWithoutMonedaInput, ServicioUncheckedCreateWithoutMonedaInput> | ServicioCreateWithoutMonedaInput[] | ServicioUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: ServicioCreateOrConnectWithoutMonedaInput | ServicioCreateOrConnectWithoutMonedaInput[]
    createMany?: ServicioCreateManyMonedaInputEnvelope
    connect?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
  }

  export type ReciboCreateNestedManyWithoutMonedaInput = {
    create?: XOR<ReciboCreateWithoutMonedaInput, ReciboUncheckedCreateWithoutMonedaInput> | ReciboCreateWithoutMonedaInput[] | ReciboUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: ReciboCreateOrConnectWithoutMonedaInput | ReciboCreateOrConnectWithoutMonedaInput[]
    createMany?: ReciboCreateManyMonedaInputEnvelope
    connect?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
  }

  export type PagoAdminCreateNestedManyWithoutMonedaInput = {
    create?: XOR<PagoAdminCreateWithoutMonedaInput, PagoAdminUncheckedCreateWithoutMonedaInput> | PagoAdminCreateWithoutMonedaInput[] | PagoAdminUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: PagoAdminCreateOrConnectWithoutMonedaInput | PagoAdminCreateOrConnectWithoutMonedaInput[]
    createMany?: PagoAdminCreateManyMonedaInputEnvelope
    connect?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
  }

  export type CobroClienteCreateNestedManyWithoutMonedaInput = {
    create?: XOR<CobroClienteCreateWithoutMonedaInput, CobroClienteUncheckedCreateWithoutMonedaInput> | CobroClienteCreateWithoutMonedaInput[] | CobroClienteUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: CobroClienteCreateOrConnectWithoutMonedaInput | CobroClienteCreateOrConnectWithoutMonedaInput[]
    createMany?: CobroClienteCreateManyMonedaInputEnvelope
    connect?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
  }

  export type TipoCambioCreateNestedManyWithoutMonedaDesdeInput = {
    create?: XOR<TipoCambioCreateWithoutMonedaDesdeInput, TipoCambioUncheckedCreateWithoutMonedaDesdeInput> | TipoCambioCreateWithoutMonedaDesdeInput[] | TipoCambioUncheckedCreateWithoutMonedaDesdeInput[]
    connectOrCreate?: TipoCambioCreateOrConnectWithoutMonedaDesdeInput | TipoCambioCreateOrConnectWithoutMonedaDesdeInput[]
    createMany?: TipoCambioCreateManyMonedaDesdeInputEnvelope
    connect?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
  }

  export type TipoCambioCreateNestedManyWithoutMonedaHaciaInput = {
    create?: XOR<TipoCambioCreateWithoutMonedaHaciaInput, TipoCambioUncheckedCreateWithoutMonedaHaciaInput> | TipoCambioCreateWithoutMonedaHaciaInput[] | TipoCambioUncheckedCreateWithoutMonedaHaciaInput[]
    connectOrCreate?: TipoCambioCreateOrConnectWithoutMonedaHaciaInput | TipoCambioCreateOrConnectWithoutMonedaHaciaInput[]
    createMany?: TipoCambioCreateManyMonedaHaciaInputEnvelope
    connect?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
  }

  export type FacturaUncheckedCreateNestedManyWithoutMonedaInput = {
    create?: XOR<FacturaCreateWithoutMonedaInput, FacturaUncheckedCreateWithoutMonedaInput> | FacturaCreateWithoutMonedaInput[] | FacturaUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: FacturaCreateOrConnectWithoutMonedaInput | FacturaCreateOrConnectWithoutMonedaInput[]
    createMany?: FacturaCreateManyMonedaInputEnvelope
    connect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
  }

  export type GastoOperativoUncheckedCreateNestedManyWithoutMonedaInput = {
    create?: XOR<GastoOperativoCreateWithoutMonedaInput, GastoOperativoUncheckedCreateWithoutMonedaInput> | GastoOperativoCreateWithoutMonedaInput[] | GastoOperativoUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: GastoOperativoCreateOrConnectWithoutMonedaInput | GastoOperativoCreateOrConnectWithoutMonedaInput[]
    createMany?: GastoOperativoCreateManyMonedaInputEnvelope
    connect?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
  }

  export type HistorialPrecioUncheckedCreateNestedManyWithoutMonedaInput = {
    create?: XOR<HistorialPrecioCreateWithoutMonedaInput, HistorialPrecioUncheckedCreateWithoutMonedaInput> | HistorialPrecioCreateWithoutMonedaInput[] | HistorialPrecioUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutMonedaInput | HistorialPrecioCreateOrConnectWithoutMonedaInput[]
    createMany?: HistorialPrecioCreateManyMonedaInputEnvelope
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
  }

  export type PresupuestoUncheckedCreateNestedManyWithoutMonedaInput = {
    create?: XOR<PresupuestoCreateWithoutMonedaInput, PresupuestoUncheckedCreateWithoutMonedaInput> | PresupuestoCreateWithoutMonedaInput[] | PresupuestoUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: PresupuestoCreateOrConnectWithoutMonedaInput | PresupuestoCreateOrConnectWithoutMonedaInput[]
    createMany?: PresupuestoCreateManyMonedaInputEnvelope
    connect?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
  }

  export type ProductoUncheckedCreateNestedManyWithoutMonedaInput = {
    create?: XOR<ProductoCreateWithoutMonedaInput, ProductoUncheckedCreateWithoutMonedaInput> | ProductoCreateWithoutMonedaInput[] | ProductoUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutMonedaInput | ProductoCreateOrConnectWithoutMonedaInput[]
    createMany?: ProductoCreateManyMonedaInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type ServicioUncheckedCreateNestedManyWithoutMonedaInput = {
    create?: XOR<ServicioCreateWithoutMonedaInput, ServicioUncheckedCreateWithoutMonedaInput> | ServicioCreateWithoutMonedaInput[] | ServicioUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: ServicioCreateOrConnectWithoutMonedaInput | ServicioCreateOrConnectWithoutMonedaInput[]
    createMany?: ServicioCreateManyMonedaInputEnvelope
    connect?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
  }

  export type ReciboUncheckedCreateNestedManyWithoutMonedaInput = {
    create?: XOR<ReciboCreateWithoutMonedaInput, ReciboUncheckedCreateWithoutMonedaInput> | ReciboCreateWithoutMonedaInput[] | ReciboUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: ReciboCreateOrConnectWithoutMonedaInput | ReciboCreateOrConnectWithoutMonedaInput[]
    createMany?: ReciboCreateManyMonedaInputEnvelope
    connect?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
  }

  export type PagoAdminUncheckedCreateNestedManyWithoutMonedaInput = {
    create?: XOR<PagoAdminCreateWithoutMonedaInput, PagoAdminUncheckedCreateWithoutMonedaInput> | PagoAdminCreateWithoutMonedaInput[] | PagoAdminUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: PagoAdminCreateOrConnectWithoutMonedaInput | PagoAdminCreateOrConnectWithoutMonedaInput[]
    createMany?: PagoAdminCreateManyMonedaInputEnvelope
    connect?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
  }

  export type CobroClienteUncheckedCreateNestedManyWithoutMonedaInput = {
    create?: XOR<CobroClienteCreateWithoutMonedaInput, CobroClienteUncheckedCreateWithoutMonedaInput> | CobroClienteCreateWithoutMonedaInput[] | CobroClienteUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: CobroClienteCreateOrConnectWithoutMonedaInput | CobroClienteCreateOrConnectWithoutMonedaInput[]
    createMany?: CobroClienteCreateManyMonedaInputEnvelope
    connect?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
  }

  export type TipoCambioUncheckedCreateNestedManyWithoutMonedaDesdeInput = {
    create?: XOR<TipoCambioCreateWithoutMonedaDesdeInput, TipoCambioUncheckedCreateWithoutMonedaDesdeInput> | TipoCambioCreateWithoutMonedaDesdeInput[] | TipoCambioUncheckedCreateWithoutMonedaDesdeInput[]
    connectOrCreate?: TipoCambioCreateOrConnectWithoutMonedaDesdeInput | TipoCambioCreateOrConnectWithoutMonedaDesdeInput[]
    createMany?: TipoCambioCreateManyMonedaDesdeInputEnvelope
    connect?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
  }

  export type TipoCambioUncheckedCreateNestedManyWithoutMonedaHaciaInput = {
    create?: XOR<TipoCambioCreateWithoutMonedaHaciaInput, TipoCambioUncheckedCreateWithoutMonedaHaciaInput> | TipoCambioCreateWithoutMonedaHaciaInput[] | TipoCambioUncheckedCreateWithoutMonedaHaciaInput[]
    connectOrCreate?: TipoCambioCreateOrConnectWithoutMonedaHaciaInput | TipoCambioCreateOrConnectWithoutMonedaHaciaInput[]
    createMany?: TipoCambioCreateManyMonedaHaciaInputEnvelope
    connect?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
  }

  export type EnumCodigoMonedaFieldUpdateOperationsInput = {
    set?: $Enums.CodigoMoneda
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type FacturaUpdateManyWithoutMonedaNestedInput = {
    create?: XOR<FacturaCreateWithoutMonedaInput, FacturaUncheckedCreateWithoutMonedaInput> | FacturaCreateWithoutMonedaInput[] | FacturaUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: FacturaCreateOrConnectWithoutMonedaInput | FacturaCreateOrConnectWithoutMonedaInput[]
    upsert?: FacturaUpsertWithWhereUniqueWithoutMonedaInput | FacturaUpsertWithWhereUniqueWithoutMonedaInput[]
    createMany?: FacturaCreateManyMonedaInputEnvelope
    set?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    disconnect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    delete?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    connect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    update?: FacturaUpdateWithWhereUniqueWithoutMonedaInput | FacturaUpdateWithWhereUniqueWithoutMonedaInput[]
    updateMany?: FacturaUpdateManyWithWhereWithoutMonedaInput | FacturaUpdateManyWithWhereWithoutMonedaInput[]
    deleteMany?: FacturaScalarWhereInput | FacturaScalarWhereInput[]
  }

  export type GastoOperativoUpdateManyWithoutMonedaNestedInput = {
    create?: XOR<GastoOperativoCreateWithoutMonedaInput, GastoOperativoUncheckedCreateWithoutMonedaInput> | GastoOperativoCreateWithoutMonedaInput[] | GastoOperativoUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: GastoOperativoCreateOrConnectWithoutMonedaInput | GastoOperativoCreateOrConnectWithoutMonedaInput[]
    upsert?: GastoOperativoUpsertWithWhereUniqueWithoutMonedaInput | GastoOperativoUpsertWithWhereUniqueWithoutMonedaInput[]
    createMany?: GastoOperativoCreateManyMonedaInputEnvelope
    set?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
    disconnect?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
    delete?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
    connect?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
    update?: GastoOperativoUpdateWithWhereUniqueWithoutMonedaInput | GastoOperativoUpdateWithWhereUniqueWithoutMonedaInput[]
    updateMany?: GastoOperativoUpdateManyWithWhereWithoutMonedaInput | GastoOperativoUpdateManyWithWhereWithoutMonedaInput[]
    deleteMany?: GastoOperativoScalarWhereInput | GastoOperativoScalarWhereInput[]
  }

  export type HistorialPrecioUpdateManyWithoutMonedaNestedInput = {
    create?: XOR<HistorialPrecioCreateWithoutMonedaInput, HistorialPrecioUncheckedCreateWithoutMonedaInput> | HistorialPrecioCreateWithoutMonedaInput[] | HistorialPrecioUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutMonedaInput | HistorialPrecioCreateOrConnectWithoutMonedaInput[]
    upsert?: HistorialPrecioUpsertWithWhereUniqueWithoutMonedaInput | HistorialPrecioUpsertWithWhereUniqueWithoutMonedaInput[]
    createMany?: HistorialPrecioCreateManyMonedaInputEnvelope
    set?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    disconnect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    delete?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    update?: HistorialPrecioUpdateWithWhereUniqueWithoutMonedaInput | HistorialPrecioUpdateWithWhereUniqueWithoutMonedaInput[]
    updateMany?: HistorialPrecioUpdateManyWithWhereWithoutMonedaInput | HistorialPrecioUpdateManyWithWhereWithoutMonedaInput[]
    deleteMany?: HistorialPrecioScalarWhereInput | HistorialPrecioScalarWhereInput[]
  }

  export type PresupuestoUpdateManyWithoutMonedaNestedInput = {
    create?: XOR<PresupuestoCreateWithoutMonedaInput, PresupuestoUncheckedCreateWithoutMonedaInput> | PresupuestoCreateWithoutMonedaInput[] | PresupuestoUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: PresupuestoCreateOrConnectWithoutMonedaInput | PresupuestoCreateOrConnectWithoutMonedaInput[]
    upsert?: PresupuestoUpsertWithWhereUniqueWithoutMonedaInput | PresupuestoUpsertWithWhereUniqueWithoutMonedaInput[]
    createMany?: PresupuestoCreateManyMonedaInputEnvelope
    set?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    disconnect?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    delete?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    connect?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    update?: PresupuestoUpdateWithWhereUniqueWithoutMonedaInput | PresupuestoUpdateWithWhereUniqueWithoutMonedaInput[]
    updateMany?: PresupuestoUpdateManyWithWhereWithoutMonedaInput | PresupuestoUpdateManyWithWhereWithoutMonedaInput[]
    deleteMany?: PresupuestoScalarWhereInput | PresupuestoScalarWhereInput[]
  }

  export type ProductoUpdateManyWithoutMonedaNestedInput = {
    create?: XOR<ProductoCreateWithoutMonedaInput, ProductoUncheckedCreateWithoutMonedaInput> | ProductoCreateWithoutMonedaInput[] | ProductoUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutMonedaInput | ProductoCreateOrConnectWithoutMonedaInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutMonedaInput | ProductoUpsertWithWhereUniqueWithoutMonedaInput[]
    createMany?: ProductoCreateManyMonedaInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutMonedaInput | ProductoUpdateWithWhereUniqueWithoutMonedaInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutMonedaInput | ProductoUpdateManyWithWhereWithoutMonedaInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type ServicioUpdateManyWithoutMonedaNestedInput = {
    create?: XOR<ServicioCreateWithoutMonedaInput, ServicioUncheckedCreateWithoutMonedaInput> | ServicioCreateWithoutMonedaInput[] | ServicioUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: ServicioCreateOrConnectWithoutMonedaInput | ServicioCreateOrConnectWithoutMonedaInput[]
    upsert?: ServicioUpsertWithWhereUniqueWithoutMonedaInput | ServicioUpsertWithWhereUniqueWithoutMonedaInput[]
    createMany?: ServicioCreateManyMonedaInputEnvelope
    set?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
    disconnect?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
    delete?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
    connect?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
    update?: ServicioUpdateWithWhereUniqueWithoutMonedaInput | ServicioUpdateWithWhereUniqueWithoutMonedaInput[]
    updateMany?: ServicioUpdateManyWithWhereWithoutMonedaInput | ServicioUpdateManyWithWhereWithoutMonedaInput[]
    deleteMany?: ServicioScalarWhereInput | ServicioScalarWhereInput[]
  }

  export type ReciboUpdateManyWithoutMonedaNestedInput = {
    create?: XOR<ReciboCreateWithoutMonedaInput, ReciboUncheckedCreateWithoutMonedaInput> | ReciboCreateWithoutMonedaInput[] | ReciboUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: ReciboCreateOrConnectWithoutMonedaInput | ReciboCreateOrConnectWithoutMonedaInput[]
    upsert?: ReciboUpsertWithWhereUniqueWithoutMonedaInput | ReciboUpsertWithWhereUniqueWithoutMonedaInput[]
    createMany?: ReciboCreateManyMonedaInputEnvelope
    set?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    disconnect?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    delete?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    connect?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    update?: ReciboUpdateWithWhereUniqueWithoutMonedaInput | ReciboUpdateWithWhereUniqueWithoutMonedaInput[]
    updateMany?: ReciboUpdateManyWithWhereWithoutMonedaInput | ReciboUpdateManyWithWhereWithoutMonedaInput[]
    deleteMany?: ReciboScalarWhereInput | ReciboScalarWhereInput[]
  }

  export type PagoAdminUpdateManyWithoutMonedaNestedInput = {
    create?: XOR<PagoAdminCreateWithoutMonedaInput, PagoAdminUncheckedCreateWithoutMonedaInput> | PagoAdminCreateWithoutMonedaInput[] | PagoAdminUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: PagoAdminCreateOrConnectWithoutMonedaInput | PagoAdminCreateOrConnectWithoutMonedaInput[]
    upsert?: PagoAdminUpsertWithWhereUniqueWithoutMonedaInput | PagoAdminUpsertWithWhereUniqueWithoutMonedaInput[]
    createMany?: PagoAdminCreateManyMonedaInputEnvelope
    set?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    disconnect?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    delete?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    connect?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    update?: PagoAdminUpdateWithWhereUniqueWithoutMonedaInput | PagoAdminUpdateWithWhereUniqueWithoutMonedaInput[]
    updateMany?: PagoAdminUpdateManyWithWhereWithoutMonedaInput | PagoAdminUpdateManyWithWhereWithoutMonedaInput[]
    deleteMany?: PagoAdminScalarWhereInput | PagoAdminScalarWhereInput[]
  }

  export type CobroClienteUpdateManyWithoutMonedaNestedInput = {
    create?: XOR<CobroClienteCreateWithoutMonedaInput, CobroClienteUncheckedCreateWithoutMonedaInput> | CobroClienteCreateWithoutMonedaInput[] | CobroClienteUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: CobroClienteCreateOrConnectWithoutMonedaInput | CobroClienteCreateOrConnectWithoutMonedaInput[]
    upsert?: CobroClienteUpsertWithWhereUniqueWithoutMonedaInput | CobroClienteUpsertWithWhereUniqueWithoutMonedaInput[]
    createMany?: CobroClienteCreateManyMonedaInputEnvelope
    set?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
    disconnect?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
    delete?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
    connect?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
    update?: CobroClienteUpdateWithWhereUniqueWithoutMonedaInput | CobroClienteUpdateWithWhereUniqueWithoutMonedaInput[]
    updateMany?: CobroClienteUpdateManyWithWhereWithoutMonedaInput | CobroClienteUpdateManyWithWhereWithoutMonedaInput[]
    deleteMany?: CobroClienteScalarWhereInput | CobroClienteScalarWhereInput[]
  }

  export type TipoCambioUpdateManyWithoutMonedaDesdeNestedInput = {
    create?: XOR<TipoCambioCreateWithoutMonedaDesdeInput, TipoCambioUncheckedCreateWithoutMonedaDesdeInput> | TipoCambioCreateWithoutMonedaDesdeInput[] | TipoCambioUncheckedCreateWithoutMonedaDesdeInput[]
    connectOrCreate?: TipoCambioCreateOrConnectWithoutMonedaDesdeInput | TipoCambioCreateOrConnectWithoutMonedaDesdeInput[]
    upsert?: TipoCambioUpsertWithWhereUniqueWithoutMonedaDesdeInput | TipoCambioUpsertWithWhereUniqueWithoutMonedaDesdeInput[]
    createMany?: TipoCambioCreateManyMonedaDesdeInputEnvelope
    set?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
    disconnect?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
    delete?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
    connect?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
    update?: TipoCambioUpdateWithWhereUniqueWithoutMonedaDesdeInput | TipoCambioUpdateWithWhereUniqueWithoutMonedaDesdeInput[]
    updateMany?: TipoCambioUpdateManyWithWhereWithoutMonedaDesdeInput | TipoCambioUpdateManyWithWhereWithoutMonedaDesdeInput[]
    deleteMany?: TipoCambioScalarWhereInput | TipoCambioScalarWhereInput[]
  }

  export type TipoCambioUpdateManyWithoutMonedaHaciaNestedInput = {
    create?: XOR<TipoCambioCreateWithoutMonedaHaciaInput, TipoCambioUncheckedCreateWithoutMonedaHaciaInput> | TipoCambioCreateWithoutMonedaHaciaInput[] | TipoCambioUncheckedCreateWithoutMonedaHaciaInput[]
    connectOrCreate?: TipoCambioCreateOrConnectWithoutMonedaHaciaInput | TipoCambioCreateOrConnectWithoutMonedaHaciaInput[]
    upsert?: TipoCambioUpsertWithWhereUniqueWithoutMonedaHaciaInput | TipoCambioUpsertWithWhereUniqueWithoutMonedaHaciaInput[]
    createMany?: TipoCambioCreateManyMonedaHaciaInputEnvelope
    set?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
    disconnect?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
    delete?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
    connect?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
    update?: TipoCambioUpdateWithWhereUniqueWithoutMonedaHaciaInput | TipoCambioUpdateWithWhereUniqueWithoutMonedaHaciaInput[]
    updateMany?: TipoCambioUpdateManyWithWhereWithoutMonedaHaciaInput | TipoCambioUpdateManyWithWhereWithoutMonedaHaciaInput[]
    deleteMany?: TipoCambioScalarWhereInput | TipoCambioScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type FacturaUncheckedUpdateManyWithoutMonedaNestedInput = {
    create?: XOR<FacturaCreateWithoutMonedaInput, FacturaUncheckedCreateWithoutMonedaInput> | FacturaCreateWithoutMonedaInput[] | FacturaUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: FacturaCreateOrConnectWithoutMonedaInput | FacturaCreateOrConnectWithoutMonedaInput[]
    upsert?: FacturaUpsertWithWhereUniqueWithoutMonedaInput | FacturaUpsertWithWhereUniqueWithoutMonedaInput[]
    createMany?: FacturaCreateManyMonedaInputEnvelope
    set?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    disconnect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    delete?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    connect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    update?: FacturaUpdateWithWhereUniqueWithoutMonedaInput | FacturaUpdateWithWhereUniqueWithoutMonedaInput[]
    updateMany?: FacturaUpdateManyWithWhereWithoutMonedaInput | FacturaUpdateManyWithWhereWithoutMonedaInput[]
    deleteMany?: FacturaScalarWhereInput | FacturaScalarWhereInput[]
  }

  export type GastoOperativoUncheckedUpdateManyWithoutMonedaNestedInput = {
    create?: XOR<GastoOperativoCreateWithoutMonedaInput, GastoOperativoUncheckedCreateWithoutMonedaInput> | GastoOperativoCreateWithoutMonedaInput[] | GastoOperativoUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: GastoOperativoCreateOrConnectWithoutMonedaInput | GastoOperativoCreateOrConnectWithoutMonedaInput[]
    upsert?: GastoOperativoUpsertWithWhereUniqueWithoutMonedaInput | GastoOperativoUpsertWithWhereUniqueWithoutMonedaInput[]
    createMany?: GastoOperativoCreateManyMonedaInputEnvelope
    set?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
    disconnect?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
    delete?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
    connect?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
    update?: GastoOperativoUpdateWithWhereUniqueWithoutMonedaInput | GastoOperativoUpdateWithWhereUniqueWithoutMonedaInput[]
    updateMany?: GastoOperativoUpdateManyWithWhereWithoutMonedaInput | GastoOperativoUpdateManyWithWhereWithoutMonedaInput[]
    deleteMany?: GastoOperativoScalarWhereInput | GastoOperativoScalarWhereInput[]
  }

  export type HistorialPrecioUncheckedUpdateManyWithoutMonedaNestedInput = {
    create?: XOR<HistorialPrecioCreateWithoutMonedaInput, HistorialPrecioUncheckedCreateWithoutMonedaInput> | HistorialPrecioCreateWithoutMonedaInput[] | HistorialPrecioUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutMonedaInput | HistorialPrecioCreateOrConnectWithoutMonedaInput[]
    upsert?: HistorialPrecioUpsertWithWhereUniqueWithoutMonedaInput | HistorialPrecioUpsertWithWhereUniqueWithoutMonedaInput[]
    createMany?: HistorialPrecioCreateManyMonedaInputEnvelope
    set?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    disconnect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    delete?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    update?: HistorialPrecioUpdateWithWhereUniqueWithoutMonedaInput | HistorialPrecioUpdateWithWhereUniqueWithoutMonedaInput[]
    updateMany?: HistorialPrecioUpdateManyWithWhereWithoutMonedaInput | HistorialPrecioUpdateManyWithWhereWithoutMonedaInput[]
    deleteMany?: HistorialPrecioScalarWhereInput | HistorialPrecioScalarWhereInput[]
  }

  export type PresupuestoUncheckedUpdateManyWithoutMonedaNestedInput = {
    create?: XOR<PresupuestoCreateWithoutMonedaInput, PresupuestoUncheckedCreateWithoutMonedaInput> | PresupuestoCreateWithoutMonedaInput[] | PresupuestoUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: PresupuestoCreateOrConnectWithoutMonedaInput | PresupuestoCreateOrConnectWithoutMonedaInput[]
    upsert?: PresupuestoUpsertWithWhereUniqueWithoutMonedaInput | PresupuestoUpsertWithWhereUniqueWithoutMonedaInput[]
    createMany?: PresupuestoCreateManyMonedaInputEnvelope
    set?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    disconnect?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    delete?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    connect?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    update?: PresupuestoUpdateWithWhereUniqueWithoutMonedaInput | PresupuestoUpdateWithWhereUniqueWithoutMonedaInput[]
    updateMany?: PresupuestoUpdateManyWithWhereWithoutMonedaInput | PresupuestoUpdateManyWithWhereWithoutMonedaInput[]
    deleteMany?: PresupuestoScalarWhereInput | PresupuestoScalarWhereInput[]
  }

  export type ProductoUncheckedUpdateManyWithoutMonedaNestedInput = {
    create?: XOR<ProductoCreateWithoutMonedaInput, ProductoUncheckedCreateWithoutMonedaInput> | ProductoCreateWithoutMonedaInput[] | ProductoUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutMonedaInput | ProductoCreateOrConnectWithoutMonedaInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutMonedaInput | ProductoUpsertWithWhereUniqueWithoutMonedaInput[]
    createMany?: ProductoCreateManyMonedaInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutMonedaInput | ProductoUpdateWithWhereUniqueWithoutMonedaInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutMonedaInput | ProductoUpdateManyWithWhereWithoutMonedaInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type ServicioUncheckedUpdateManyWithoutMonedaNestedInput = {
    create?: XOR<ServicioCreateWithoutMonedaInput, ServicioUncheckedCreateWithoutMonedaInput> | ServicioCreateWithoutMonedaInput[] | ServicioUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: ServicioCreateOrConnectWithoutMonedaInput | ServicioCreateOrConnectWithoutMonedaInput[]
    upsert?: ServicioUpsertWithWhereUniqueWithoutMonedaInput | ServicioUpsertWithWhereUniqueWithoutMonedaInput[]
    createMany?: ServicioCreateManyMonedaInputEnvelope
    set?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
    disconnect?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
    delete?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
    connect?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
    update?: ServicioUpdateWithWhereUniqueWithoutMonedaInput | ServicioUpdateWithWhereUniqueWithoutMonedaInput[]
    updateMany?: ServicioUpdateManyWithWhereWithoutMonedaInput | ServicioUpdateManyWithWhereWithoutMonedaInput[]
    deleteMany?: ServicioScalarWhereInput | ServicioScalarWhereInput[]
  }

  export type ReciboUncheckedUpdateManyWithoutMonedaNestedInput = {
    create?: XOR<ReciboCreateWithoutMonedaInput, ReciboUncheckedCreateWithoutMonedaInput> | ReciboCreateWithoutMonedaInput[] | ReciboUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: ReciboCreateOrConnectWithoutMonedaInput | ReciboCreateOrConnectWithoutMonedaInput[]
    upsert?: ReciboUpsertWithWhereUniqueWithoutMonedaInput | ReciboUpsertWithWhereUniqueWithoutMonedaInput[]
    createMany?: ReciboCreateManyMonedaInputEnvelope
    set?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    disconnect?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    delete?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    connect?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    update?: ReciboUpdateWithWhereUniqueWithoutMonedaInput | ReciboUpdateWithWhereUniqueWithoutMonedaInput[]
    updateMany?: ReciboUpdateManyWithWhereWithoutMonedaInput | ReciboUpdateManyWithWhereWithoutMonedaInput[]
    deleteMany?: ReciboScalarWhereInput | ReciboScalarWhereInput[]
  }

  export type PagoAdminUncheckedUpdateManyWithoutMonedaNestedInput = {
    create?: XOR<PagoAdminCreateWithoutMonedaInput, PagoAdminUncheckedCreateWithoutMonedaInput> | PagoAdminCreateWithoutMonedaInput[] | PagoAdminUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: PagoAdminCreateOrConnectWithoutMonedaInput | PagoAdminCreateOrConnectWithoutMonedaInput[]
    upsert?: PagoAdminUpsertWithWhereUniqueWithoutMonedaInput | PagoAdminUpsertWithWhereUniqueWithoutMonedaInput[]
    createMany?: PagoAdminCreateManyMonedaInputEnvelope
    set?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    disconnect?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    delete?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    connect?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    update?: PagoAdminUpdateWithWhereUniqueWithoutMonedaInput | PagoAdminUpdateWithWhereUniqueWithoutMonedaInput[]
    updateMany?: PagoAdminUpdateManyWithWhereWithoutMonedaInput | PagoAdminUpdateManyWithWhereWithoutMonedaInput[]
    deleteMany?: PagoAdminScalarWhereInput | PagoAdminScalarWhereInput[]
  }

  export type CobroClienteUncheckedUpdateManyWithoutMonedaNestedInput = {
    create?: XOR<CobroClienteCreateWithoutMonedaInput, CobroClienteUncheckedCreateWithoutMonedaInput> | CobroClienteCreateWithoutMonedaInput[] | CobroClienteUncheckedCreateWithoutMonedaInput[]
    connectOrCreate?: CobroClienteCreateOrConnectWithoutMonedaInput | CobroClienteCreateOrConnectWithoutMonedaInput[]
    upsert?: CobroClienteUpsertWithWhereUniqueWithoutMonedaInput | CobroClienteUpsertWithWhereUniqueWithoutMonedaInput[]
    createMany?: CobroClienteCreateManyMonedaInputEnvelope
    set?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
    disconnect?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
    delete?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
    connect?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
    update?: CobroClienteUpdateWithWhereUniqueWithoutMonedaInput | CobroClienteUpdateWithWhereUniqueWithoutMonedaInput[]
    updateMany?: CobroClienteUpdateManyWithWhereWithoutMonedaInput | CobroClienteUpdateManyWithWhereWithoutMonedaInput[]
    deleteMany?: CobroClienteScalarWhereInput | CobroClienteScalarWhereInput[]
  }

  export type TipoCambioUncheckedUpdateManyWithoutMonedaDesdeNestedInput = {
    create?: XOR<TipoCambioCreateWithoutMonedaDesdeInput, TipoCambioUncheckedCreateWithoutMonedaDesdeInput> | TipoCambioCreateWithoutMonedaDesdeInput[] | TipoCambioUncheckedCreateWithoutMonedaDesdeInput[]
    connectOrCreate?: TipoCambioCreateOrConnectWithoutMonedaDesdeInput | TipoCambioCreateOrConnectWithoutMonedaDesdeInput[]
    upsert?: TipoCambioUpsertWithWhereUniqueWithoutMonedaDesdeInput | TipoCambioUpsertWithWhereUniqueWithoutMonedaDesdeInput[]
    createMany?: TipoCambioCreateManyMonedaDesdeInputEnvelope
    set?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
    disconnect?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
    delete?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
    connect?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
    update?: TipoCambioUpdateWithWhereUniqueWithoutMonedaDesdeInput | TipoCambioUpdateWithWhereUniqueWithoutMonedaDesdeInput[]
    updateMany?: TipoCambioUpdateManyWithWhereWithoutMonedaDesdeInput | TipoCambioUpdateManyWithWhereWithoutMonedaDesdeInput[]
    deleteMany?: TipoCambioScalarWhereInput | TipoCambioScalarWhereInput[]
  }

  export type TipoCambioUncheckedUpdateManyWithoutMonedaHaciaNestedInput = {
    create?: XOR<TipoCambioCreateWithoutMonedaHaciaInput, TipoCambioUncheckedCreateWithoutMonedaHaciaInput> | TipoCambioCreateWithoutMonedaHaciaInput[] | TipoCambioUncheckedCreateWithoutMonedaHaciaInput[]
    connectOrCreate?: TipoCambioCreateOrConnectWithoutMonedaHaciaInput | TipoCambioCreateOrConnectWithoutMonedaHaciaInput[]
    upsert?: TipoCambioUpsertWithWhereUniqueWithoutMonedaHaciaInput | TipoCambioUpsertWithWhereUniqueWithoutMonedaHaciaInput[]
    createMany?: TipoCambioCreateManyMonedaHaciaInputEnvelope
    set?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
    disconnect?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
    delete?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
    connect?: TipoCambioWhereUniqueInput | TipoCambioWhereUniqueInput[]
    update?: TipoCambioUpdateWithWhereUniqueWithoutMonedaHaciaInput | TipoCambioUpdateWithWhereUniqueWithoutMonedaHaciaInput[]
    updateMany?: TipoCambioUpdateManyWithWhereWithoutMonedaHaciaInput | TipoCambioUpdateManyWithWhereWithoutMonedaHaciaInput[]
    deleteMany?: TipoCambioScalarWhereInput | TipoCambioScalarWhereInput[]
  }

  export type PresupuestoCreateNestedOneWithoutCobrosClienteInput = {
    create?: XOR<PresupuestoCreateWithoutCobrosClienteInput, PresupuestoUncheckedCreateWithoutCobrosClienteInput>
    connectOrCreate?: PresupuestoCreateOrConnectWithoutCobrosClienteInput
    connect?: PresupuestoWhereUniqueInput
  }

  export type MonedaCreateNestedOneWithoutCobrosClienteInput = {
    create?: XOR<MonedaCreateWithoutCobrosClienteInput, MonedaUncheckedCreateWithoutCobrosClienteInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutCobrosClienteInput
    connect?: MonedaWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type PresupuestoUpdateOneRequiredWithoutCobrosClienteNestedInput = {
    create?: XOR<PresupuestoCreateWithoutCobrosClienteInput, PresupuestoUncheckedCreateWithoutCobrosClienteInput>
    connectOrCreate?: PresupuestoCreateOrConnectWithoutCobrosClienteInput
    upsert?: PresupuestoUpsertWithoutCobrosClienteInput
    connect?: PresupuestoWhereUniqueInput
    update?: XOR<XOR<PresupuestoUpdateToOneWithWhereWithoutCobrosClienteInput, PresupuestoUpdateWithoutCobrosClienteInput>, PresupuestoUncheckedUpdateWithoutCobrosClienteInput>
  }

  export type MonedaUpdateOneRequiredWithoutCobrosClienteNestedInput = {
    create?: XOR<MonedaCreateWithoutCobrosClienteInput, MonedaUncheckedCreateWithoutCobrosClienteInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutCobrosClienteInput
    upsert?: MonedaUpsertWithoutCobrosClienteInput
    connect?: MonedaWhereUniqueInput
    update?: XOR<XOR<MonedaUpdateToOneWithWhereWithoutCobrosClienteInput, MonedaUpdateWithoutCobrosClienteInput>, MonedaUncheckedUpdateWithoutCobrosClienteInput>
  }

  export type MonedaCreateNestedOneWithoutTiposCambioInput = {
    create?: XOR<MonedaCreateWithoutTiposCambioInput, MonedaUncheckedCreateWithoutTiposCambioInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutTiposCambioInput
    connect?: MonedaWhereUniqueInput
  }

  export type MonedaCreateNestedOneWithoutTiposCambioDestinoInput = {
    create?: XOR<MonedaCreateWithoutTiposCambioDestinoInput, MonedaUncheckedCreateWithoutTiposCambioDestinoInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutTiposCambioDestinoInput
    connect?: MonedaWhereUniqueInput
  }

  export type EnumTipoCotizacionFieldUpdateOperationsInput = {
    set?: $Enums.TipoCotizacion
  }

  export type MonedaUpdateOneRequiredWithoutTiposCambioNestedInput = {
    create?: XOR<MonedaCreateWithoutTiposCambioInput, MonedaUncheckedCreateWithoutTiposCambioInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutTiposCambioInput
    upsert?: MonedaUpsertWithoutTiposCambioInput
    connect?: MonedaWhereUniqueInput
    update?: XOR<XOR<MonedaUpdateToOneWithWhereWithoutTiposCambioInput, MonedaUpdateWithoutTiposCambioInput>, MonedaUncheckedUpdateWithoutTiposCambioInput>
  }

  export type MonedaUpdateOneRequiredWithoutTiposCambioDestinoNestedInput = {
    create?: XOR<MonedaCreateWithoutTiposCambioDestinoInput, MonedaUncheckedCreateWithoutTiposCambioDestinoInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutTiposCambioDestinoInput
    upsert?: MonedaUpsertWithoutTiposCambioDestinoInput
    connect?: MonedaWhereUniqueInput
    update?: XOR<XOR<MonedaUpdateToOneWithWhereWithoutTiposCambioDestinoInput, MonedaUpdateWithoutTiposCambioDestinoInput>, MonedaUncheckedUpdateWithoutTiposCambioDestinoInput>
  }

  export type PersonaCreaterolesInput = {
    set: $Enums.RolUsuario[]
  }

  export type GastoOperativoCreateNestedManyWithoutProveedorInput = {
    create?: XOR<GastoOperativoCreateWithoutProveedorInput, GastoOperativoUncheckedCreateWithoutProveedorInput> | GastoOperativoCreateWithoutProveedorInput[] | GastoOperativoUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: GastoOperativoCreateOrConnectWithoutProveedorInput | GastoOperativoCreateOrConnectWithoutProveedorInput[]
    createMany?: GastoOperativoCreateManyProveedorInputEnvelope
    connect?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
  }

  export type HistorialPrecioCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<HistorialPrecioCreateWithoutUsuarioInput, HistorialPrecioUncheckedCreateWithoutUsuarioInput> | HistorialPrecioCreateWithoutUsuarioInput[] | HistorialPrecioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutUsuarioInput | HistorialPrecioCreateOrConnectWithoutUsuarioInput[]
    createMany?: HistorialPrecioCreateManyUsuarioInputEnvelope
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
  }

  export type PresupuestoCreateNestedManyWithoutClienteInput = {
    create?: XOR<PresupuestoCreateWithoutClienteInput, PresupuestoUncheckedCreateWithoutClienteInput> | PresupuestoCreateWithoutClienteInput[] | PresupuestoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: PresupuestoCreateOrConnectWithoutClienteInput | PresupuestoCreateOrConnectWithoutClienteInput[]
    createMany?: PresupuestoCreateManyClienteInputEnvelope
    connect?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
  }

  export type ProductoCreateNestedManyWithoutProveedorInput = {
    create?: XOR<ProductoCreateWithoutProveedorInput, ProductoUncheckedCreateWithoutProveedorInput> | ProductoCreateWithoutProveedorInput[] | ProductoUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutProveedorInput | ProductoCreateOrConnectWithoutProveedorInput[]
    createMany?: ProductoCreateManyProveedorInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type ReciboCreateNestedManyWithoutPersonaInput = {
    create?: XOR<ReciboCreateWithoutPersonaInput, ReciboUncheckedCreateWithoutPersonaInput> | ReciboCreateWithoutPersonaInput[] | ReciboUncheckedCreateWithoutPersonaInput[]
    connectOrCreate?: ReciboCreateOrConnectWithoutPersonaInput | ReciboCreateOrConnectWithoutPersonaInput[]
    createMany?: ReciboCreateManyPersonaInputEnvelope
    connect?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
  }

  export type PagoAdminCreateNestedManyWithoutAdminInput = {
    create?: XOR<PagoAdminCreateWithoutAdminInput, PagoAdminUncheckedCreateWithoutAdminInput> | PagoAdminCreateWithoutAdminInput[] | PagoAdminUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: PagoAdminCreateOrConnectWithoutAdminInput | PagoAdminCreateOrConnectWithoutAdminInput[]
    createMany?: PagoAdminCreateManyAdminInputEnvelope
    connect?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
  }

  export type ServicioCreateNestedManyWithoutProveedorInput = {
    create?: XOR<ServicioCreateWithoutProveedorInput, ServicioUncheckedCreateWithoutProveedorInput> | ServicioCreateWithoutProveedorInput[] | ServicioUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: ServicioCreateOrConnectWithoutProveedorInput | ServicioCreateOrConnectWithoutProveedorInput[]
    createMany?: ServicioCreateManyProveedorInputEnvelope
    connect?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
  }

  export type EmpresaCreateNestedManyWithoutClienteInput = {
    create?: XOR<EmpresaCreateWithoutClienteInput, EmpresaUncheckedCreateWithoutClienteInput> | EmpresaCreateWithoutClienteInput[] | EmpresaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: EmpresaCreateOrConnectWithoutClienteInput | EmpresaCreateOrConnectWithoutClienteInput[]
    createMany?: EmpresaCreateManyClienteInputEnvelope
    connect?: EmpresaWhereUniqueInput | EmpresaWhereUniqueInput[]
  }

  export type GastoOperativoUncheckedCreateNestedManyWithoutProveedorInput = {
    create?: XOR<GastoOperativoCreateWithoutProveedorInput, GastoOperativoUncheckedCreateWithoutProveedorInput> | GastoOperativoCreateWithoutProveedorInput[] | GastoOperativoUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: GastoOperativoCreateOrConnectWithoutProveedorInput | GastoOperativoCreateOrConnectWithoutProveedorInput[]
    createMany?: GastoOperativoCreateManyProveedorInputEnvelope
    connect?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
  }

  export type HistorialPrecioUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<HistorialPrecioCreateWithoutUsuarioInput, HistorialPrecioUncheckedCreateWithoutUsuarioInput> | HistorialPrecioCreateWithoutUsuarioInput[] | HistorialPrecioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutUsuarioInput | HistorialPrecioCreateOrConnectWithoutUsuarioInput[]
    createMany?: HistorialPrecioCreateManyUsuarioInputEnvelope
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
  }

  export type PresupuestoUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<PresupuestoCreateWithoutClienteInput, PresupuestoUncheckedCreateWithoutClienteInput> | PresupuestoCreateWithoutClienteInput[] | PresupuestoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: PresupuestoCreateOrConnectWithoutClienteInput | PresupuestoCreateOrConnectWithoutClienteInput[]
    createMany?: PresupuestoCreateManyClienteInputEnvelope
    connect?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
  }

  export type ProductoUncheckedCreateNestedManyWithoutProveedorInput = {
    create?: XOR<ProductoCreateWithoutProveedorInput, ProductoUncheckedCreateWithoutProveedorInput> | ProductoCreateWithoutProveedorInput[] | ProductoUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutProveedorInput | ProductoCreateOrConnectWithoutProveedorInput[]
    createMany?: ProductoCreateManyProveedorInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type ReciboUncheckedCreateNestedManyWithoutPersonaInput = {
    create?: XOR<ReciboCreateWithoutPersonaInput, ReciboUncheckedCreateWithoutPersonaInput> | ReciboCreateWithoutPersonaInput[] | ReciboUncheckedCreateWithoutPersonaInput[]
    connectOrCreate?: ReciboCreateOrConnectWithoutPersonaInput | ReciboCreateOrConnectWithoutPersonaInput[]
    createMany?: ReciboCreateManyPersonaInputEnvelope
    connect?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
  }

  export type PagoAdminUncheckedCreateNestedManyWithoutAdminInput = {
    create?: XOR<PagoAdminCreateWithoutAdminInput, PagoAdminUncheckedCreateWithoutAdminInput> | PagoAdminCreateWithoutAdminInput[] | PagoAdminUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: PagoAdminCreateOrConnectWithoutAdminInput | PagoAdminCreateOrConnectWithoutAdminInput[]
    createMany?: PagoAdminCreateManyAdminInputEnvelope
    connect?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
  }

  export type ServicioUncheckedCreateNestedManyWithoutProveedorInput = {
    create?: XOR<ServicioCreateWithoutProveedorInput, ServicioUncheckedCreateWithoutProveedorInput> | ServicioCreateWithoutProveedorInput[] | ServicioUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: ServicioCreateOrConnectWithoutProveedorInput | ServicioCreateOrConnectWithoutProveedorInput[]
    createMany?: ServicioCreateManyProveedorInputEnvelope
    connect?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
  }

  export type EmpresaUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<EmpresaCreateWithoutClienteInput, EmpresaUncheckedCreateWithoutClienteInput> | EmpresaCreateWithoutClienteInput[] | EmpresaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: EmpresaCreateOrConnectWithoutClienteInput | EmpresaCreateOrConnectWithoutClienteInput[]
    createMany?: EmpresaCreateManyClienteInputEnvelope
    connect?: EmpresaWhereUniqueInput | EmpresaWhereUniqueInput[]
  }

  export type EnumTipoPersonaFieldUpdateOperationsInput = {
    set?: $Enums.TipoPersona
  }

  export type PersonaUpdaterolesInput = {
    set?: $Enums.RolUsuario[]
    push?: $Enums.RolUsuario | $Enums.RolUsuario[]
  }

  export type GastoOperativoUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<GastoOperativoCreateWithoutProveedorInput, GastoOperativoUncheckedCreateWithoutProveedorInput> | GastoOperativoCreateWithoutProveedorInput[] | GastoOperativoUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: GastoOperativoCreateOrConnectWithoutProveedorInput | GastoOperativoCreateOrConnectWithoutProveedorInput[]
    upsert?: GastoOperativoUpsertWithWhereUniqueWithoutProveedorInput | GastoOperativoUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: GastoOperativoCreateManyProveedorInputEnvelope
    set?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
    disconnect?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
    delete?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
    connect?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
    update?: GastoOperativoUpdateWithWhereUniqueWithoutProveedorInput | GastoOperativoUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: GastoOperativoUpdateManyWithWhereWithoutProveedorInput | GastoOperativoUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: GastoOperativoScalarWhereInput | GastoOperativoScalarWhereInput[]
  }

  export type HistorialPrecioUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<HistorialPrecioCreateWithoutUsuarioInput, HistorialPrecioUncheckedCreateWithoutUsuarioInput> | HistorialPrecioCreateWithoutUsuarioInput[] | HistorialPrecioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutUsuarioInput | HistorialPrecioCreateOrConnectWithoutUsuarioInput[]
    upsert?: HistorialPrecioUpsertWithWhereUniqueWithoutUsuarioInput | HistorialPrecioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: HistorialPrecioCreateManyUsuarioInputEnvelope
    set?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    disconnect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    delete?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    update?: HistorialPrecioUpdateWithWhereUniqueWithoutUsuarioInput | HistorialPrecioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: HistorialPrecioUpdateManyWithWhereWithoutUsuarioInput | HistorialPrecioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: HistorialPrecioScalarWhereInput | HistorialPrecioScalarWhereInput[]
  }

  export type PresupuestoUpdateManyWithoutClienteNestedInput = {
    create?: XOR<PresupuestoCreateWithoutClienteInput, PresupuestoUncheckedCreateWithoutClienteInput> | PresupuestoCreateWithoutClienteInput[] | PresupuestoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: PresupuestoCreateOrConnectWithoutClienteInput | PresupuestoCreateOrConnectWithoutClienteInput[]
    upsert?: PresupuestoUpsertWithWhereUniqueWithoutClienteInput | PresupuestoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: PresupuestoCreateManyClienteInputEnvelope
    set?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    disconnect?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    delete?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    connect?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    update?: PresupuestoUpdateWithWhereUniqueWithoutClienteInput | PresupuestoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: PresupuestoUpdateManyWithWhereWithoutClienteInput | PresupuestoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: PresupuestoScalarWhereInput | PresupuestoScalarWhereInput[]
  }

  export type ProductoUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<ProductoCreateWithoutProveedorInput, ProductoUncheckedCreateWithoutProveedorInput> | ProductoCreateWithoutProveedorInput[] | ProductoUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutProveedorInput | ProductoCreateOrConnectWithoutProveedorInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutProveedorInput | ProductoUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: ProductoCreateManyProveedorInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutProveedorInput | ProductoUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutProveedorInput | ProductoUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type ReciboUpdateManyWithoutPersonaNestedInput = {
    create?: XOR<ReciboCreateWithoutPersonaInput, ReciboUncheckedCreateWithoutPersonaInput> | ReciboCreateWithoutPersonaInput[] | ReciboUncheckedCreateWithoutPersonaInput[]
    connectOrCreate?: ReciboCreateOrConnectWithoutPersonaInput | ReciboCreateOrConnectWithoutPersonaInput[]
    upsert?: ReciboUpsertWithWhereUniqueWithoutPersonaInput | ReciboUpsertWithWhereUniqueWithoutPersonaInput[]
    createMany?: ReciboCreateManyPersonaInputEnvelope
    set?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    disconnect?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    delete?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    connect?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    update?: ReciboUpdateWithWhereUniqueWithoutPersonaInput | ReciboUpdateWithWhereUniqueWithoutPersonaInput[]
    updateMany?: ReciboUpdateManyWithWhereWithoutPersonaInput | ReciboUpdateManyWithWhereWithoutPersonaInput[]
    deleteMany?: ReciboScalarWhereInput | ReciboScalarWhereInput[]
  }

  export type PagoAdminUpdateManyWithoutAdminNestedInput = {
    create?: XOR<PagoAdminCreateWithoutAdminInput, PagoAdminUncheckedCreateWithoutAdminInput> | PagoAdminCreateWithoutAdminInput[] | PagoAdminUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: PagoAdminCreateOrConnectWithoutAdminInput | PagoAdminCreateOrConnectWithoutAdminInput[]
    upsert?: PagoAdminUpsertWithWhereUniqueWithoutAdminInput | PagoAdminUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: PagoAdminCreateManyAdminInputEnvelope
    set?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    disconnect?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    delete?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    connect?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    update?: PagoAdminUpdateWithWhereUniqueWithoutAdminInput | PagoAdminUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: PagoAdminUpdateManyWithWhereWithoutAdminInput | PagoAdminUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: PagoAdminScalarWhereInput | PagoAdminScalarWhereInput[]
  }

  export type ServicioUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<ServicioCreateWithoutProveedorInput, ServicioUncheckedCreateWithoutProveedorInput> | ServicioCreateWithoutProveedorInput[] | ServicioUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: ServicioCreateOrConnectWithoutProveedorInput | ServicioCreateOrConnectWithoutProveedorInput[]
    upsert?: ServicioUpsertWithWhereUniqueWithoutProveedorInput | ServicioUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: ServicioCreateManyProveedorInputEnvelope
    set?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
    disconnect?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
    delete?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
    connect?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
    update?: ServicioUpdateWithWhereUniqueWithoutProveedorInput | ServicioUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: ServicioUpdateManyWithWhereWithoutProveedorInput | ServicioUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: ServicioScalarWhereInput | ServicioScalarWhereInput[]
  }

  export type EmpresaUpdateManyWithoutClienteNestedInput = {
    create?: XOR<EmpresaCreateWithoutClienteInput, EmpresaUncheckedCreateWithoutClienteInput> | EmpresaCreateWithoutClienteInput[] | EmpresaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: EmpresaCreateOrConnectWithoutClienteInput | EmpresaCreateOrConnectWithoutClienteInput[]
    upsert?: EmpresaUpsertWithWhereUniqueWithoutClienteInput | EmpresaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: EmpresaCreateManyClienteInputEnvelope
    set?: EmpresaWhereUniqueInput | EmpresaWhereUniqueInput[]
    disconnect?: EmpresaWhereUniqueInput | EmpresaWhereUniqueInput[]
    delete?: EmpresaWhereUniqueInput | EmpresaWhereUniqueInput[]
    connect?: EmpresaWhereUniqueInput | EmpresaWhereUniqueInput[]
    update?: EmpresaUpdateWithWhereUniqueWithoutClienteInput | EmpresaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: EmpresaUpdateManyWithWhereWithoutClienteInput | EmpresaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: EmpresaScalarWhereInput | EmpresaScalarWhereInput[]
  }

  export type GastoOperativoUncheckedUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<GastoOperativoCreateWithoutProveedorInput, GastoOperativoUncheckedCreateWithoutProveedorInput> | GastoOperativoCreateWithoutProveedorInput[] | GastoOperativoUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: GastoOperativoCreateOrConnectWithoutProveedorInput | GastoOperativoCreateOrConnectWithoutProveedorInput[]
    upsert?: GastoOperativoUpsertWithWhereUniqueWithoutProveedorInput | GastoOperativoUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: GastoOperativoCreateManyProveedorInputEnvelope
    set?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
    disconnect?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
    delete?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
    connect?: GastoOperativoWhereUniqueInput | GastoOperativoWhereUniqueInput[]
    update?: GastoOperativoUpdateWithWhereUniqueWithoutProveedorInput | GastoOperativoUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: GastoOperativoUpdateManyWithWhereWithoutProveedorInput | GastoOperativoUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: GastoOperativoScalarWhereInput | GastoOperativoScalarWhereInput[]
  }

  export type HistorialPrecioUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<HistorialPrecioCreateWithoutUsuarioInput, HistorialPrecioUncheckedCreateWithoutUsuarioInput> | HistorialPrecioCreateWithoutUsuarioInput[] | HistorialPrecioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutUsuarioInput | HistorialPrecioCreateOrConnectWithoutUsuarioInput[]
    upsert?: HistorialPrecioUpsertWithWhereUniqueWithoutUsuarioInput | HistorialPrecioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: HistorialPrecioCreateManyUsuarioInputEnvelope
    set?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    disconnect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    delete?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    update?: HistorialPrecioUpdateWithWhereUniqueWithoutUsuarioInput | HistorialPrecioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: HistorialPrecioUpdateManyWithWhereWithoutUsuarioInput | HistorialPrecioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: HistorialPrecioScalarWhereInput | HistorialPrecioScalarWhereInput[]
  }

  export type PresupuestoUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<PresupuestoCreateWithoutClienteInput, PresupuestoUncheckedCreateWithoutClienteInput> | PresupuestoCreateWithoutClienteInput[] | PresupuestoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: PresupuestoCreateOrConnectWithoutClienteInput | PresupuestoCreateOrConnectWithoutClienteInput[]
    upsert?: PresupuestoUpsertWithWhereUniqueWithoutClienteInput | PresupuestoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: PresupuestoCreateManyClienteInputEnvelope
    set?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    disconnect?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    delete?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    connect?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    update?: PresupuestoUpdateWithWhereUniqueWithoutClienteInput | PresupuestoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: PresupuestoUpdateManyWithWhereWithoutClienteInput | PresupuestoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: PresupuestoScalarWhereInput | PresupuestoScalarWhereInput[]
  }

  export type ProductoUncheckedUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<ProductoCreateWithoutProveedorInput, ProductoUncheckedCreateWithoutProveedorInput> | ProductoCreateWithoutProveedorInput[] | ProductoUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutProveedorInput | ProductoCreateOrConnectWithoutProveedorInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutProveedorInput | ProductoUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: ProductoCreateManyProveedorInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutProveedorInput | ProductoUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutProveedorInput | ProductoUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type ReciboUncheckedUpdateManyWithoutPersonaNestedInput = {
    create?: XOR<ReciboCreateWithoutPersonaInput, ReciboUncheckedCreateWithoutPersonaInput> | ReciboCreateWithoutPersonaInput[] | ReciboUncheckedCreateWithoutPersonaInput[]
    connectOrCreate?: ReciboCreateOrConnectWithoutPersonaInput | ReciboCreateOrConnectWithoutPersonaInput[]
    upsert?: ReciboUpsertWithWhereUniqueWithoutPersonaInput | ReciboUpsertWithWhereUniqueWithoutPersonaInput[]
    createMany?: ReciboCreateManyPersonaInputEnvelope
    set?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    disconnect?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    delete?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    connect?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    update?: ReciboUpdateWithWhereUniqueWithoutPersonaInput | ReciboUpdateWithWhereUniqueWithoutPersonaInput[]
    updateMany?: ReciboUpdateManyWithWhereWithoutPersonaInput | ReciboUpdateManyWithWhereWithoutPersonaInput[]
    deleteMany?: ReciboScalarWhereInput | ReciboScalarWhereInput[]
  }

  export type PagoAdminUncheckedUpdateManyWithoutAdminNestedInput = {
    create?: XOR<PagoAdminCreateWithoutAdminInput, PagoAdminUncheckedCreateWithoutAdminInput> | PagoAdminCreateWithoutAdminInput[] | PagoAdminUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: PagoAdminCreateOrConnectWithoutAdminInput | PagoAdminCreateOrConnectWithoutAdminInput[]
    upsert?: PagoAdminUpsertWithWhereUniqueWithoutAdminInput | PagoAdminUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: PagoAdminCreateManyAdminInputEnvelope
    set?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    disconnect?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    delete?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    connect?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    update?: PagoAdminUpdateWithWhereUniqueWithoutAdminInput | PagoAdminUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: PagoAdminUpdateManyWithWhereWithoutAdminInput | PagoAdminUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: PagoAdminScalarWhereInput | PagoAdminScalarWhereInput[]
  }

  export type ServicioUncheckedUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<ServicioCreateWithoutProveedorInput, ServicioUncheckedCreateWithoutProveedorInput> | ServicioCreateWithoutProveedorInput[] | ServicioUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: ServicioCreateOrConnectWithoutProveedorInput | ServicioCreateOrConnectWithoutProveedorInput[]
    upsert?: ServicioUpsertWithWhereUniqueWithoutProveedorInput | ServicioUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: ServicioCreateManyProveedorInputEnvelope
    set?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
    disconnect?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
    delete?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
    connect?: ServicioWhereUniqueInput | ServicioWhereUniqueInput[]
    update?: ServicioUpdateWithWhereUniqueWithoutProveedorInput | ServicioUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: ServicioUpdateManyWithWhereWithoutProveedorInput | ServicioUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: ServicioScalarWhereInput | ServicioScalarWhereInput[]
  }

  export type EmpresaUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<EmpresaCreateWithoutClienteInput, EmpresaUncheckedCreateWithoutClienteInput> | EmpresaCreateWithoutClienteInput[] | EmpresaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: EmpresaCreateOrConnectWithoutClienteInput | EmpresaCreateOrConnectWithoutClienteInput[]
    upsert?: EmpresaUpsertWithWhereUniqueWithoutClienteInput | EmpresaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: EmpresaCreateManyClienteInputEnvelope
    set?: EmpresaWhereUniqueInput | EmpresaWhereUniqueInput[]
    disconnect?: EmpresaWhereUniqueInput | EmpresaWhereUniqueInput[]
    delete?: EmpresaWhereUniqueInput | EmpresaWhereUniqueInput[]
    connect?: EmpresaWhereUniqueInput | EmpresaWhereUniqueInput[]
    update?: EmpresaUpdateWithWhereUniqueWithoutClienteInput | EmpresaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: EmpresaUpdateManyWithWhereWithoutClienteInput | EmpresaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: EmpresaScalarWhereInput | EmpresaScalarWhereInput[]
  }

  export type PersonaCreateNestedOneWithoutEmpresasInput = {
    create?: XOR<PersonaCreateWithoutEmpresasInput, PersonaUncheckedCreateWithoutEmpresasInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutEmpresasInput
    connect?: PersonaWhereUniqueInput
  }

  export type PresupuestoCreateNestedManyWithoutEmpresaInput = {
    create?: XOR<PresupuestoCreateWithoutEmpresaInput, PresupuestoUncheckedCreateWithoutEmpresaInput> | PresupuestoCreateWithoutEmpresaInput[] | PresupuestoUncheckedCreateWithoutEmpresaInput[]
    connectOrCreate?: PresupuestoCreateOrConnectWithoutEmpresaInput | PresupuestoCreateOrConnectWithoutEmpresaInput[]
    createMany?: PresupuestoCreateManyEmpresaInputEnvelope
    connect?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
  }

  export type FacturaCreateNestedManyWithoutEmpresaInput = {
    create?: XOR<FacturaCreateWithoutEmpresaInput, FacturaUncheckedCreateWithoutEmpresaInput> | FacturaCreateWithoutEmpresaInput[] | FacturaUncheckedCreateWithoutEmpresaInput[]
    connectOrCreate?: FacturaCreateOrConnectWithoutEmpresaInput | FacturaCreateOrConnectWithoutEmpresaInput[]
    createMany?: FacturaCreateManyEmpresaInputEnvelope
    connect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
  }

  export type PresupuestoUncheckedCreateNestedManyWithoutEmpresaInput = {
    create?: XOR<PresupuestoCreateWithoutEmpresaInput, PresupuestoUncheckedCreateWithoutEmpresaInput> | PresupuestoCreateWithoutEmpresaInput[] | PresupuestoUncheckedCreateWithoutEmpresaInput[]
    connectOrCreate?: PresupuestoCreateOrConnectWithoutEmpresaInput | PresupuestoCreateOrConnectWithoutEmpresaInput[]
    createMany?: PresupuestoCreateManyEmpresaInputEnvelope
    connect?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
  }

  export type FacturaUncheckedCreateNestedManyWithoutEmpresaInput = {
    create?: XOR<FacturaCreateWithoutEmpresaInput, FacturaUncheckedCreateWithoutEmpresaInput> | FacturaCreateWithoutEmpresaInput[] | FacturaUncheckedCreateWithoutEmpresaInput[]
    connectOrCreate?: FacturaCreateOrConnectWithoutEmpresaInput | FacturaCreateOrConnectWithoutEmpresaInput[]
    createMany?: FacturaCreateManyEmpresaInputEnvelope
    connect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
  }

  export type PersonaUpdateOneRequiredWithoutEmpresasNestedInput = {
    create?: XOR<PersonaCreateWithoutEmpresasInput, PersonaUncheckedCreateWithoutEmpresasInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutEmpresasInput
    upsert?: PersonaUpsertWithoutEmpresasInput
    connect?: PersonaWhereUniqueInput
    update?: XOR<XOR<PersonaUpdateToOneWithWhereWithoutEmpresasInput, PersonaUpdateWithoutEmpresasInput>, PersonaUncheckedUpdateWithoutEmpresasInput>
  }

  export type PresupuestoUpdateManyWithoutEmpresaNestedInput = {
    create?: XOR<PresupuestoCreateWithoutEmpresaInput, PresupuestoUncheckedCreateWithoutEmpresaInput> | PresupuestoCreateWithoutEmpresaInput[] | PresupuestoUncheckedCreateWithoutEmpresaInput[]
    connectOrCreate?: PresupuestoCreateOrConnectWithoutEmpresaInput | PresupuestoCreateOrConnectWithoutEmpresaInput[]
    upsert?: PresupuestoUpsertWithWhereUniqueWithoutEmpresaInput | PresupuestoUpsertWithWhereUniqueWithoutEmpresaInput[]
    createMany?: PresupuestoCreateManyEmpresaInputEnvelope
    set?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    disconnect?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    delete?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    connect?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    update?: PresupuestoUpdateWithWhereUniqueWithoutEmpresaInput | PresupuestoUpdateWithWhereUniqueWithoutEmpresaInput[]
    updateMany?: PresupuestoUpdateManyWithWhereWithoutEmpresaInput | PresupuestoUpdateManyWithWhereWithoutEmpresaInput[]
    deleteMany?: PresupuestoScalarWhereInput | PresupuestoScalarWhereInput[]
  }

  export type FacturaUpdateManyWithoutEmpresaNestedInput = {
    create?: XOR<FacturaCreateWithoutEmpresaInput, FacturaUncheckedCreateWithoutEmpresaInput> | FacturaCreateWithoutEmpresaInput[] | FacturaUncheckedCreateWithoutEmpresaInput[]
    connectOrCreate?: FacturaCreateOrConnectWithoutEmpresaInput | FacturaCreateOrConnectWithoutEmpresaInput[]
    upsert?: FacturaUpsertWithWhereUniqueWithoutEmpresaInput | FacturaUpsertWithWhereUniqueWithoutEmpresaInput[]
    createMany?: FacturaCreateManyEmpresaInputEnvelope
    set?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    disconnect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    delete?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    connect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    update?: FacturaUpdateWithWhereUniqueWithoutEmpresaInput | FacturaUpdateWithWhereUniqueWithoutEmpresaInput[]
    updateMany?: FacturaUpdateManyWithWhereWithoutEmpresaInput | FacturaUpdateManyWithWhereWithoutEmpresaInput[]
    deleteMany?: FacturaScalarWhereInput | FacturaScalarWhereInput[]
  }

  export type PresupuestoUncheckedUpdateManyWithoutEmpresaNestedInput = {
    create?: XOR<PresupuestoCreateWithoutEmpresaInput, PresupuestoUncheckedCreateWithoutEmpresaInput> | PresupuestoCreateWithoutEmpresaInput[] | PresupuestoUncheckedCreateWithoutEmpresaInput[]
    connectOrCreate?: PresupuestoCreateOrConnectWithoutEmpresaInput | PresupuestoCreateOrConnectWithoutEmpresaInput[]
    upsert?: PresupuestoUpsertWithWhereUniqueWithoutEmpresaInput | PresupuestoUpsertWithWhereUniqueWithoutEmpresaInput[]
    createMany?: PresupuestoCreateManyEmpresaInputEnvelope
    set?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    disconnect?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    delete?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    connect?: PresupuestoWhereUniqueInput | PresupuestoWhereUniqueInput[]
    update?: PresupuestoUpdateWithWhereUniqueWithoutEmpresaInput | PresupuestoUpdateWithWhereUniqueWithoutEmpresaInput[]
    updateMany?: PresupuestoUpdateManyWithWhereWithoutEmpresaInput | PresupuestoUpdateManyWithWhereWithoutEmpresaInput[]
    deleteMany?: PresupuestoScalarWhereInput | PresupuestoScalarWhereInput[]
  }

  export type FacturaUncheckedUpdateManyWithoutEmpresaNestedInput = {
    create?: XOR<FacturaCreateWithoutEmpresaInput, FacturaUncheckedCreateWithoutEmpresaInput> | FacturaCreateWithoutEmpresaInput[] | FacturaUncheckedCreateWithoutEmpresaInput[]
    connectOrCreate?: FacturaCreateOrConnectWithoutEmpresaInput | FacturaCreateOrConnectWithoutEmpresaInput[]
    upsert?: FacturaUpsertWithWhereUniqueWithoutEmpresaInput | FacturaUpsertWithWhereUniqueWithoutEmpresaInput[]
    createMany?: FacturaCreateManyEmpresaInputEnvelope
    set?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    disconnect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    delete?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    connect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    update?: FacturaUpdateWithWhereUniqueWithoutEmpresaInput | FacturaUpdateWithWhereUniqueWithoutEmpresaInput[]
    updateMany?: FacturaUpdateManyWithWhereWithoutEmpresaInput | FacturaUpdateManyWithWhereWithoutEmpresaInput[]
    deleteMany?: FacturaScalarWhereInput | FacturaScalarWhereInput[]
  }

  export type HistorialPrecioCreateNestedManyWithoutProductoInput = {
    create?: XOR<HistorialPrecioCreateWithoutProductoInput, HistorialPrecioUncheckedCreateWithoutProductoInput> | HistorialPrecioCreateWithoutProductoInput[] | HistorialPrecioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutProductoInput | HistorialPrecioCreateOrConnectWithoutProductoInput[]
    createMany?: HistorialPrecioCreateManyProductoInputEnvelope
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
  }

  export type ItemCreateNestedManyWithoutProductoInput = {
    create?: XOR<ItemCreateWithoutProductoInput, ItemUncheckedCreateWithoutProductoInput> | ItemCreateWithoutProductoInput[] | ItemUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutProductoInput | ItemCreateOrConnectWithoutProductoInput[]
    createMany?: ItemCreateManyProductoInputEnvelope
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
  }

  export type MonedaCreateNestedOneWithoutProductosInput = {
    create?: XOR<MonedaCreateWithoutProductosInput, MonedaUncheckedCreateWithoutProductosInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutProductosInput
    connect?: MonedaWhereUniqueInput
  }

  export type PersonaCreateNestedOneWithoutProductosInput = {
    create?: XOR<PersonaCreateWithoutProductosInput, PersonaUncheckedCreateWithoutProductosInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutProductosInput
    connect?: PersonaWhereUniqueInput
  }

  export type HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<HistorialPrecioCreateWithoutProductoInput, HistorialPrecioUncheckedCreateWithoutProductoInput> | HistorialPrecioCreateWithoutProductoInput[] | HistorialPrecioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutProductoInput | HistorialPrecioCreateOrConnectWithoutProductoInput[]
    createMany?: HistorialPrecioCreateManyProductoInputEnvelope
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
  }

  export type ItemUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<ItemCreateWithoutProductoInput, ItemUncheckedCreateWithoutProductoInput> | ItemCreateWithoutProductoInput[] | ItemUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutProductoInput | ItemCreateOrConnectWithoutProductoInput[]
    createMany?: ItemCreateManyProductoInputEnvelope
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
  }

  export type HistorialPrecioUpdateManyWithoutProductoNestedInput = {
    create?: XOR<HistorialPrecioCreateWithoutProductoInput, HistorialPrecioUncheckedCreateWithoutProductoInput> | HistorialPrecioCreateWithoutProductoInput[] | HistorialPrecioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutProductoInput | HistorialPrecioCreateOrConnectWithoutProductoInput[]
    upsert?: HistorialPrecioUpsertWithWhereUniqueWithoutProductoInput | HistorialPrecioUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: HistorialPrecioCreateManyProductoInputEnvelope
    set?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    disconnect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    delete?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    update?: HistorialPrecioUpdateWithWhereUniqueWithoutProductoInput | HistorialPrecioUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: HistorialPrecioUpdateManyWithWhereWithoutProductoInput | HistorialPrecioUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: HistorialPrecioScalarWhereInput | HistorialPrecioScalarWhereInput[]
  }

  export type ItemUpdateManyWithoutProductoNestedInput = {
    create?: XOR<ItemCreateWithoutProductoInput, ItemUncheckedCreateWithoutProductoInput> | ItemCreateWithoutProductoInput[] | ItemUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutProductoInput | ItemCreateOrConnectWithoutProductoInput[]
    upsert?: ItemUpsertWithWhereUniqueWithoutProductoInput | ItemUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: ItemCreateManyProductoInputEnvelope
    set?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    disconnect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    delete?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    update?: ItemUpdateWithWhereUniqueWithoutProductoInput | ItemUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: ItemUpdateManyWithWhereWithoutProductoInput | ItemUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: ItemScalarWhereInput | ItemScalarWhereInput[]
  }

  export type MonedaUpdateOneRequiredWithoutProductosNestedInput = {
    create?: XOR<MonedaCreateWithoutProductosInput, MonedaUncheckedCreateWithoutProductosInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutProductosInput
    upsert?: MonedaUpsertWithoutProductosInput
    connect?: MonedaWhereUniqueInput
    update?: XOR<XOR<MonedaUpdateToOneWithWhereWithoutProductosInput, MonedaUpdateWithoutProductosInput>, MonedaUncheckedUpdateWithoutProductosInput>
  }

  export type PersonaUpdateOneRequiredWithoutProductosNestedInput = {
    create?: XOR<PersonaCreateWithoutProductosInput, PersonaUncheckedCreateWithoutProductosInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutProductosInput
    upsert?: PersonaUpsertWithoutProductosInput
    connect?: PersonaWhereUniqueInput
    update?: XOR<XOR<PersonaUpdateToOneWithWhereWithoutProductosInput, PersonaUpdateWithoutProductosInput>, PersonaUncheckedUpdateWithoutProductosInput>
  }

  export type HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<HistorialPrecioCreateWithoutProductoInput, HistorialPrecioUncheckedCreateWithoutProductoInput> | HistorialPrecioCreateWithoutProductoInput[] | HistorialPrecioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutProductoInput | HistorialPrecioCreateOrConnectWithoutProductoInput[]
    upsert?: HistorialPrecioUpsertWithWhereUniqueWithoutProductoInput | HistorialPrecioUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: HistorialPrecioCreateManyProductoInputEnvelope
    set?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    disconnect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    delete?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    update?: HistorialPrecioUpdateWithWhereUniqueWithoutProductoInput | HistorialPrecioUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: HistorialPrecioUpdateManyWithWhereWithoutProductoInput | HistorialPrecioUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: HistorialPrecioScalarWhereInput | HistorialPrecioScalarWhereInput[]
  }

  export type ItemUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<ItemCreateWithoutProductoInput, ItemUncheckedCreateWithoutProductoInput> | ItemCreateWithoutProductoInput[] | ItemUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutProductoInput | ItemCreateOrConnectWithoutProductoInput[]
    upsert?: ItemUpsertWithWhereUniqueWithoutProductoInput | ItemUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: ItemCreateManyProductoInputEnvelope
    set?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    disconnect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    delete?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    update?: ItemUpdateWithWhereUniqueWithoutProductoInput | ItemUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: ItemUpdateManyWithWhereWithoutProductoInput | ItemUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: ItemScalarWhereInput | ItemScalarWhereInput[]
  }

  export type HistorialPrecioCreateNestedManyWithoutServicioInput = {
    create?: XOR<HistorialPrecioCreateWithoutServicioInput, HistorialPrecioUncheckedCreateWithoutServicioInput> | HistorialPrecioCreateWithoutServicioInput[] | HistorialPrecioUncheckedCreateWithoutServicioInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutServicioInput | HistorialPrecioCreateOrConnectWithoutServicioInput[]
    createMany?: HistorialPrecioCreateManyServicioInputEnvelope
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
  }

  export type ItemCreateNestedManyWithoutServicioInput = {
    create?: XOR<ItemCreateWithoutServicioInput, ItemUncheckedCreateWithoutServicioInput> | ItemCreateWithoutServicioInput[] | ItemUncheckedCreateWithoutServicioInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutServicioInput | ItemCreateOrConnectWithoutServicioInput[]
    createMany?: ItemCreateManyServicioInputEnvelope
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
  }

  export type MonedaCreateNestedOneWithoutServiciosInput = {
    create?: XOR<MonedaCreateWithoutServiciosInput, MonedaUncheckedCreateWithoutServiciosInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutServiciosInput
    connect?: MonedaWhereUniqueInput
  }

  export type PersonaCreateNestedOneWithoutServiciosInput = {
    create?: XOR<PersonaCreateWithoutServiciosInput, PersonaUncheckedCreateWithoutServiciosInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutServiciosInput
    connect?: PersonaWhereUniqueInput
  }

  export type HistorialPrecioUncheckedCreateNestedManyWithoutServicioInput = {
    create?: XOR<HistorialPrecioCreateWithoutServicioInput, HistorialPrecioUncheckedCreateWithoutServicioInput> | HistorialPrecioCreateWithoutServicioInput[] | HistorialPrecioUncheckedCreateWithoutServicioInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutServicioInput | HistorialPrecioCreateOrConnectWithoutServicioInput[]
    createMany?: HistorialPrecioCreateManyServicioInputEnvelope
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
  }

  export type ItemUncheckedCreateNestedManyWithoutServicioInput = {
    create?: XOR<ItemCreateWithoutServicioInput, ItemUncheckedCreateWithoutServicioInput> | ItemCreateWithoutServicioInput[] | ItemUncheckedCreateWithoutServicioInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutServicioInput | ItemCreateOrConnectWithoutServicioInput[]
    createMany?: ItemCreateManyServicioInputEnvelope
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
  }

  export type HistorialPrecioUpdateManyWithoutServicioNestedInput = {
    create?: XOR<HistorialPrecioCreateWithoutServicioInput, HistorialPrecioUncheckedCreateWithoutServicioInput> | HistorialPrecioCreateWithoutServicioInput[] | HistorialPrecioUncheckedCreateWithoutServicioInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutServicioInput | HistorialPrecioCreateOrConnectWithoutServicioInput[]
    upsert?: HistorialPrecioUpsertWithWhereUniqueWithoutServicioInput | HistorialPrecioUpsertWithWhereUniqueWithoutServicioInput[]
    createMany?: HistorialPrecioCreateManyServicioInputEnvelope
    set?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    disconnect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    delete?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    update?: HistorialPrecioUpdateWithWhereUniqueWithoutServicioInput | HistorialPrecioUpdateWithWhereUniqueWithoutServicioInput[]
    updateMany?: HistorialPrecioUpdateManyWithWhereWithoutServicioInput | HistorialPrecioUpdateManyWithWhereWithoutServicioInput[]
    deleteMany?: HistorialPrecioScalarWhereInput | HistorialPrecioScalarWhereInput[]
  }

  export type ItemUpdateManyWithoutServicioNestedInput = {
    create?: XOR<ItemCreateWithoutServicioInput, ItemUncheckedCreateWithoutServicioInput> | ItemCreateWithoutServicioInput[] | ItemUncheckedCreateWithoutServicioInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutServicioInput | ItemCreateOrConnectWithoutServicioInput[]
    upsert?: ItemUpsertWithWhereUniqueWithoutServicioInput | ItemUpsertWithWhereUniqueWithoutServicioInput[]
    createMany?: ItemCreateManyServicioInputEnvelope
    set?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    disconnect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    delete?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    update?: ItemUpdateWithWhereUniqueWithoutServicioInput | ItemUpdateWithWhereUniqueWithoutServicioInput[]
    updateMany?: ItemUpdateManyWithWhereWithoutServicioInput | ItemUpdateManyWithWhereWithoutServicioInput[]
    deleteMany?: ItemScalarWhereInput | ItemScalarWhereInput[]
  }

  export type MonedaUpdateOneRequiredWithoutServiciosNestedInput = {
    create?: XOR<MonedaCreateWithoutServiciosInput, MonedaUncheckedCreateWithoutServiciosInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutServiciosInput
    upsert?: MonedaUpsertWithoutServiciosInput
    connect?: MonedaWhereUniqueInput
    update?: XOR<XOR<MonedaUpdateToOneWithWhereWithoutServiciosInput, MonedaUpdateWithoutServiciosInput>, MonedaUncheckedUpdateWithoutServiciosInput>
  }

  export type PersonaUpdateOneRequiredWithoutServiciosNestedInput = {
    create?: XOR<PersonaCreateWithoutServiciosInput, PersonaUncheckedCreateWithoutServiciosInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutServiciosInput
    upsert?: PersonaUpsertWithoutServiciosInput
    connect?: PersonaWhereUniqueInput
    update?: XOR<XOR<PersonaUpdateToOneWithWhereWithoutServiciosInput, PersonaUpdateWithoutServiciosInput>, PersonaUncheckedUpdateWithoutServiciosInput>
  }

  export type HistorialPrecioUncheckedUpdateManyWithoutServicioNestedInput = {
    create?: XOR<HistorialPrecioCreateWithoutServicioInput, HistorialPrecioUncheckedCreateWithoutServicioInput> | HistorialPrecioCreateWithoutServicioInput[] | HistorialPrecioUncheckedCreateWithoutServicioInput[]
    connectOrCreate?: HistorialPrecioCreateOrConnectWithoutServicioInput | HistorialPrecioCreateOrConnectWithoutServicioInput[]
    upsert?: HistorialPrecioUpsertWithWhereUniqueWithoutServicioInput | HistorialPrecioUpsertWithWhereUniqueWithoutServicioInput[]
    createMany?: HistorialPrecioCreateManyServicioInputEnvelope
    set?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    disconnect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    delete?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    connect?: HistorialPrecioWhereUniqueInput | HistorialPrecioWhereUniqueInput[]
    update?: HistorialPrecioUpdateWithWhereUniqueWithoutServicioInput | HistorialPrecioUpdateWithWhereUniqueWithoutServicioInput[]
    updateMany?: HistorialPrecioUpdateManyWithWhereWithoutServicioInput | HistorialPrecioUpdateManyWithWhereWithoutServicioInput[]
    deleteMany?: HistorialPrecioScalarWhereInput | HistorialPrecioScalarWhereInput[]
  }

  export type ItemUncheckedUpdateManyWithoutServicioNestedInput = {
    create?: XOR<ItemCreateWithoutServicioInput, ItemUncheckedCreateWithoutServicioInput> | ItemCreateWithoutServicioInput[] | ItemUncheckedCreateWithoutServicioInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutServicioInput | ItemCreateOrConnectWithoutServicioInput[]
    upsert?: ItemUpsertWithWhereUniqueWithoutServicioInput | ItemUpsertWithWhereUniqueWithoutServicioInput[]
    createMany?: ItemCreateManyServicioInputEnvelope
    set?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    disconnect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    delete?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    update?: ItemUpdateWithWhereUniqueWithoutServicioInput | ItemUpdateWithWhereUniqueWithoutServicioInput[]
    updateMany?: ItemUpdateManyWithWhereWithoutServicioInput | ItemUpdateManyWithWhereWithoutServicioInput[]
    deleteMany?: ItemScalarWhereInput | ItemScalarWhereInput[]
  }

  export type AsignacionGastoProyectoCreateNestedManyWithoutPresupuestoInput = {
    create?: XOR<AsignacionGastoProyectoCreateWithoutPresupuestoInput, AsignacionGastoProyectoUncheckedCreateWithoutPresupuestoInput> | AsignacionGastoProyectoCreateWithoutPresupuestoInput[] | AsignacionGastoProyectoUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: AsignacionGastoProyectoCreateOrConnectWithoutPresupuestoInput | AsignacionGastoProyectoCreateOrConnectWithoutPresupuestoInput[]
    createMany?: AsignacionGastoProyectoCreateManyPresupuestoInputEnvelope
    connect?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
  }

  export type FacturaCreateNestedManyWithoutPresupuestoInput = {
    create?: XOR<FacturaCreateWithoutPresupuestoInput, FacturaUncheckedCreateWithoutPresupuestoInput> | FacturaCreateWithoutPresupuestoInput[] | FacturaUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: FacturaCreateOrConnectWithoutPresupuestoInput | FacturaCreateOrConnectWithoutPresupuestoInput[]
    createMany?: FacturaCreateManyPresupuestoInputEnvelope
    connect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
  }

  export type ItemCreateNestedManyWithoutPresupuestoInput = {
    create?: XOR<ItemCreateWithoutPresupuestoInput, ItemUncheckedCreateWithoutPresupuestoInput> | ItemCreateWithoutPresupuestoInput[] | ItemUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutPresupuestoInput | ItemCreateOrConnectWithoutPresupuestoInput[]
    createMany?: ItemCreateManyPresupuestoInputEnvelope
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
  }

  export type PersonaCreateNestedOneWithoutPresupuestosInput = {
    create?: XOR<PersonaCreateWithoutPresupuestosInput, PersonaUncheckedCreateWithoutPresupuestosInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutPresupuestosInput
    connect?: PersonaWhereUniqueInput
  }

  export type EmpresaCreateNestedOneWithoutPresupuestosInput = {
    create?: XOR<EmpresaCreateWithoutPresupuestosInput, EmpresaUncheckedCreateWithoutPresupuestosInput>
    connectOrCreate?: EmpresaCreateOrConnectWithoutPresupuestosInput
    connect?: EmpresaWhereUniqueInput
  }

  export type MonedaCreateNestedOneWithoutPresupuestosInput = {
    create?: XOR<MonedaCreateWithoutPresupuestosInput, MonedaUncheckedCreateWithoutPresupuestosInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutPresupuestosInput
    connect?: MonedaWhereUniqueInput
  }

  export type PresupuestoImpuestoCreateNestedManyWithoutPresupuestoInput = {
    create?: XOR<PresupuestoImpuestoCreateWithoutPresupuestoInput, PresupuestoImpuestoUncheckedCreateWithoutPresupuestoInput> | PresupuestoImpuestoCreateWithoutPresupuestoInput[] | PresupuestoImpuestoUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: PresupuestoImpuestoCreateOrConnectWithoutPresupuestoInput | PresupuestoImpuestoCreateOrConnectWithoutPresupuestoInput[]
    createMany?: PresupuestoImpuestoCreateManyPresupuestoInputEnvelope
    connect?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
  }

  export type ReciboCreateNestedManyWithoutPresupuestoInput = {
    create?: XOR<ReciboCreateWithoutPresupuestoInput, ReciboUncheckedCreateWithoutPresupuestoInput> | ReciboCreateWithoutPresupuestoInput[] | ReciboUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: ReciboCreateOrConnectWithoutPresupuestoInput | ReciboCreateOrConnectWithoutPresupuestoInput[]
    createMany?: ReciboCreateManyPresupuestoInputEnvelope
    connect?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
  }

  export type PagoAdminCreateNestedManyWithoutPresupuestoInput = {
    create?: XOR<PagoAdminCreateWithoutPresupuestoInput, PagoAdminUncheckedCreateWithoutPresupuestoInput> | PagoAdminCreateWithoutPresupuestoInput[] | PagoAdminUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: PagoAdminCreateOrConnectWithoutPresupuestoInput | PagoAdminCreateOrConnectWithoutPresupuestoInput[]
    createMany?: PagoAdminCreateManyPresupuestoInputEnvelope
    connect?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
  }

  export type CobroClienteCreateNestedManyWithoutPresupuestoInput = {
    create?: XOR<CobroClienteCreateWithoutPresupuestoInput, CobroClienteUncheckedCreateWithoutPresupuestoInput> | CobroClienteCreateWithoutPresupuestoInput[] | CobroClienteUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: CobroClienteCreateOrConnectWithoutPresupuestoInput | CobroClienteCreateOrConnectWithoutPresupuestoInput[]
    createMany?: CobroClienteCreateManyPresupuestoInputEnvelope
    connect?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
  }

  export type AsignacionGastoProyectoUncheckedCreateNestedManyWithoutPresupuestoInput = {
    create?: XOR<AsignacionGastoProyectoCreateWithoutPresupuestoInput, AsignacionGastoProyectoUncheckedCreateWithoutPresupuestoInput> | AsignacionGastoProyectoCreateWithoutPresupuestoInput[] | AsignacionGastoProyectoUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: AsignacionGastoProyectoCreateOrConnectWithoutPresupuestoInput | AsignacionGastoProyectoCreateOrConnectWithoutPresupuestoInput[]
    createMany?: AsignacionGastoProyectoCreateManyPresupuestoInputEnvelope
    connect?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
  }

  export type FacturaUncheckedCreateNestedManyWithoutPresupuestoInput = {
    create?: XOR<FacturaCreateWithoutPresupuestoInput, FacturaUncheckedCreateWithoutPresupuestoInput> | FacturaCreateWithoutPresupuestoInput[] | FacturaUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: FacturaCreateOrConnectWithoutPresupuestoInput | FacturaCreateOrConnectWithoutPresupuestoInput[]
    createMany?: FacturaCreateManyPresupuestoInputEnvelope
    connect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
  }

  export type ItemUncheckedCreateNestedManyWithoutPresupuestoInput = {
    create?: XOR<ItemCreateWithoutPresupuestoInput, ItemUncheckedCreateWithoutPresupuestoInput> | ItemCreateWithoutPresupuestoInput[] | ItemUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutPresupuestoInput | ItemCreateOrConnectWithoutPresupuestoInput[]
    createMany?: ItemCreateManyPresupuestoInputEnvelope
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
  }

  export type PresupuestoImpuestoUncheckedCreateNestedManyWithoutPresupuestoInput = {
    create?: XOR<PresupuestoImpuestoCreateWithoutPresupuestoInput, PresupuestoImpuestoUncheckedCreateWithoutPresupuestoInput> | PresupuestoImpuestoCreateWithoutPresupuestoInput[] | PresupuestoImpuestoUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: PresupuestoImpuestoCreateOrConnectWithoutPresupuestoInput | PresupuestoImpuestoCreateOrConnectWithoutPresupuestoInput[]
    createMany?: PresupuestoImpuestoCreateManyPresupuestoInputEnvelope
    connect?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
  }

  export type ReciboUncheckedCreateNestedManyWithoutPresupuestoInput = {
    create?: XOR<ReciboCreateWithoutPresupuestoInput, ReciboUncheckedCreateWithoutPresupuestoInput> | ReciboCreateWithoutPresupuestoInput[] | ReciboUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: ReciboCreateOrConnectWithoutPresupuestoInput | ReciboCreateOrConnectWithoutPresupuestoInput[]
    createMany?: ReciboCreateManyPresupuestoInputEnvelope
    connect?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
  }

  export type PagoAdminUncheckedCreateNestedManyWithoutPresupuestoInput = {
    create?: XOR<PagoAdminCreateWithoutPresupuestoInput, PagoAdminUncheckedCreateWithoutPresupuestoInput> | PagoAdminCreateWithoutPresupuestoInput[] | PagoAdminUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: PagoAdminCreateOrConnectWithoutPresupuestoInput | PagoAdminCreateOrConnectWithoutPresupuestoInput[]
    createMany?: PagoAdminCreateManyPresupuestoInputEnvelope
    connect?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
  }

  export type CobroClienteUncheckedCreateNestedManyWithoutPresupuestoInput = {
    create?: XOR<CobroClienteCreateWithoutPresupuestoInput, CobroClienteUncheckedCreateWithoutPresupuestoInput> | CobroClienteCreateWithoutPresupuestoInput[] | CobroClienteUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: CobroClienteCreateOrConnectWithoutPresupuestoInput | CobroClienteCreateOrConnectWithoutPresupuestoInput[]
    createMany?: CobroClienteCreateManyPresupuestoInputEnvelope
    connect?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
  }

  export type EnumEstadoPresupuestoFieldUpdateOperationsInput = {
    set?: $Enums.EstadoPresupuesto
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableEnumFrecuenciaContratoFieldUpdateOperationsInput = {
    set?: $Enums.FrecuenciaContrato | null
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type AsignacionGastoProyectoUpdateManyWithoutPresupuestoNestedInput = {
    create?: XOR<AsignacionGastoProyectoCreateWithoutPresupuestoInput, AsignacionGastoProyectoUncheckedCreateWithoutPresupuestoInput> | AsignacionGastoProyectoCreateWithoutPresupuestoInput[] | AsignacionGastoProyectoUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: AsignacionGastoProyectoCreateOrConnectWithoutPresupuestoInput | AsignacionGastoProyectoCreateOrConnectWithoutPresupuestoInput[]
    upsert?: AsignacionGastoProyectoUpsertWithWhereUniqueWithoutPresupuestoInput | AsignacionGastoProyectoUpsertWithWhereUniqueWithoutPresupuestoInput[]
    createMany?: AsignacionGastoProyectoCreateManyPresupuestoInputEnvelope
    set?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
    disconnect?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
    delete?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
    connect?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
    update?: AsignacionGastoProyectoUpdateWithWhereUniqueWithoutPresupuestoInput | AsignacionGastoProyectoUpdateWithWhereUniqueWithoutPresupuestoInput[]
    updateMany?: AsignacionGastoProyectoUpdateManyWithWhereWithoutPresupuestoInput | AsignacionGastoProyectoUpdateManyWithWhereWithoutPresupuestoInput[]
    deleteMany?: AsignacionGastoProyectoScalarWhereInput | AsignacionGastoProyectoScalarWhereInput[]
  }

  export type FacturaUpdateManyWithoutPresupuestoNestedInput = {
    create?: XOR<FacturaCreateWithoutPresupuestoInput, FacturaUncheckedCreateWithoutPresupuestoInput> | FacturaCreateWithoutPresupuestoInput[] | FacturaUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: FacturaCreateOrConnectWithoutPresupuestoInput | FacturaCreateOrConnectWithoutPresupuestoInput[]
    upsert?: FacturaUpsertWithWhereUniqueWithoutPresupuestoInput | FacturaUpsertWithWhereUniqueWithoutPresupuestoInput[]
    createMany?: FacturaCreateManyPresupuestoInputEnvelope
    set?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    disconnect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    delete?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    connect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    update?: FacturaUpdateWithWhereUniqueWithoutPresupuestoInput | FacturaUpdateWithWhereUniqueWithoutPresupuestoInput[]
    updateMany?: FacturaUpdateManyWithWhereWithoutPresupuestoInput | FacturaUpdateManyWithWhereWithoutPresupuestoInput[]
    deleteMany?: FacturaScalarWhereInput | FacturaScalarWhereInput[]
  }

  export type ItemUpdateManyWithoutPresupuestoNestedInput = {
    create?: XOR<ItemCreateWithoutPresupuestoInput, ItemUncheckedCreateWithoutPresupuestoInput> | ItemCreateWithoutPresupuestoInput[] | ItemUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutPresupuestoInput | ItemCreateOrConnectWithoutPresupuestoInput[]
    upsert?: ItemUpsertWithWhereUniqueWithoutPresupuestoInput | ItemUpsertWithWhereUniqueWithoutPresupuestoInput[]
    createMany?: ItemCreateManyPresupuestoInputEnvelope
    set?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    disconnect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    delete?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    update?: ItemUpdateWithWhereUniqueWithoutPresupuestoInput | ItemUpdateWithWhereUniqueWithoutPresupuestoInput[]
    updateMany?: ItemUpdateManyWithWhereWithoutPresupuestoInput | ItemUpdateManyWithWhereWithoutPresupuestoInput[]
    deleteMany?: ItemScalarWhereInput | ItemScalarWhereInput[]
  }

  export type PersonaUpdateOneRequiredWithoutPresupuestosNestedInput = {
    create?: XOR<PersonaCreateWithoutPresupuestosInput, PersonaUncheckedCreateWithoutPresupuestosInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutPresupuestosInput
    upsert?: PersonaUpsertWithoutPresupuestosInput
    connect?: PersonaWhereUniqueInput
    update?: XOR<XOR<PersonaUpdateToOneWithWhereWithoutPresupuestosInput, PersonaUpdateWithoutPresupuestosInput>, PersonaUncheckedUpdateWithoutPresupuestosInput>
  }

  export type EmpresaUpdateOneWithoutPresupuestosNestedInput = {
    create?: XOR<EmpresaCreateWithoutPresupuestosInput, EmpresaUncheckedCreateWithoutPresupuestosInput>
    connectOrCreate?: EmpresaCreateOrConnectWithoutPresupuestosInput
    upsert?: EmpresaUpsertWithoutPresupuestosInput
    disconnect?: EmpresaWhereInput | boolean
    delete?: EmpresaWhereInput | boolean
    connect?: EmpresaWhereUniqueInput
    update?: XOR<XOR<EmpresaUpdateToOneWithWhereWithoutPresupuestosInput, EmpresaUpdateWithoutPresupuestosInput>, EmpresaUncheckedUpdateWithoutPresupuestosInput>
  }

  export type MonedaUpdateOneRequiredWithoutPresupuestosNestedInput = {
    create?: XOR<MonedaCreateWithoutPresupuestosInput, MonedaUncheckedCreateWithoutPresupuestosInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutPresupuestosInput
    upsert?: MonedaUpsertWithoutPresupuestosInput
    connect?: MonedaWhereUniqueInput
    update?: XOR<XOR<MonedaUpdateToOneWithWhereWithoutPresupuestosInput, MonedaUpdateWithoutPresupuestosInput>, MonedaUncheckedUpdateWithoutPresupuestosInput>
  }

  export type PresupuestoImpuestoUpdateManyWithoutPresupuestoNestedInput = {
    create?: XOR<PresupuestoImpuestoCreateWithoutPresupuestoInput, PresupuestoImpuestoUncheckedCreateWithoutPresupuestoInput> | PresupuestoImpuestoCreateWithoutPresupuestoInput[] | PresupuestoImpuestoUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: PresupuestoImpuestoCreateOrConnectWithoutPresupuestoInput | PresupuestoImpuestoCreateOrConnectWithoutPresupuestoInput[]
    upsert?: PresupuestoImpuestoUpsertWithWhereUniqueWithoutPresupuestoInput | PresupuestoImpuestoUpsertWithWhereUniqueWithoutPresupuestoInput[]
    createMany?: PresupuestoImpuestoCreateManyPresupuestoInputEnvelope
    set?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
    disconnect?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
    delete?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
    connect?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
    update?: PresupuestoImpuestoUpdateWithWhereUniqueWithoutPresupuestoInput | PresupuestoImpuestoUpdateWithWhereUniqueWithoutPresupuestoInput[]
    updateMany?: PresupuestoImpuestoUpdateManyWithWhereWithoutPresupuestoInput | PresupuestoImpuestoUpdateManyWithWhereWithoutPresupuestoInput[]
    deleteMany?: PresupuestoImpuestoScalarWhereInput | PresupuestoImpuestoScalarWhereInput[]
  }

  export type ReciboUpdateManyWithoutPresupuestoNestedInput = {
    create?: XOR<ReciboCreateWithoutPresupuestoInput, ReciboUncheckedCreateWithoutPresupuestoInput> | ReciboCreateWithoutPresupuestoInput[] | ReciboUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: ReciboCreateOrConnectWithoutPresupuestoInput | ReciboCreateOrConnectWithoutPresupuestoInput[]
    upsert?: ReciboUpsertWithWhereUniqueWithoutPresupuestoInput | ReciboUpsertWithWhereUniqueWithoutPresupuestoInput[]
    createMany?: ReciboCreateManyPresupuestoInputEnvelope
    set?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    disconnect?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    delete?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    connect?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    update?: ReciboUpdateWithWhereUniqueWithoutPresupuestoInput | ReciboUpdateWithWhereUniqueWithoutPresupuestoInput[]
    updateMany?: ReciboUpdateManyWithWhereWithoutPresupuestoInput | ReciboUpdateManyWithWhereWithoutPresupuestoInput[]
    deleteMany?: ReciboScalarWhereInput | ReciboScalarWhereInput[]
  }

  export type PagoAdminUpdateManyWithoutPresupuestoNestedInput = {
    create?: XOR<PagoAdminCreateWithoutPresupuestoInput, PagoAdminUncheckedCreateWithoutPresupuestoInput> | PagoAdminCreateWithoutPresupuestoInput[] | PagoAdminUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: PagoAdminCreateOrConnectWithoutPresupuestoInput | PagoAdminCreateOrConnectWithoutPresupuestoInput[]
    upsert?: PagoAdminUpsertWithWhereUniqueWithoutPresupuestoInput | PagoAdminUpsertWithWhereUniqueWithoutPresupuestoInput[]
    createMany?: PagoAdminCreateManyPresupuestoInputEnvelope
    set?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    disconnect?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    delete?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    connect?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    update?: PagoAdminUpdateWithWhereUniqueWithoutPresupuestoInput | PagoAdminUpdateWithWhereUniqueWithoutPresupuestoInput[]
    updateMany?: PagoAdminUpdateManyWithWhereWithoutPresupuestoInput | PagoAdminUpdateManyWithWhereWithoutPresupuestoInput[]
    deleteMany?: PagoAdminScalarWhereInput | PagoAdminScalarWhereInput[]
  }

  export type CobroClienteUpdateManyWithoutPresupuestoNestedInput = {
    create?: XOR<CobroClienteCreateWithoutPresupuestoInput, CobroClienteUncheckedCreateWithoutPresupuestoInput> | CobroClienteCreateWithoutPresupuestoInput[] | CobroClienteUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: CobroClienteCreateOrConnectWithoutPresupuestoInput | CobroClienteCreateOrConnectWithoutPresupuestoInput[]
    upsert?: CobroClienteUpsertWithWhereUniqueWithoutPresupuestoInput | CobroClienteUpsertWithWhereUniqueWithoutPresupuestoInput[]
    createMany?: CobroClienteCreateManyPresupuestoInputEnvelope
    set?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
    disconnect?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
    delete?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
    connect?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
    update?: CobroClienteUpdateWithWhereUniqueWithoutPresupuestoInput | CobroClienteUpdateWithWhereUniqueWithoutPresupuestoInput[]
    updateMany?: CobroClienteUpdateManyWithWhereWithoutPresupuestoInput | CobroClienteUpdateManyWithWhereWithoutPresupuestoInput[]
    deleteMany?: CobroClienteScalarWhereInput | CobroClienteScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type AsignacionGastoProyectoUncheckedUpdateManyWithoutPresupuestoNestedInput = {
    create?: XOR<AsignacionGastoProyectoCreateWithoutPresupuestoInput, AsignacionGastoProyectoUncheckedCreateWithoutPresupuestoInput> | AsignacionGastoProyectoCreateWithoutPresupuestoInput[] | AsignacionGastoProyectoUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: AsignacionGastoProyectoCreateOrConnectWithoutPresupuestoInput | AsignacionGastoProyectoCreateOrConnectWithoutPresupuestoInput[]
    upsert?: AsignacionGastoProyectoUpsertWithWhereUniqueWithoutPresupuestoInput | AsignacionGastoProyectoUpsertWithWhereUniqueWithoutPresupuestoInput[]
    createMany?: AsignacionGastoProyectoCreateManyPresupuestoInputEnvelope
    set?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
    disconnect?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
    delete?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
    connect?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
    update?: AsignacionGastoProyectoUpdateWithWhereUniqueWithoutPresupuestoInput | AsignacionGastoProyectoUpdateWithWhereUniqueWithoutPresupuestoInput[]
    updateMany?: AsignacionGastoProyectoUpdateManyWithWhereWithoutPresupuestoInput | AsignacionGastoProyectoUpdateManyWithWhereWithoutPresupuestoInput[]
    deleteMany?: AsignacionGastoProyectoScalarWhereInput | AsignacionGastoProyectoScalarWhereInput[]
  }

  export type FacturaUncheckedUpdateManyWithoutPresupuestoNestedInput = {
    create?: XOR<FacturaCreateWithoutPresupuestoInput, FacturaUncheckedCreateWithoutPresupuestoInput> | FacturaCreateWithoutPresupuestoInput[] | FacturaUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: FacturaCreateOrConnectWithoutPresupuestoInput | FacturaCreateOrConnectWithoutPresupuestoInput[]
    upsert?: FacturaUpsertWithWhereUniqueWithoutPresupuestoInput | FacturaUpsertWithWhereUniqueWithoutPresupuestoInput[]
    createMany?: FacturaCreateManyPresupuestoInputEnvelope
    set?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    disconnect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    delete?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    connect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    update?: FacturaUpdateWithWhereUniqueWithoutPresupuestoInput | FacturaUpdateWithWhereUniqueWithoutPresupuestoInput[]
    updateMany?: FacturaUpdateManyWithWhereWithoutPresupuestoInput | FacturaUpdateManyWithWhereWithoutPresupuestoInput[]
    deleteMany?: FacturaScalarWhereInput | FacturaScalarWhereInput[]
  }

  export type ItemUncheckedUpdateManyWithoutPresupuestoNestedInput = {
    create?: XOR<ItemCreateWithoutPresupuestoInput, ItemUncheckedCreateWithoutPresupuestoInput> | ItemCreateWithoutPresupuestoInput[] | ItemUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutPresupuestoInput | ItemCreateOrConnectWithoutPresupuestoInput[]
    upsert?: ItemUpsertWithWhereUniqueWithoutPresupuestoInput | ItemUpsertWithWhereUniqueWithoutPresupuestoInput[]
    createMany?: ItemCreateManyPresupuestoInputEnvelope
    set?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    disconnect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    delete?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    update?: ItemUpdateWithWhereUniqueWithoutPresupuestoInput | ItemUpdateWithWhereUniqueWithoutPresupuestoInput[]
    updateMany?: ItemUpdateManyWithWhereWithoutPresupuestoInput | ItemUpdateManyWithWhereWithoutPresupuestoInput[]
    deleteMany?: ItemScalarWhereInput | ItemScalarWhereInput[]
  }

  export type PresupuestoImpuestoUncheckedUpdateManyWithoutPresupuestoNestedInput = {
    create?: XOR<PresupuestoImpuestoCreateWithoutPresupuestoInput, PresupuestoImpuestoUncheckedCreateWithoutPresupuestoInput> | PresupuestoImpuestoCreateWithoutPresupuestoInput[] | PresupuestoImpuestoUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: PresupuestoImpuestoCreateOrConnectWithoutPresupuestoInput | PresupuestoImpuestoCreateOrConnectWithoutPresupuestoInput[]
    upsert?: PresupuestoImpuestoUpsertWithWhereUniqueWithoutPresupuestoInput | PresupuestoImpuestoUpsertWithWhereUniqueWithoutPresupuestoInput[]
    createMany?: PresupuestoImpuestoCreateManyPresupuestoInputEnvelope
    set?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
    disconnect?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
    delete?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
    connect?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
    update?: PresupuestoImpuestoUpdateWithWhereUniqueWithoutPresupuestoInput | PresupuestoImpuestoUpdateWithWhereUniqueWithoutPresupuestoInput[]
    updateMany?: PresupuestoImpuestoUpdateManyWithWhereWithoutPresupuestoInput | PresupuestoImpuestoUpdateManyWithWhereWithoutPresupuestoInput[]
    deleteMany?: PresupuestoImpuestoScalarWhereInput | PresupuestoImpuestoScalarWhereInput[]
  }

  export type ReciboUncheckedUpdateManyWithoutPresupuestoNestedInput = {
    create?: XOR<ReciboCreateWithoutPresupuestoInput, ReciboUncheckedCreateWithoutPresupuestoInput> | ReciboCreateWithoutPresupuestoInput[] | ReciboUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: ReciboCreateOrConnectWithoutPresupuestoInput | ReciboCreateOrConnectWithoutPresupuestoInput[]
    upsert?: ReciboUpsertWithWhereUniqueWithoutPresupuestoInput | ReciboUpsertWithWhereUniqueWithoutPresupuestoInput[]
    createMany?: ReciboCreateManyPresupuestoInputEnvelope
    set?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    disconnect?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    delete?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    connect?: ReciboWhereUniqueInput | ReciboWhereUniqueInput[]
    update?: ReciboUpdateWithWhereUniqueWithoutPresupuestoInput | ReciboUpdateWithWhereUniqueWithoutPresupuestoInput[]
    updateMany?: ReciboUpdateManyWithWhereWithoutPresupuestoInput | ReciboUpdateManyWithWhereWithoutPresupuestoInput[]
    deleteMany?: ReciboScalarWhereInput | ReciboScalarWhereInput[]
  }

  export type PagoAdminUncheckedUpdateManyWithoutPresupuestoNestedInput = {
    create?: XOR<PagoAdminCreateWithoutPresupuestoInput, PagoAdminUncheckedCreateWithoutPresupuestoInput> | PagoAdminCreateWithoutPresupuestoInput[] | PagoAdminUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: PagoAdminCreateOrConnectWithoutPresupuestoInput | PagoAdminCreateOrConnectWithoutPresupuestoInput[]
    upsert?: PagoAdminUpsertWithWhereUniqueWithoutPresupuestoInput | PagoAdminUpsertWithWhereUniqueWithoutPresupuestoInput[]
    createMany?: PagoAdminCreateManyPresupuestoInputEnvelope
    set?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    disconnect?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    delete?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    connect?: PagoAdminWhereUniqueInput | PagoAdminWhereUniqueInput[]
    update?: PagoAdminUpdateWithWhereUniqueWithoutPresupuestoInput | PagoAdminUpdateWithWhereUniqueWithoutPresupuestoInput[]
    updateMany?: PagoAdminUpdateManyWithWhereWithoutPresupuestoInput | PagoAdminUpdateManyWithWhereWithoutPresupuestoInput[]
    deleteMany?: PagoAdminScalarWhereInput | PagoAdminScalarWhereInput[]
  }

  export type CobroClienteUncheckedUpdateManyWithoutPresupuestoNestedInput = {
    create?: XOR<CobroClienteCreateWithoutPresupuestoInput, CobroClienteUncheckedCreateWithoutPresupuestoInput> | CobroClienteCreateWithoutPresupuestoInput[] | CobroClienteUncheckedCreateWithoutPresupuestoInput[]
    connectOrCreate?: CobroClienteCreateOrConnectWithoutPresupuestoInput | CobroClienteCreateOrConnectWithoutPresupuestoInput[]
    upsert?: CobroClienteUpsertWithWhereUniqueWithoutPresupuestoInput | CobroClienteUpsertWithWhereUniqueWithoutPresupuestoInput[]
    createMany?: CobroClienteCreateManyPresupuestoInputEnvelope
    set?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
    disconnect?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
    delete?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
    connect?: CobroClienteWhereUniqueInput | CobroClienteWhereUniqueInput[]
    update?: CobroClienteUpdateWithWhereUniqueWithoutPresupuestoInput | CobroClienteUpdateWithWhereUniqueWithoutPresupuestoInput[]
    updateMany?: CobroClienteUpdateManyWithWhereWithoutPresupuestoInput | CobroClienteUpdateManyWithWhereWithoutPresupuestoInput[]
    deleteMany?: CobroClienteScalarWhereInput | CobroClienteScalarWhereInput[]
  }

  export type PresupuestoCreateNestedOneWithoutItemsInput = {
    create?: XOR<PresupuestoCreateWithoutItemsInput, PresupuestoUncheckedCreateWithoutItemsInput>
    connectOrCreate?: PresupuestoCreateOrConnectWithoutItemsInput
    connect?: PresupuestoWhereUniqueInput
  }

  export type ProductoCreateNestedOneWithoutItemsInput = {
    create?: XOR<ProductoCreateWithoutItemsInput, ProductoUncheckedCreateWithoutItemsInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutItemsInput
    connect?: ProductoWhereUniqueInput
  }

  export type ServicioCreateNestedOneWithoutItemsInput = {
    create?: XOR<ServicioCreateWithoutItemsInput, ServicioUncheckedCreateWithoutItemsInput>
    connectOrCreate?: ServicioCreateOrConnectWithoutItemsInput
    connect?: ServicioWhereUniqueInput
  }

  export type PresupuestoUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<PresupuestoCreateWithoutItemsInput, PresupuestoUncheckedCreateWithoutItemsInput>
    connectOrCreate?: PresupuestoCreateOrConnectWithoutItemsInput
    upsert?: PresupuestoUpsertWithoutItemsInput
    connect?: PresupuestoWhereUniqueInput
    update?: XOR<XOR<PresupuestoUpdateToOneWithWhereWithoutItemsInput, PresupuestoUpdateWithoutItemsInput>, PresupuestoUncheckedUpdateWithoutItemsInput>
  }

  export type ProductoUpdateOneWithoutItemsNestedInput = {
    create?: XOR<ProductoCreateWithoutItemsInput, ProductoUncheckedCreateWithoutItemsInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutItemsInput
    upsert?: ProductoUpsertWithoutItemsInput
    disconnect?: ProductoWhereInput | boolean
    delete?: ProductoWhereInput | boolean
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutItemsInput, ProductoUpdateWithoutItemsInput>, ProductoUncheckedUpdateWithoutItemsInput>
  }

  export type ServicioUpdateOneWithoutItemsNestedInput = {
    create?: XOR<ServicioCreateWithoutItemsInput, ServicioUncheckedCreateWithoutItemsInput>
    connectOrCreate?: ServicioCreateOrConnectWithoutItemsInput
    upsert?: ServicioUpsertWithoutItemsInput
    disconnect?: ServicioWhereInput | boolean
    delete?: ServicioWhereInput | boolean
    connect?: ServicioWhereUniqueInput
    update?: XOR<XOR<ServicioUpdateToOneWithWhereWithoutItemsInput, ServicioUpdateWithoutItemsInput>, ServicioUncheckedUpdateWithoutItemsInput>
  }

  export type EmpresaCreateNestedOneWithoutFacturasInput = {
    create?: XOR<EmpresaCreateWithoutFacturasInput, EmpresaUncheckedCreateWithoutFacturasInput>
    connectOrCreate?: EmpresaCreateOrConnectWithoutFacturasInput
    connect?: EmpresaWhereUniqueInput
  }

  export type ImpuestoCreateNestedOneWithoutFacturasInput = {
    create?: XOR<ImpuestoCreateWithoutFacturasInput, ImpuestoUncheckedCreateWithoutFacturasInput>
    connectOrCreate?: ImpuestoCreateOrConnectWithoutFacturasInput
    connect?: ImpuestoWhereUniqueInput
  }

  export type MonedaCreateNestedOneWithoutFacturasInput = {
    create?: XOR<MonedaCreateWithoutFacturasInput, MonedaUncheckedCreateWithoutFacturasInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutFacturasInput
    connect?: MonedaWhereUniqueInput
  }

  export type PresupuestoCreateNestedOneWithoutFacturasInput = {
    create?: XOR<PresupuestoCreateWithoutFacturasInput, PresupuestoUncheckedCreateWithoutFacturasInput>
    connectOrCreate?: PresupuestoCreateOrConnectWithoutFacturasInput
    connect?: PresupuestoWhereUniqueInput
  }

  export type EnumEstadoFacturaFieldUpdateOperationsInput = {
    set?: $Enums.EstadoFactura
  }

  export type EmpresaUpdateOneWithoutFacturasNestedInput = {
    create?: XOR<EmpresaCreateWithoutFacturasInput, EmpresaUncheckedCreateWithoutFacturasInput>
    connectOrCreate?: EmpresaCreateOrConnectWithoutFacturasInput
    upsert?: EmpresaUpsertWithoutFacturasInput
    disconnect?: EmpresaWhereInput | boolean
    delete?: EmpresaWhereInput | boolean
    connect?: EmpresaWhereUniqueInput
    update?: XOR<XOR<EmpresaUpdateToOneWithWhereWithoutFacturasInput, EmpresaUpdateWithoutFacturasInput>, EmpresaUncheckedUpdateWithoutFacturasInput>
  }

  export type ImpuestoUpdateOneRequiredWithoutFacturasNestedInput = {
    create?: XOR<ImpuestoCreateWithoutFacturasInput, ImpuestoUncheckedCreateWithoutFacturasInput>
    connectOrCreate?: ImpuestoCreateOrConnectWithoutFacturasInput
    upsert?: ImpuestoUpsertWithoutFacturasInput
    connect?: ImpuestoWhereUniqueInput
    update?: XOR<XOR<ImpuestoUpdateToOneWithWhereWithoutFacturasInput, ImpuestoUpdateWithoutFacturasInput>, ImpuestoUncheckedUpdateWithoutFacturasInput>
  }

  export type MonedaUpdateOneRequiredWithoutFacturasNestedInput = {
    create?: XOR<MonedaCreateWithoutFacturasInput, MonedaUncheckedCreateWithoutFacturasInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutFacturasInput
    upsert?: MonedaUpsertWithoutFacturasInput
    connect?: MonedaWhereUniqueInput
    update?: XOR<XOR<MonedaUpdateToOneWithWhereWithoutFacturasInput, MonedaUpdateWithoutFacturasInput>, MonedaUncheckedUpdateWithoutFacturasInput>
  }

  export type PresupuestoUpdateOneRequiredWithoutFacturasNestedInput = {
    create?: XOR<PresupuestoCreateWithoutFacturasInput, PresupuestoUncheckedCreateWithoutFacturasInput>
    connectOrCreate?: PresupuestoCreateOrConnectWithoutFacturasInput
    upsert?: PresupuestoUpsertWithoutFacturasInput
    connect?: PresupuestoWhereUniqueInput
    update?: XOR<XOR<PresupuestoUpdateToOneWithWhereWithoutFacturasInput, PresupuestoUpdateWithoutFacturasInput>, PresupuestoUncheckedUpdateWithoutFacturasInput>
  }

  export type PersonaCreateNestedOneWithoutRecibosInput = {
    create?: XOR<PersonaCreateWithoutRecibosInput, PersonaUncheckedCreateWithoutRecibosInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutRecibosInput
    connect?: PersonaWhereUniqueInput
  }

  export type PresupuestoCreateNestedOneWithoutRecibosInput = {
    create?: XOR<PresupuestoCreateWithoutRecibosInput, PresupuestoUncheckedCreateWithoutRecibosInput>
    connectOrCreate?: PresupuestoCreateOrConnectWithoutRecibosInput
    connect?: PresupuestoWhereUniqueInput
  }

  export type MonedaCreateNestedOneWithoutRecibosInput = {
    create?: XOR<MonedaCreateWithoutRecibosInput, MonedaUncheckedCreateWithoutRecibosInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutRecibosInput
    connect?: MonedaWhereUniqueInput
  }

  export type EnumReciboTipoFieldUpdateOperationsInput = {
    set?: $Enums.ReciboTipo
  }

  export type PersonaUpdateOneRequiredWithoutRecibosNestedInput = {
    create?: XOR<PersonaCreateWithoutRecibosInput, PersonaUncheckedCreateWithoutRecibosInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutRecibosInput
    upsert?: PersonaUpsertWithoutRecibosInput
    connect?: PersonaWhereUniqueInput
    update?: XOR<XOR<PersonaUpdateToOneWithWhereWithoutRecibosInput, PersonaUpdateWithoutRecibosInput>, PersonaUncheckedUpdateWithoutRecibosInput>
  }

  export type PresupuestoUpdateOneWithoutRecibosNestedInput = {
    create?: XOR<PresupuestoCreateWithoutRecibosInput, PresupuestoUncheckedCreateWithoutRecibosInput>
    connectOrCreate?: PresupuestoCreateOrConnectWithoutRecibosInput
    upsert?: PresupuestoUpsertWithoutRecibosInput
    disconnect?: PresupuestoWhereInput | boolean
    delete?: PresupuestoWhereInput | boolean
    connect?: PresupuestoWhereUniqueInput
    update?: XOR<XOR<PresupuestoUpdateToOneWithWhereWithoutRecibosInput, PresupuestoUpdateWithoutRecibosInput>, PresupuestoUncheckedUpdateWithoutRecibosInput>
  }

  export type MonedaUpdateOneRequiredWithoutRecibosNestedInput = {
    create?: XOR<MonedaCreateWithoutRecibosInput, MonedaUncheckedCreateWithoutRecibosInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutRecibosInput
    upsert?: MonedaUpsertWithoutRecibosInput
    connect?: MonedaWhereUniqueInput
    update?: XOR<XOR<MonedaUpdateToOneWithWhereWithoutRecibosInput, MonedaUpdateWithoutRecibosInput>, MonedaUncheckedUpdateWithoutRecibosInput>
  }

  export type FacturaCreateNestedManyWithoutImpuestoAplicadoInput = {
    create?: XOR<FacturaCreateWithoutImpuestoAplicadoInput, FacturaUncheckedCreateWithoutImpuestoAplicadoInput> | FacturaCreateWithoutImpuestoAplicadoInput[] | FacturaUncheckedCreateWithoutImpuestoAplicadoInput[]
    connectOrCreate?: FacturaCreateOrConnectWithoutImpuestoAplicadoInput | FacturaCreateOrConnectWithoutImpuestoAplicadoInput[]
    createMany?: FacturaCreateManyImpuestoAplicadoInputEnvelope
    connect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
  }

  export type PresupuestoImpuestoCreateNestedManyWithoutImpuestoInput = {
    create?: XOR<PresupuestoImpuestoCreateWithoutImpuestoInput, PresupuestoImpuestoUncheckedCreateWithoutImpuestoInput> | PresupuestoImpuestoCreateWithoutImpuestoInput[] | PresupuestoImpuestoUncheckedCreateWithoutImpuestoInput[]
    connectOrCreate?: PresupuestoImpuestoCreateOrConnectWithoutImpuestoInput | PresupuestoImpuestoCreateOrConnectWithoutImpuestoInput[]
    createMany?: PresupuestoImpuestoCreateManyImpuestoInputEnvelope
    connect?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
  }

  export type FacturaUncheckedCreateNestedManyWithoutImpuestoAplicadoInput = {
    create?: XOR<FacturaCreateWithoutImpuestoAplicadoInput, FacturaUncheckedCreateWithoutImpuestoAplicadoInput> | FacturaCreateWithoutImpuestoAplicadoInput[] | FacturaUncheckedCreateWithoutImpuestoAplicadoInput[]
    connectOrCreate?: FacturaCreateOrConnectWithoutImpuestoAplicadoInput | FacturaCreateOrConnectWithoutImpuestoAplicadoInput[]
    createMany?: FacturaCreateManyImpuestoAplicadoInputEnvelope
    connect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
  }

  export type PresupuestoImpuestoUncheckedCreateNestedManyWithoutImpuestoInput = {
    create?: XOR<PresupuestoImpuestoCreateWithoutImpuestoInput, PresupuestoImpuestoUncheckedCreateWithoutImpuestoInput> | PresupuestoImpuestoCreateWithoutImpuestoInput[] | PresupuestoImpuestoUncheckedCreateWithoutImpuestoInput[]
    connectOrCreate?: PresupuestoImpuestoCreateOrConnectWithoutImpuestoInput | PresupuestoImpuestoCreateOrConnectWithoutImpuestoInput[]
    createMany?: PresupuestoImpuestoCreateManyImpuestoInputEnvelope
    connect?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
  }

  export type FacturaUpdateManyWithoutImpuestoAplicadoNestedInput = {
    create?: XOR<FacturaCreateWithoutImpuestoAplicadoInput, FacturaUncheckedCreateWithoutImpuestoAplicadoInput> | FacturaCreateWithoutImpuestoAplicadoInput[] | FacturaUncheckedCreateWithoutImpuestoAplicadoInput[]
    connectOrCreate?: FacturaCreateOrConnectWithoutImpuestoAplicadoInput | FacturaCreateOrConnectWithoutImpuestoAplicadoInput[]
    upsert?: FacturaUpsertWithWhereUniqueWithoutImpuestoAplicadoInput | FacturaUpsertWithWhereUniqueWithoutImpuestoAplicadoInput[]
    createMany?: FacturaCreateManyImpuestoAplicadoInputEnvelope
    set?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    disconnect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    delete?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    connect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    update?: FacturaUpdateWithWhereUniqueWithoutImpuestoAplicadoInput | FacturaUpdateWithWhereUniqueWithoutImpuestoAplicadoInput[]
    updateMany?: FacturaUpdateManyWithWhereWithoutImpuestoAplicadoInput | FacturaUpdateManyWithWhereWithoutImpuestoAplicadoInput[]
    deleteMany?: FacturaScalarWhereInput | FacturaScalarWhereInput[]
  }

  export type PresupuestoImpuestoUpdateManyWithoutImpuestoNestedInput = {
    create?: XOR<PresupuestoImpuestoCreateWithoutImpuestoInput, PresupuestoImpuestoUncheckedCreateWithoutImpuestoInput> | PresupuestoImpuestoCreateWithoutImpuestoInput[] | PresupuestoImpuestoUncheckedCreateWithoutImpuestoInput[]
    connectOrCreate?: PresupuestoImpuestoCreateOrConnectWithoutImpuestoInput | PresupuestoImpuestoCreateOrConnectWithoutImpuestoInput[]
    upsert?: PresupuestoImpuestoUpsertWithWhereUniqueWithoutImpuestoInput | PresupuestoImpuestoUpsertWithWhereUniqueWithoutImpuestoInput[]
    createMany?: PresupuestoImpuestoCreateManyImpuestoInputEnvelope
    set?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
    disconnect?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
    delete?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
    connect?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
    update?: PresupuestoImpuestoUpdateWithWhereUniqueWithoutImpuestoInput | PresupuestoImpuestoUpdateWithWhereUniqueWithoutImpuestoInput[]
    updateMany?: PresupuestoImpuestoUpdateManyWithWhereWithoutImpuestoInput | PresupuestoImpuestoUpdateManyWithWhereWithoutImpuestoInput[]
    deleteMany?: PresupuestoImpuestoScalarWhereInput | PresupuestoImpuestoScalarWhereInput[]
  }

  export type FacturaUncheckedUpdateManyWithoutImpuestoAplicadoNestedInput = {
    create?: XOR<FacturaCreateWithoutImpuestoAplicadoInput, FacturaUncheckedCreateWithoutImpuestoAplicadoInput> | FacturaCreateWithoutImpuestoAplicadoInput[] | FacturaUncheckedCreateWithoutImpuestoAplicadoInput[]
    connectOrCreate?: FacturaCreateOrConnectWithoutImpuestoAplicadoInput | FacturaCreateOrConnectWithoutImpuestoAplicadoInput[]
    upsert?: FacturaUpsertWithWhereUniqueWithoutImpuestoAplicadoInput | FacturaUpsertWithWhereUniqueWithoutImpuestoAplicadoInput[]
    createMany?: FacturaCreateManyImpuestoAplicadoInputEnvelope
    set?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    disconnect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    delete?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    connect?: FacturaWhereUniqueInput | FacturaWhereUniqueInput[]
    update?: FacturaUpdateWithWhereUniqueWithoutImpuestoAplicadoInput | FacturaUpdateWithWhereUniqueWithoutImpuestoAplicadoInput[]
    updateMany?: FacturaUpdateManyWithWhereWithoutImpuestoAplicadoInput | FacturaUpdateManyWithWhereWithoutImpuestoAplicadoInput[]
    deleteMany?: FacturaScalarWhereInput | FacturaScalarWhereInput[]
  }

  export type PresupuestoImpuestoUncheckedUpdateManyWithoutImpuestoNestedInput = {
    create?: XOR<PresupuestoImpuestoCreateWithoutImpuestoInput, PresupuestoImpuestoUncheckedCreateWithoutImpuestoInput> | PresupuestoImpuestoCreateWithoutImpuestoInput[] | PresupuestoImpuestoUncheckedCreateWithoutImpuestoInput[]
    connectOrCreate?: PresupuestoImpuestoCreateOrConnectWithoutImpuestoInput | PresupuestoImpuestoCreateOrConnectWithoutImpuestoInput[]
    upsert?: PresupuestoImpuestoUpsertWithWhereUniqueWithoutImpuestoInput | PresupuestoImpuestoUpsertWithWhereUniqueWithoutImpuestoInput[]
    createMany?: PresupuestoImpuestoCreateManyImpuestoInputEnvelope
    set?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
    disconnect?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
    delete?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
    connect?: PresupuestoImpuestoWhereUniqueInput | PresupuestoImpuestoWhereUniqueInput[]
    update?: PresupuestoImpuestoUpdateWithWhereUniqueWithoutImpuestoInput | PresupuestoImpuestoUpdateWithWhereUniqueWithoutImpuestoInput[]
    updateMany?: PresupuestoImpuestoUpdateManyWithWhereWithoutImpuestoInput | PresupuestoImpuestoUpdateManyWithWhereWithoutImpuestoInput[]
    deleteMany?: PresupuestoImpuestoScalarWhereInput | PresupuestoImpuestoScalarWhereInput[]
  }

  export type ImpuestoCreateNestedOneWithoutPresupuestoImpuestosInput = {
    create?: XOR<ImpuestoCreateWithoutPresupuestoImpuestosInput, ImpuestoUncheckedCreateWithoutPresupuestoImpuestosInput>
    connectOrCreate?: ImpuestoCreateOrConnectWithoutPresupuestoImpuestosInput
    connect?: ImpuestoWhereUniqueInput
  }

  export type PresupuestoCreateNestedOneWithoutPresupuestoImpuestosInput = {
    create?: XOR<PresupuestoCreateWithoutPresupuestoImpuestosInput, PresupuestoUncheckedCreateWithoutPresupuestoImpuestosInput>
    connectOrCreate?: PresupuestoCreateOrConnectWithoutPresupuestoImpuestosInput
    connect?: PresupuestoWhereUniqueInput
  }

  export type ImpuestoUpdateOneRequiredWithoutPresupuestoImpuestosNestedInput = {
    create?: XOR<ImpuestoCreateWithoutPresupuestoImpuestosInput, ImpuestoUncheckedCreateWithoutPresupuestoImpuestosInput>
    connectOrCreate?: ImpuestoCreateOrConnectWithoutPresupuestoImpuestosInput
    upsert?: ImpuestoUpsertWithoutPresupuestoImpuestosInput
    connect?: ImpuestoWhereUniqueInput
    update?: XOR<XOR<ImpuestoUpdateToOneWithWhereWithoutPresupuestoImpuestosInput, ImpuestoUpdateWithoutPresupuestoImpuestosInput>, ImpuestoUncheckedUpdateWithoutPresupuestoImpuestosInput>
  }

  export type PresupuestoUpdateOneRequiredWithoutPresupuestoImpuestosNestedInput = {
    create?: XOR<PresupuestoCreateWithoutPresupuestoImpuestosInput, PresupuestoUncheckedCreateWithoutPresupuestoImpuestosInput>
    connectOrCreate?: PresupuestoCreateOrConnectWithoutPresupuestoImpuestosInput
    upsert?: PresupuestoUpsertWithoutPresupuestoImpuestosInput
    connect?: PresupuestoWhereUniqueInput
    update?: XOR<XOR<PresupuestoUpdateToOneWithWhereWithoutPresupuestoImpuestosInput, PresupuestoUpdateWithoutPresupuestoImpuestosInput>, PresupuestoUncheckedUpdateWithoutPresupuestoImpuestosInput>
  }

  export type AsignacionGastoProyectoCreateNestedManyWithoutGastoInput = {
    create?: XOR<AsignacionGastoProyectoCreateWithoutGastoInput, AsignacionGastoProyectoUncheckedCreateWithoutGastoInput> | AsignacionGastoProyectoCreateWithoutGastoInput[] | AsignacionGastoProyectoUncheckedCreateWithoutGastoInput[]
    connectOrCreate?: AsignacionGastoProyectoCreateOrConnectWithoutGastoInput | AsignacionGastoProyectoCreateOrConnectWithoutGastoInput[]
    createMany?: AsignacionGastoProyectoCreateManyGastoInputEnvelope
    connect?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
  }

  export type MonedaCreateNestedOneWithoutGastosOperativosInput = {
    create?: XOR<MonedaCreateWithoutGastosOperativosInput, MonedaUncheckedCreateWithoutGastosOperativosInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutGastosOperativosInput
    connect?: MonedaWhereUniqueInput
  }

  export type PersonaCreateNestedOneWithoutGastosComoProveedorInput = {
    create?: XOR<PersonaCreateWithoutGastosComoProveedorInput, PersonaUncheckedCreateWithoutGastosComoProveedorInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutGastosComoProveedorInput
    connect?: PersonaWhereUniqueInput
  }

  export type AsignacionGastoProyectoUncheckedCreateNestedManyWithoutGastoInput = {
    create?: XOR<AsignacionGastoProyectoCreateWithoutGastoInput, AsignacionGastoProyectoUncheckedCreateWithoutGastoInput> | AsignacionGastoProyectoCreateWithoutGastoInput[] | AsignacionGastoProyectoUncheckedCreateWithoutGastoInput[]
    connectOrCreate?: AsignacionGastoProyectoCreateOrConnectWithoutGastoInput | AsignacionGastoProyectoCreateOrConnectWithoutGastoInput[]
    createMany?: AsignacionGastoProyectoCreateManyGastoInputEnvelope
    connect?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
  }

  export type EnumCategoriaGastoFieldUpdateOperationsInput = {
    set?: $Enums.CategoriaGasto
  }

  export type AsignacionGastoProyectoUpdateManyWithoutGastoNestedInput = {
    create?: XOR<AsignacionGastoProyectoCreateWithoutGastoInput, AsignacionGastoProyectoUncheckedCreateWithoutGastoInput> | AsignacionGastoProyectoCreateWithoutGastoInput[] | AsignacionGastoProyectoUncheckedCreateWithoutGastoInput[]
    connectOrCreate?: AsignacionGastoProyectoCreateOrConnectWithoutGastoInput | AsignacionGastoProyectoCreateOrConnectWithoutGastoInput[]
    upsert?: AsignacionGastoProyectoUpsertWithWhereUniqueWithoutGastoInput | AsignacionGastoProyectoUpsertWithWhereUniqueWithoutGastoInput[]
    createMany?: AsignacionGastoProyectoCreateManyGastoInputEnvelope
    set?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
    disconnect?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
    delete?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
    connect?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
    update?: AsignacionGastoProyectoUpdateWithWhereUniqueWithoutGastoInput | AsignacionGastoProyectoUpdateWithWhereUniqueWithoutGastoInput[]
    updateMany?: AsignacionGastoProyectoUpdateManyWithWhereWithoutGastoInput | AsignacionGastoProyectoUpdateManyWithWhereWithoutGastoInput[]
    deleteMany?: AsignacionGastoProyectoScalarWhereInput | AsignacionGastoProyectoScalarWhereInput[]
  }

  export type MonedaUpdateOneRequiredWithoutGastosOperativosNestedInput = {
    create?: XOR<MonedaCreateWithoutGastosOperativosInput, MonedaUncheckedCreateWithoutGastosOperativosInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutGastosOperativosInput
    upsert?: MonedaUpsertWithoutGastosOperativosInput
    connect?: MonedaWhereUniqueInput
    update?: XOR<XOR<MonedaUpdateToOneWithWhereWithoutGastosOperativosInput, MonedaUpdateWithoutGastosOperativosInput>, MonedaUncheckedUpdateWithoutGastosOperativosInput>
  }

  export type PersonaUpdateOneWithoutGastosComoProveedorNestedInput = {
    create?: XOR<PersonaCreateWithoutGastosComoProveedorInput, PersonaUncheckedCreateWithoutGastosComoProveedorInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutGastosComoProveedorInput
    upsert?: PersonaUpsertWithoutGastosComoProveedorInput
    disconnect?: PersonaWhereInput | boolean
    delete?: PersonaWhereInput | boolean
    connect?: PersonaWhereUniqueInput
    update?: XOR<XOR<PersonaUpdateToOneWithWhereWithoutGastosComoProveedorInput, PersonaUpdateWithoutGastosComoProveedorInput>, PersonaUncheckedUpdateWithoutGastosComoProveedorInput>
  }

  export type AsignacionGastoProyectoUncheckedUpdateManyWithoutGastoNestedInput = {
    create?: XOR<AsignacionGastoProyectoCreateWithoutGastoInput, AsignacionGastoProyectoUncheckedCreateWithoutGastoInput> | AsignacionGastoProyectoCreateWithoutGastoInput[] | AsignacionGastoProyectoUncheckedCreateWithoutGastoInput[]
    connectOrCreate?: AsignacionGastoProyectoCreateOrConnectWithoutGastoInput | AsignacionGastoProyectoCreateOrConnectWithoutGastoInput[]
    upsert?: AsignacionGastoProyectoUpsertWithWhereUniqueWithoutGastoInput | AsignacionGastoProyectoUpsertWithWhereUniqueWithoutGastoInput[]
    createMany?: AsignacionGastoProyectoCreateManyGastoInputEnvelope
    set?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
    disconnect?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
    delete?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
    connect?: AsignacionGastoProyectoWhereUniqueInput | AsignacionGastoProyectoWhereUniqueInput[]
    update?: AsignacionGastoProyectoUpdateWithWhereUniqueWithoutGastoInput | AsignacionGastoProyectoUpdateWithWhereUniqueWithoutGastoInput[]
    updateMany?: AsignacionGastoProyectoUpdateManyWithWhereWithoutGastoInput | AsignacionGastoProyectoUpdateManyWithWhereWithoutGastoInput[]
    deleteMany?: AsignacionGastoProyectoScalarWhereInput | AsignacionGastoProyectoScalarWhereInput[]
  }

  export type GastoOperativoCreateNestedOneWithoutAsignacionesInput = {
    create?: XOR<GastoOperativoCreateWithoutAsignacionesInput, GastoOperativoUncheckedCreateWithoutAsignacionesInput>
    connectOrCreate?: GastoOperativoCreateOrConnectWithoutAsignacionesInput
    connect?: GastoOperativoWhereUniqueInput
  }

  export type PresupuestoCreateNestedOneWithoutAsignacionesGastoInput = {
    create?: XOR<PresupuestoCreateWithoutAsignacionesGastoInput, PresupuestoUncheckedCreateWithoutAsignacionesGastoInput>
    connectOrCreate?: PresupuestoCreateOrConnectWithoutAsignacionesGastoInput
    connect?: PresupuestoWhereUniqueInput
  }

  export type GastoOperativoUpdateOneRequiredWithoutAsignacionesNestedInput = {
    create?: XOR<GastoOperativoCreateWithoutAsignacionesInput, GastoOperativoUncheckedCreateWithoutAsignacionesInput>
    connectOrCreate?: GastoOperativoCreateOrConnectWithoutAsignacionesInput
    upsert?: GastoOperativoUpsertWithoutAsignacionesInput
    connect?: GastoOperativoWhereUniqueInput
    update?: XOR<XOR<GastoOperativoUpdateToOneWithWhereWithoutAsignacionesInput, GastoOperativoUpdateWithoutAsignacionesInput>, GastoOperativoUncheckedUpdateWithoutAsignacionesInput>
  }

  export type PresupuestoUpdateOneRequiredWithoutAsignacionesGastoNestedInput = {
    create?: XOR<PresupuestoCreateWithoutAsignacionesGastoInput, PresupuestoUncheckedCreateWithoutAsignacionesGastoInput>
    connectOrCreate?: PresupuestoCreateOrConnectWithoutAsignacionesGastoInput
    upsert?: PresupuestoUpsertWithoutAsignacionesGastoInput
    connect?: PresupuestoWhereUniqueInput
    update?: XOR<XOR<PresupuestoUpdateToOneWithWhereWithoutAsignacionesGastoInput, PresupuestoUpdateWithoutAsignacionesGastoInput>, PresupuestoUncheckedUpdateWithoutAsignacionesGastoInput>
  }

  export type MonedaCreateNestedOneWithoutHistorialPreciosInput = {
    create?: XOR<MonedaCreateWithoutHistorialPreciosInput, MonedaUncheckedCreateWithoutHistorialPreciosInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutHistorialPreciosInput
    connect?: MonedaWhereUniqueInput
  }

  export type ProductoCreateNestedOneWithoutHistorialPreciosInput = {
    create?: XOR<ProductoCreateWithoutHistorialPreciosInput, ProductoUncheckedCreateWithoutHistorialPreciosInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutHistorialPreciosInput
    connect?: ProductoWhereUniqueInput
  }

  export type ServicioCreateNestedOneWithoutHistorialPreciosInput = {
    create?: XOR<ServicioCreateWithoutHistorialPreciosInput, ServicioUncheckedCreateWithoutHistorialPreciosInput>
    connectOrCreate?: ServicioCreateOrConnectWithoutHistorialPreciosInput
    connect?: ServicioWhereUniqueInput
  }

  export type PersonaCreateNestedOneWithoutHistorialPreciosUsuarioInput = {
    create?: XOR<PersonaCreateWithoutHistorialPreciosUsuarioInput, PersonaUncheckedCreateWithoutHistorialPreciosUsuarioInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutHistorialPreciosUsuarioInput
    connect?: PersonaWhereUniqueInput
  }

  export type MonedaUpdateOneRequiredWithoutHistorialPreciosNestedInput = {
    create?: XOR<MonedaCreateWithoutHistorialPreciosInput, MonedaUncheckedCreateWithoutHistorialPreciosInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutHistorialPreciosInput
    upsert?: MonedaUpsertWithoutHistorialPreciosInput
    connect?: MonedaWhereUniqueInput
    update?: XOR<XOR<MonedaUpdateToOneWithWhereWithoutHistorialPreciosInput, MonedaUpdateWithoutHistorialPreciosInput>, MonedaUncheckedUpdateWithoutHistorialPreciosInput>
  }

  export type ProductoUpdateOneWithoutHistorialPreciosNestedInput = {
    create?: XOR<ProductoCreateWithoutHistorialPreciosInput, ProductoUncheckedCreateWithoutHistorialPreciosInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutHistorialPreciosInput
    upsert?: ProductoUpsertWithoutHistorialPreciosInput
    disconnect?: ProductoWhereInput | boolean
    delete?: ProductoWhereInput | boolean
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutHistorialPreciosInput, ProductoUpdateWithoutHistorialPreciosInput>, ProductoUncheckedUpdateWithoutHistorialPreciosInput>
  }

  export type ServicioUpdateOneWithoutHistorialPreciosNestedInput = {
    create?: XOR<ServicioCreateWithoutHistorialPreciosInput, ServicioUncheckedCreateWithoutHistorialPreciosInput>
    connectOrCreate?: ServicioCreateOrConnectWithoutHistorialPreciosInput
    upsert?: ServicioUpsertWithoutHistorialPreciosInput
    disconnect?: ServicioWhereInput | boolean
    delete?: ServicioWhereInput | boolean
    connect?: ServicioWhereUniqueInput
    update?: XOR<XOR<ServicioUpdateToOneWithWhereWithoutHistorialPreciosInput, ServicioUpdateWithoutHistorialPreciosInput>, ServicioUncheckedUpdateWithoutHistorialPreciosInput>
  }

  export type PersonaUpdateOneWithoutHistorialPreciosUsuarioNestedInput = {
    create?: XOR<PersonaCreateWithoutHistorialPreciosUsuarioInput, PersonaUncheckedCreateWithoutHistorialPreciosUsuarioInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutHistorialPreciosUsuarioInput
    upsert?: PersonaUpsertWithoutHistorialPreciosUsuarioInput
    disconnect?: PersonaWhereInput | boolean
    delete?: PersonaWhereInput | boolean
    connect?: PersonaWhereUniqueInput
    update?: XOR<XOR<PersonaUpdateToOneWithWhereWithoutHistorialPreciosUsuarioInput, PersonaUpdateWithoutHistorialPreciosUsuarioInput>, PersonaUncheckedUpdateWithoutHistorialPreciosUsuarioInput>
  }

  export type PersonaCreateNestedOneWithoutPagosAdminInput = {
    create?: XOR<PersonaCreateWithoutPagosAdminInput, PersonaUncheckedCreateWithoutPagosAdminInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutPagosAdminInput
    connect?: PersonaWhereUniqueInput
  }

  export type PresupuestoCreateNestedOneWithoutPagosAdminInput = {
    create?: XOR<PresupuestoCreateWithoutPagosAdminInput, PresupuestoUncheckedCreateWithoutPagosAdminInput>
    connectOrCreate?: PresupuestoCreateOrConnectWithoutPagosAdminInput
    connect?: PresupuestoWhereUniqueInput
  }

  export type MonedaCreateNestedOneWithoutPagosAdminInput = {
    create?: XOR<MonedaCreateWithoutPagosAdminInput, MonedaUncheckedCreateWithoutPagosAdminInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutPagosAdminInput
    connect?: MonedaWhereUniqueInput
  }

  export type PersonaUpdateOneRequiredWithoutPagosAdminNestedInput = {
    create?: XOR<PersonaCreateWithoutPagosAdminInput, PersonaUncheckedCreateWithoutPagosAdminInput>
    connectOrCreate?: PersonaCreateOrConnectWithoutPagosAdminInput
    upsert?: PersonaUpsertWithoutPagosAdminInput
    connect?: PersonaWhereUniqueInput
    update?: XOR<XOR<PersonaUpdateToOneWithWhereWithoutPagosAdminInput, PersonaUpdateWithoutPagosAdminInput>, PersonaUncheckedUpdateWithoutPagosAdminInput>
  }

  export type PresupuestoUpdateOneRequiredWithoutPagosAdminNestedInput = {
    create?: XOR<PresupuestoCreateWithoutPagosAdminInput, PresupuestoUncheckedCreateWithoutPagosAdminInput>
    connectOrCreate?: PresupuestoCreateOrConnectWithoutPagosAdminInput
    upsert?: PresupuestoUpsertWithoutPagosAdminInput
    connect?: PresupuestoWhereUniqueInput
    update?: XOR<XOR<PresupuestoUpdateToOneWithWhereWithoutPagosAdminInput, PresupuestoUpdateWithoutPagosAdminInput>, PresupuestoUncheckedUpdateWithoutPagosAdminInput>
  }

  export type MonedaUpdateOneRequiredWithoutPagosAdminNestedInput = {
    create?: XOR<MonedaCreateWithoutPagosAdminInput, MonedaUncheckedCreateWithoutPagosAdminInput>
    connectOrCreate?: MonedaCreateOrConnectWithoutPagosAdminInput
    upsert?: MonedaUpsertWithoutPagosAdminInput
    connect?: MonedaWhereUniqueInput
    update?: XOR<XOR<MonedaUpdateToOneWithWhereWithoutPagosAdminInput, MonedaUpdateWithoutPagosAdminInput>, MonedaUncheckedUpdateWithoutPagosAdminInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedEnumCodigoMonedaFilter<$PrismaModel = never> = {
    equals?: $Enums.CodigoMoneda | EnumCodigoMonedaFieldRefInput<$PrismaModel>
    in?: $Enums.CodigoMoneda[] | ListEnumCodigoMonedaFieldRefInput<$PrismaModel>
    notIn?: $Enums.CodigoMoneda[] | ListEnumCodigoMonedaFieldRefInput<$PrismaModel>
    not?: NestedEnumCodigoMonedaFilter<$PrismaModel> | $Enums.CodigoMoneda
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumCodigoMonedaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CodigoMoneda | EnumCodigoMonedaFieldRefInput<$PrismaModel>
    in?: $Enums.CodigoMoneda[] | ListEnumCodigoMonedaFieldRefInput<$PrismaModel>
    notIn?: $Enums.CodigoMoneda[] | ListEnumCodigoMonedaFieldRefInput<$PrismaModel>
    not?: NestedEnumCodigoMonedaWithAggregatesFilter<$PrismaModel> | $Enums.CodigoMoneda
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCodigoMonedaFilter<$PrismaModel>
    _max?: NestedEnumCodigoMonedaFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumTipoCotizacionFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCotizacion | EnumTipoCotizacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCotizacion[] | ListEnumTipoCotizacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCotizacion[] | ListEnumTipoCotizacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoCotizacionFilter<$PrismaModel> | $Enums.TipoCotizacion
  }

  export type NestedEnumTipoCotizacionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCotizacion | EnumTipoCotizacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCotizacion[] | ListEnumTipoCotizacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCotizacion[] | ListEnumTipoCotizacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoCotizacionWithAggregatesFilter<$PrismaModel> | $Enums.TipoCotizacion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoCotizacionFilter<$PrismaModel>
    _max?: NestedEnumTipoCotizacionFilter<$PrismaModel>
  }

  export type NestedEnumTipoPersonaFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPersona | EnumTipoPersonaFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPersona[] | ListEnumTipoPersonaFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPersona[] | ListEnumTipoPersonaFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPersonaFilter<$PrismaModel> | $Enums.TipoPersona
  }

  export type NestedEnumTipoPersonaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPersona | EnumTipoPersonaFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPersona[] | ListEnumTipoPersonaFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPersona[] | ListEnumTipoPersonaFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPersonaWithAggregatesFilter<$PrismaModel> | $Enums.TipoPersona
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoPersonaFilter<$PrismaModel>
    _max?: NestedEnumTipoPersonaFilter<$PrismaModel>
  }

  export type NestedEnumEstadoPresupuestoFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPresupuesto | EnumEstadoPresupuestoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPresupuesto[] | ListEnumEstadoPresupuestoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPresupuesto[] | ListEnumEstadoPresupuestoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPresupuestoFilter<$PrismaModel> | $Enums.EstadoPresupuesto
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumFrecuenciaContratoNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.FrecuenciaContrato | EnumFrecuenciaContratoFieldRefInput<$PrismaModel> | null
    in?: $Enums.FrecuenciaContrato[] | ListEnumFrecuenciaContratoFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FrecuenciaContrato[] | ListEnumFrecuenciaContratoFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFrecuenciaContratoNullableFilter<$PrismaModel> | $Enums.FrecuenciaContrato | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumEstadoPresupuestoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoPresupuesto | EnumEstadoPresupuestoFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoPresupuesto[] | ListEnumEstadoPresupuestoFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoPresupuesto[] | ListEnumEstadoPresupuestoFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoPresupuestoWithAggregatesFilter<$PrismaModel> | $Enums.EstadoPresupuesto
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoPresupuestoFilter<$PrismaModel>
    _max?: NestedEnumEstadoPresupuestoFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumFrecuenciaContratoNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FrecuenciaContrato | EnumFrecuenciaContratoFieldRefInput<$PrismaModel> | null
    in?: $Enums.FrecuenciaContrato[] | ListEnumFrecuenciaContratoFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FrecuenciaContrato[] | ListEnumFrecuenciaContratoFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFrecuenciaContratoNullableWithAggregatesFilter<$PrismaModel> | $Enums.FrecuenciaContrato | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumFrecuenciaContratoNullableFilter<$PrismaModel>
    _max?: NestedEnumFrecuenciaContratoNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumEstadoFacturaFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoFactura | EnumEstadoFacturaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoFactura[] | ListEnumEstadoFacturaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoFactura[] | ListEnumEstadoFacturaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoFacturaFilter<$PrismaModel> | $Enums.EstadoFactura
  }

  export type NestedEnumEstadoFacturaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoFactura | EnumEstadoFacturaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoFactura[] | ListEnumEstadoFacturaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoFactura[] | ListEnumEstadoFacturaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoFacturaWithAggregatesFilter<$PrismaModel> | $Enums.EstadoFactura
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoFacturaFilter<$PrismaModel>
    _max?: NestedEnumEstadoFacturaFilter<$PrismaModel>
  }

  export type NestedEnumReciboTipoFilter<$PrismaModel = never> = {
    equals?: $Enums.ReciboTipo | EnumReciboTipoFieldRefInput<$PrismaModel>
    in?: $Enums.ReciboTipo[] | ListEnumReciboTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReciboTipo[] | ListEnumReciboTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumReciboTipoFilter<$PrismaModel> | $Enums.ReciboTipo
  }

  export type NestedEnumReciboTipoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReciboTipo | EnumReciboTipoFieldRefInput<$PrismaModel>
    in?: $Enums.ReciboTipo[] | ListEnumReciboTipoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReciboTipo[] | ListEnumReciboTipoFieldRefInput<$PrismaModel>
    not?: NestedEnumReciboTipoWithAggregatesFilter<$PrismaModel> | $Enums.ReciboTipo
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReciboTipoFilter<$PrismaModel>
    _max?: NestedEnumReciboTipoFilter<$PrismaModel>
  }

  export type NestedEnumCategoriaGastoFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriaGasto | EnumCategoriaGastoFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriaGasto[] | ListEnumCategoriaGastoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriaGasto[] | ListEnumCategoriaGastoFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriaGastoFilter<$PrismaModel> | $Enums.CategoriaGasto
  }

  export type NestedEnumCategoriaGastoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriaGasto | EnumCategoriaGastoFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriaGasto[] | ListEnumCategoriaGastoFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriaGasto[] | ListEnumCategoriaGastoFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriaGastoWithAggregatesFilter<$PrismaModel> | $Enums.CategoriaGasto
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCategoriaGastoFilter<$PrismaModel>
    _max?: NestedEnumCategoriaGastoFilter<$PrismaModel>
  }

  export type FacturaCreateWithoutMonedaInput = {
    numero: string
    fecha: Date | string
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado: $Enums.EstadoFactura
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
    empresa?: EmpresaCreateNestedOneWithoutFacturasInput
    impuestoAplicado: ImpuestoCreateNestedOneWithoutFacturasInput
    presupuesto: PresupuestoCreateNestedOneWithoutFacturasInput
  }

  export type FacturaUncheckedCreateWithoutMonedaInput = {
    id?: number
    numero: string
    presupuestoId: number
    empresaId?: number | null
    fecha: Date | string
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado: $Enums.EstadoFactura
    impuestoAplicadoId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
  }

  export type FacturaCreateOrConnectWithoutMonedaInput = {
    where: FacturaWhereUniqueInput
    create: XOR<FacturaCreateWithoutMonedaInput, FacturaUncheckedCreateWithoutMonedaInput>
  }

  export type FacturaCreateManyMonedaInputEnvelope = {
    data: FacturaCreateManyMonedaInput | FacturaCreateManyMonedaInput[]
    skipDuplicates?: boolean
  }

  export type GastoOperativoCreateWithoutMonedaInput = {
    concepto: string
    descripcion?: string | null
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    categoria: $Enums.CategoriaGasto
    esRecurrente?: boolean
    frecuencia?: string | null
    comprobante?: string | null
    observaciones?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    asignaciones?: AsignacionGastoProyectoCreateNestedManyWithoutGastoInput
    proveedor?: PersonaCreateNestedOneWithoutGastosComoProveedorInput
  }

  export type GastoOperativoUncheckedCreateWithoutMonedaInput = {
    id?: number
    concepto: string
    descripcion?: string | null
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    categoria: $Enums.CategoriaGasto
    esRecurrente?: boolean
    frecuencia?: string | null
    proveedorId?: number | null
    comprobante?: string | null
    observaciones?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    asignaciones?: AsignacionGastoProyectoUncheckedCreateNestedManyWithoutGastoInput
  }

  export type GastoOperativoCreateOrConnectWithoutMonedaInput = {
    where: GastoOperativoWhereUniqueInput
    create: XOR<GastoOperativoCreateWithoutMonedaInput, GastoOperativoUncheckedCreateWithoutMonedaInput>
  }

  export type GastoOperativoCreateManyMonedaInputEnvelope = {
    data: GastoOperativoCreateManyMonedaInput | GastoOperativoCreateManyMonedaInput[]
    skipDuplicates?: boolean
  }

  export type HistorialPrecioCreateWithoutMonedaInput = {
    precio: Decimal | DecimalJsLike | number | string
    fechaDesde: Date | string
    fechaHasta?: Date | string | null
    motivoCambio?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    producto?: ProductoCreateNestedOneWithoutHistorialPreciosInput
    servicio?: ServicioCreateNestedOneWithoutHistorialPreciosInput
    usuario?: PersonaCreateNestedOneWithoutHistorialPreciosUsuarioInput
  }

  export type HistorialPrecioUncheckedCreateWithoutMonedaInput = {
    id?: number
    productoId?: number | null
    servicioId?: number | null
    precio: Decimal | DecimalJsLike | number | string
    fechaDesde: Date | string
    fechaHasta?: Date | string | null
    motivoCambio?: string | null
    usuarioId?: number | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HistorialPrecioCreateOrConnectWithoutMonedaInput = {
    where: HistorialPrecioWhereUniqueInput
    create: XOR<HistorialPrecioCreateWithoutMonedaInput, HistorialPrecioUncheckedCreateWithoutMonedaInput>
  }

  export type HistorialPrecioCreateManyMonedaInputEnvelope = {
    data: HistorialPrecioCreateManyMonedaInput | HistorialPrecioCreateManyMonedaInput[]
    skipDuplicates?: boolean
  }

  export type PresupuestoCreateWithoutMonedaInput = {
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoCreateNestedManyWithoutPresupuestoInput
    facturas?: FacturaCreateNestedManyWithoutPresupuestoInput
    items?: ItemCreateNestedManyWithoutPresupuestoInput
    cliente: PersonaCreateNestedOneWithoutPresupuestosInput
    empresa?: EmpresaCreateNestedOneWithoutPresupuestosInput
    presupuestoImpuestos?: PresupuestoImpuestoCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoUncheckedCreateWithoutMonedaInput = {
    id?: number
    clienteId: number
    empresaId?: number | null
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedCreateNestedManyWithoutPresupuestoInput
    facturas?: FacturaUncheckedCreateNestedManyWithoutPresupuestoInput
    items?: ItemUncheckedCreateNestedManyWithoutPresupuestoInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoCreateOrConnectWithoutMonedaInput = {
    where: PresupuestoWhereUniqueInput
    create: XOR<PresupuestoCreateWithoutMonedaInput, PresupuestoUncheckedCreateWithoutMonedaInput>
  }

  export type PresupuestoCreateManyMonedaInputEnvelope = {
    data: PresupuestoCreateManyMonedaInput | PresupuestoCreateManyMonedaInput[]
    skipDuplicates?: boolean
  }

  export type ProductoCreateWithoutMonedaInput = {
    nombre: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutProductoInput
    items?: ItemCreateNestedManyWithoutProductoInput
    proveedor: PersonaCreateNestedOneWithoutProductosInput
  }

  export type ProductoUncheckedCreateWithoutMonedaInput = {
    id?: number
    nombre: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    proveedorId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    items?: ItemUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutMonedaInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutMonedaInput, ProductoUncheckedCreateWithoutMonedaInput>
  }

  export type ProductoCreateManyMonedaInputEnvelope = {
    data: ProductoCreateManyMonedaInput | ProductoCreateManyMonedaInput[]
    skipDuplicates?: boolean
  }

  export type ServicioCreateWithoutMonedaInput = {
    nombre: string
    descripcion: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutServicioInput
    items?: ItemCreateNestedManyWithoutServicioInput
    proveedor: PersonaCreateNestedOneWithoutServiciosInput
  }

  export type ServicioUncheckedCreateWithoutMonedaInput = {
    id?: number
    nombre: string
    descripcion: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    proveedorId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutServicioInput
    items?: ItemUncheckedCreateNestedManyWithoutServicioInput
  }

  export type ServicioCreateOrConnectWithoutMonedaInput = {
    where: ServicioWhereUniqueInput
    create: XOR<ServicioCreateWithoutMonedaInput, ServicioUncheckedCreateWithoutMonedaInput>
  }

  export type ServicioCreateManyMonedaInputEnvelope = {
    data: ServicioCreateManyMonedaInput | ServicioCreateManyMonedaInput[]
    skipDuplicates?: boolean
  }

  export type ReciboCreateWithoutMonedaInput = {
    concepto: string
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    tipo?: $Enums.ReciboTipo
    createdAt?: Date | string
    updatedAt?: Date | string
    persona: PersonaCreateNestedOneWithoutRecibosInput
    presupuesto?: PresupuestoCreateNestedOneWithoutRecibosInput
  }

  export type ReciboUncheckedCreateWithoutMonedaInput = {
    id?: number
    personaId: number
    presupuestoId?: number | null
    concepto: string
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    tipo?: $Enums.ReciboTipo
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReciboCreateOrConnectWithoutMonedaInput = {
    where: ReciboWhereUniqueInput
    create: XOR<ReciboCreateWithoutMonedaInput, ReciboUncheckedCreateWithoutMonedaInput>
  }

  export type ReciboCreateManyMonedaInputEnvelope = {
    data: ReciboCreateManyMonedaInput | ReciboCreateManyMonedaInput[]
    skipDuplicates?: boolean
  }

  export type PagoAdminCreateWithoutMonedaInput = {
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admin: PersonaCreateNestedOneWithoutPagosAdminInput
    presupuesto: PresupuestoCreateNestedOneWithoutPagosAdminInput
  }

  export type PagoAdminUncheckedCreateWithoutMonedaInput = {
    id?: number
    adminId: number
    presupuestoId: number
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PagoAdminCreateOrConnectWithoutMonedaInput = {
    where: PagoAdminWhereUniqueInput
    create: XOR<PagoAdminCreateWithoutMonedaInput, PagoAdminUncheckedCreateWithoutMonedaInput>
  }

  export type PagoAdminCreateManyMonedaInputEnvelope = {
    data: PagoAdminCreateManyMonedaInput | PagoAdminCreateManyMonedaInput[]
    skipDuplicates?: boolean
  }

  export type CobroClienteCreateWithoutMonedaInput = {
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    presupuesto: PresupuestoCreateNestedOneWithoutCobrosClienteInput
  }

  export type CobroClienteUncheckedCreateWithoutMonedaInput = {
    id?: number
    presupuestoId: number
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CobroClienteCreateOrConnectWithoutMonedaInput = {
    where: CobroClienteWhereUniqueInput
    create: XOR<CobroClienteCreateWithoutMonedaInput, CobroClienteUncheckedCreateWithoutMonedaInput>
  }

  export type CobroClienteCreateManyMonedaInputEnvelope = {
    data: CobroClienteCreateManyMonedaInput | CobroClienteCreateManyMonedaInput[]
    skipDuplicates?: boolean
  }

  export type TipoCambioCreateWithoutMonedaDesdeInput = {
    valor: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    tipo?: $Enums.TipoCotizacion
    fuente?: string | null
    createdAt?: Date | string
    monedaHacia: MonedaCreateNestedOneWithoutTiposCambioDestinoInput
  }

  export type TipoCambioUncheckedCreateWithoutMonedaDesdeInput = {
    id?: number
    monedaHaciaId: number
    valor: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    tipo?: $Enums.TipoCotizacion
    fuente?: string | null
    createdAt?: Date | string
  }

  export type TipoCambioCreateOrConnectWithoutMonedaDesdeInput = {
    where: TipoCambioWhereUniqueInput
    create: XOR<TipoCambioCreateWithoutMonedaDesdeInput, TipoCambioUncheckedCreateWithoutMonedaDesdeInput>
  }

  export type TipoCambioCreateManyMonedaDesdeInputEnvelope = {
    data: TipoCambioCreateManyMonedaDesdeInput | TipoCambioCreateManyMonedaDesdeInput[]
    skipDuplicates?: boolean
  }

  export type TipoCambioCreateWithoutMonedaHaciaInput = {
    valor: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    tipo?: $Enums.TipoCotizacion
    fuente?: string | null
    createdAt?: Date | string
    monedaDesde: MonedaCreateNestedOneWithoutTiposCambioInput
  }

  export type TipoCambioUncheckedCreateWithoutMonedaHaciaInput = {
    id?: number
    monedaDesdeId: number
    valor: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    tipo?: $Enums.TipoCotizacion
    fuente?: string | null
    createdAt?: Date | string
  }

  export type TipoCambioCreateOrConnectWithoutMonedaHaciaInput = {
    where: TipoCambioWhereUniqueInput
    create: XOR<TipoCambioCreateWithoutMonedaHaciaInput, TipoCambioUncheckedCreateWithoutMonedaHaciaInput>
  }

  export type TipoCambioCreateManyMonedaHaciaInputEnvelope = {
    data: TipoCambioCreateManyMonedaHaciaInput | TipoCambioCreateManyMonedaHaciaInput[]
    skipDuplicates?: boolean
  }

  export type FacturaUpsertWithWhereUniqueWithoutMonedaInput = {
    where: FacturaWhereUniqueInput
    update: XOR<FacturaUpdateWithoutMonedaInput, FacturaUncheckedUpdateWithoutMonedaInput>
    create: XOR<FacturaCreateWithoutMonedaInput, FacturaUncheckedCreateWithoutMonedaInput>
  }

  export type FacturaUpdateWithWhereUniqueWithoutMonedaInput = {
    where: FacturaWhereUniqueInput
    data: XOR<FacturaUpdateWithoutMonedaInput, FacturaUncheckedUpdateWithoutMonedaInput>
  }

  export type FacturaUpdateManyWithWhereWithoutMonedaInput = {
    where: FacturaScalarWhereInput
    data: XOR<FacturaUpdateManyMutationInput, FacturaUncheckedUpdateManyWithoutMonedaInput>
  }

  export type FacturaScalarWhereInput = {
    AND?: FacturaScalarWhereInput | FacturaScalarWhereInput[]
    OR?: FacturaScalarWhereInput[]
    NOT?: FacturaScalarWhereInput | FacturaScalarWhereInput[]
    id?: IntFilter<"Factura"> | number
    numero?: StringFilter<"Factura"> | string
    presupuestoId?: IntFilter<"Factura"> | number
    empresaId?: IntNullableFilter<"Factura"> | number | null
    fecha?: DateTimeFilter<"Factura"> | Date | string
    subtotal?: DecimalFilter<"Factura"> | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFilter<"Factura"> | Decimal | DecimalJsLike | number | string
    total?: DecimalFilter<"Factura"> | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFilter<"Factura"> | $Enums.EstadoFactura
    impuestoAplicadoId?: IntFilter<"Factura"> | number
    createdAt?: DateTimeFilter<"Factura"> | Date | string
    updatedAt?: DateTimeFilter<"Factura"> | Date | string
    monedaId?: IntFilter<"Factura"> | number
    tipoCambioFecha?: DateTimeNullableFilter<"Factura"> | Date | string | null
  }

  export type GastoOperativoUpsertWithWhereUniqueWithoutMonedaInput = {
    where: GastoOperativoWhereUniqueInput
    update: XOR<GastoOperativoUpdateWithoutMonedaInput, GastoOperativoUncheckedUpdateWithoutMonedaInput>
    create: XOR<GastoOperativoCreateWithoutMonedaInput, GastoOperativoUncheckedCreateWithoutMonedaInput>
  }

  export type GastoOperativoUpdateWithWhereUniqueWithoutMonedaInput = {
    where: GastoOperativoWhereUniqueInput
    data: XOR<GastoOperativoUpdateWithoutMonedaInput, GastoOperativoUncheckedUpdateWithoutMonedaInput>
  }

  export type GastoOperativoUpdateManyWithWhereWithoutMonedaInput = {
    where: GastoOperativoScalarWhereInput
    data: XOR<GastoOperativoUpdateManyMutationInput, GastoOperativoUncheckedUpdateManyWithoutMonedaInput>
  }

  export type GastoOperativoScalarWhereInput = {
    AND?: GastoOperativoScalarWhereInput | GastoOperativoScalarWhereInput[]
    OR?: GastoOperativoScalarWhereInput[]
    NOT?: GastoOperativoScalarWhereInput | GastoOperativoScalarWhereInput[]
    id?: IntFilter<"GastoOperativo"> | number
    concepto?: StringFilter<"GastoOperativo"> | string
    descripcion?: StringNullableFilter<"GastoOperativo"> | string | null
    monto?: DecimalFilter<"GastoOperativo"> | Decimal | DecimalJsLike | number | string
    monedaId?: IntFilter<"GastoOperativo"> | number
    fecha?: DateTimeFilter<"GastoOperativo"> | Date | string
    categoria?: EnumCategoriaGastoFilter<"GastoOperativo"> | $Enums.CategoriaGasto
    esRecurrente?: BoolFilter<"GastoOperativo"> | boolean
    frecuencia?: StringNullableFilter<"GastoOperativo"> | string | null
    proveedorId?: IntNullableFilter<"GastoOperativo"> | number | null
    comprobante?: StringNullableFilter<"GastoOperativo"> | string | null
    observaciones?: StringNullableFilter<"GastoOperativo"> | string | null
    activo?: BoolFilter<"GastoOperativo"> | boolean
    createdAt?: DateTimeFilter<"GastoOperativo"> | Date | string
    updatedAt?: DateTimeFilter<"GastoOperativo"> | Date | string
  }

  export type HistorialPrecioUpsertWithWhereUniqueWithoutMonedaInput = {
    where: HistorialPrecioWhereUniqueInput
    update: XOR<HistorialPrecioUpdateWithoutMonedaInput, HistorialPrecioUncheckedUpdateWithoutMonedaInput>
    create: XOR<HistorialPrecioCreateWithoutMonedaInput, HistorialPrecioUncheckedCreateWithoutMonedaInput>
  }

  export type HistorialPrecioUpdateWithWhereUniqueWithoutMonedaInput = {
    where: HistorialPrecioWhereUniqueInput
    data: XOR<HistorialPrecioUpdateWithoutMonedaInput, HistorialPrecioUncheckedUpdateWithoutMonedaInput>
  }

  export type HistorialPrecioUpdateManyWithWhereWithoutMonedaInput = {
    where: HistorialPrecioScalarWhereInput
    data: XOR<HistorialPrecioUpdateManyMutationInput, HistorialPrecioUncheckedUpdateManyWithoutMonedaInput>
  }

  export type HistorialPrecioScalarWhereInput = {
    AND?: HistorialPrecioScalarWhereInput | HistorialPrecioScalarWhereInput[]
    OR?: HistorialPrecioScalarWhereInput[]
    NOT?: HistorialPrecioScalarWhereInput | HistorialPrecioScalarWhereInput[]
    id?: IntFilter<"HistorialPrecio"> | number
    productoId?: IntNullableFilter<"HistorialPrecio"> | number | null
    servicioId?: IntNullableFilter<"HistorialPrecio"> | number | null
    monedaId?: IntFilter<"HistorialPrecio"> | number
    precio?: DecimalFilter<"HistorialPrecio"> | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFilter<"HistorialPrecio"> | Date | string
    fechaHasta?: DateTimeNullableFilter<"HistorialPrecio"> | Date | string | null
    motivoCambio?: StringNullableFilter<"HistorialPrecio"> | string | null
    usuarioId?: IntNullableFilter<"HistorialPrecio"> | number | null
    activo?: BoolFilter<"HistorialPrecio"> | boolean
    createdAt?: DateTimeFilter<"HistorialPrecio"> | Date | string
    updatedAt?: DateTimeFilter<"HistorialPrecio"> | Date | string
  }

  export type PresupuestoUpsertWithWhereUniqueWithoutMonedaInput = {
    where: PresupuestoWhereUniqueInput
    update: XOR<PresupuestoUpdateWithoutMonedaInput, PresupuestoUncheckedUpdateWithoutMonedaInput>
    create: XOR<PresupuestoCreateWithoutMonedaInput, PresupuestoUncheckedCreateWithoutMonedaInput>
  }

  export type PresupuestoUpdateWithWhereUniqueWithoutMonedaInput = {
    where: PresupuestoWhereUniqueInput
    data: XOR<PresupuestoUpdateWithoutMonedaInput, PresupuestoUncheckedUpdateWithoutMonedaInput>
  }

  export type PresupuestoUpdateManyWithWhereWithoutMonedaInput = {
    where: PresupuestoScalarWhereInput
    data: XOR<PresupuestoUpdateManyMutationInput, PresupuestoUncheckedUpdateManyWithoutMonedaInput>
  }

  export type PresupuestoScalarWhereInput = {
    AND?: PresupuestoScalarWhereInput | PresupuestoScalarWhereInput[]
    OR?: PresupuestoScalarWhereInput[]
    NOT?: PresupuestoScalarWhereInput | PresupuestoScalarWhereInput[]
    id?: IntFilter<"Presupuesto"> | number
    clienteId?: IntFilter<"Presupuesto"> | number
    empresaId?: IntNullableFilter<"Presupuesto"> | number | null
    subtotal?: DecimalFilter<"Presupuesto"> | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFilter<"Presupuesto"> | Decimal | DecimalJsLike | number | string
    total?: DecimalFilter<"Presupuesto"> | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFilter<"Presupuesto"> | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFilter<"Presupuesto"> | Date | string
    updatedAt?: DateTimeFilter<"Presupuesto"> | Date | string
    monedaId?: IntFilter<"Presupuesto"> | number
    tipoCambioFecha?: DateTimeNullableFilter<"Presupuesto"> | Date | string | null
    periodoInicio?: DateTimeNullableFilter<"Presupuesto"> | Date | string | null
    periodoFin?: DateTimeNullableFilter<"Presupuesto"> | Date | string | null
    esRecurrente?: BoolFilter<"Presupuesto"> | boolean
    frecuencia?: EnumFrecuenciaContratoNullableFilter<"Presupuesto"> | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFilter<"Presupuesto"> | boolean
    precioPeriodo?: DecimalNullableFilter<"Presupuesto"> | Decimal | DecimalJsLike | number | string | null
  }

  export type ProductoUpsertWithWhereUniqueWithoutMonedaInput = {
    where: ProductoWhereUniqueInput
    update: XOR<ProductoUpdateWithoutMonedaInput, ProductoUncheckedUpdateWithoutMonedaInput>
    create: XOR<ProductoCreateWithoutMonedaInput, ProductoUncheckedCreateWithoutMonedaInput>
  }

  export type ProductoUpdateWithWhereUniqueWithoutMonedaInput = {
    where: ProductoWhereUniqueInput
    data: XOR<ProductoUpdateWithoutMonedaInput, ProductoUncheckedUpdateWithoutMonedaInput>
  }

  export type ProductoUpdateManyWithWhereWithoutMonedaInput = {
    where: ProductoScalarWhereInput
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyWithoutMonedaInput>
  }

  export type ProductoScalarWhereInput = {
    AND?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
    OR?: ProductoScalarWhereInput[]
    NOT?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
    id?: IntFilter<"Producto"> | number
    nombre?: StringFilter<"Producto"> | string
    costoProveedor?: DecimalFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    precio?: DecimalFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    proveedorId?: IntFilter<"Producto"> | number
    createdAt?: DateTimeFilter<"Producto"> | Date | string
    updatedAt?: DateTimeFilter<"Producto"> | Date | string
    monedaId?: IntFilter<"Producto"> | number
  }

  export type ServicioUpsertWithWhereUniqueWithoutMonedaInput = {
    where: ServicioWhereUniqueInput
    update: XOR<ServicioUpdateWithoutMonedaInput, ServicioUncheckedUpdateWithoutMonedaInput>
    create: XOR<ServicioCreateWithoutMonedaInput, ServicioUncheckedCreateWithoutMonedaInput>
  }

  export type ServicioUpdateWithWhereUniqueWithoutMonedaInput = {
    where: ServicioWhereUniqueInput
    data: XOR<ServicioUpdateWithoutMonedaInput, ServicioUncheckedUpdateWithoutMonedaInput>
  }

  export type ServicioUpdateManyWithWhereWithoutMonedaInput = {
    where: ServicioScalarWhereInput
    data: XOR<ServicioUpdateManyMutationInput, ServicioUncheckedUpdateManyWithoutMonedaInput>
  }

  export type ServicioScalarWhereInput = {
    AND?: ServicioScalarWhereInput | ServicioScalarWhereInput[]
    OR?: ServicioScalarWhereInput[]
    NOT?: ServicioScalarWhereInput | ServicioScalarWhereInput[]
    id?: IntFilter<"Servicio"> | number
    nombre?: StringFilter<"Servicio"> | string
    descripcion?: StringFilter<"Servicio"> | string
    costoProveedor?: DecimalFilter<"Servicio"> | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFilter<"Servicio"> | Decimal | DecimalJsLike | number | string
    precio?: DecimalFilter<"Servicio"> | Decimal | DecimalJsLike | number | string
    proveedorId?: IntFilter<"Servicio"> | number
    createdAt?: DateTimeFilter<"Servicio"> | Date | string
    updatedAt?: DateTimeFilter<"Servicio"> | Date | string
    monedaId?: IntFilter<"Servicio"> | number
  }

  export type ReciboUpsertWithWhereUniqueWithoutMonedaInput = {
    where: ReciboWhereUniqueInput
    update: XOR<ReciboUpdateWithoutMonedaInput, ReciboUncheckedUpdateWithoutMonedaInput>
    create: XOR<ReciboCreateWithoutMonedaInput, ReciboUncheckedCreateWithoutMonedaInput>
  }

  export type ReciboUpdateWithWhereUniqueWithoutMonedaInput = {
    where: ReciboWhereUniqueInput
    data: XOR<ReciboUpdateWithoutMonedaInput, ReciboUncheckedUpdateWithoutMonedaInput>
  }

  export type ReciboUpdateManyWithWhereWithoutMonedaInput = {
    where: ReciboScalarWhereInput
    data: XOR<ReciboUpdateManyMutationInput, ReciboUncheckedUpdateManyWithoutMonedaInput>
  }

  export type ReciboScalarWhereInput = {
    AND?: ReciboScalarWhereInput | ReciboScalarWhereInput[]
    OR?: ReciboScalarWhereInput[]
    NOT?: ReciboScalarWhereInput | ReciboScalarWhereInput[]
    id?: IntFilter<"Recibo"> | number
    personaId?: IntFilter<"Recibo"> | number
    presupuestoId?: IntNullableFilter<"Recibo"> | number | null
    concepto?: StringFilter<"Recibo"> | string
    monto?: DecimalFilter<"Recibo"> | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFilter<"Recibo"> | Date | string
    metodoPago?: StringFilter<"Recibo"> | string
    tipo?: EnumReciboTipoFilter<"Recibo"> | $Enums.ReciboTipo
    createdAt?: DateTimeFilter<"Recibo"> | Date | string
    updatedAt?: DateTimeFilter<"Recibo"> | Date | string
    monedaId?: IntFilter<"Recibo"> | number
  }

  export type PagoAdminUpsertWithWhereUniqueWithoutMonedaInput = {
    where: PagoAdminWhereUniqueInput
    update: XOR<PagoAdminUpdateWithoutMonedaInput, PagoAdminUncheckedUpdateWithoutMonedaInput>
    create: XOR<PagoAdminCreateWithoutMonedaInput, PagoAdminUncheckedCreateWithoutMonedaInput>
  }

  export type PagoAdminUpdateWithWhereUniqueWithoutMonedaInput = {
    where: PagoAdminWhereUniqueInput
    data: XOR<PagoAdminUpdateWithoutMonedaInput, PagoAdminUncheckedUpdateWithoutMonedaInput>
  }

  export type PagoAdminUpdateManyWithWhereWithoutMonedaInput = {
    where: PagoAdminScalarWhereInput
    data: XOR<PagoAdminUpdateManyMutationInput, PagoAdminUncheckedUpdateManyWithoutMonedaInput>
  }

  export type PagoAdminScalarWhereInput = {
    AND?: PagoAdminScalarWhereInput | PagoAdminScalarWhereInput[]
    OR?: PagoAdminScalarWhereInput[]
    NOT?: PagoAdminScalarWhereInput | PagoAdminScalarWhereInput[]
    id?: IntFilter<"PagoAdmin"> | number
    adminId?: IntFilter<"PagoAdmin"> | number
    presupuestoId?: IntFilter<"PagoAdmin"> | number
    monto?: DecimalFilter<"PagoAdmin"> | Decimal | DecimalJsLike | number | string
    monedaId?: IntFilter<"PagoAdmin"> | number
    fecha?: DateTimeFilter<"PagoAdmin"> | Date | string
    metodoPago?: StringFilter<"PagoAdmin"> | string
    concepto?: StringNullableFilter<"PagoAdmin"> | string | null
    createdAt?: DateTimeFilter<"PagoAdmin"> | Date | string
    updatedAt?: DateTimeFilter<"PagoAdmin"> | Date | string
  }

  export type CobroClienteUpsertWithWhereUniqueWithoutMonedaInput = {
    where: CobroClienteWhereUniqueInput
    update: XOR<CobroClienteUpdateWithoutMonedaInput, CobroClienteUncheckedUpdateWithoutMonedaInput>
    create: XOR<CobroClienteCreateWithoutMonedaInput, CobroClienteUncheckedCreateWithoutMonedaInput>
  }

  export type CobroClienteUpdateWithWhereUniqueWithoutMonedaInput = {
    where: CobroClienteWhereUniqueInput
    data: XOR<CobroClienteUpdateWithoutMonedaInput, CobroClienteUncheckedUpdateWithoutMonedaInput>
  }

  export type CobroClienteUpdateManyWithWhereWithoutMonedaInput = {
    where: CobroClienteScalarWhereInput
    data: XOR<CobroClienteUpdateManyMutationInput, CobroClienteUncheckedUpdateManyWithoutMonedaInput>
  }

  export type CobroClienteScalarWhereInput = {
    AND?: CobroClienteScalarWhereInput | CobroClienteScalarWhereInput[]
    OR?: CobroClienteScalarWhereInput[]
    NOT?: CobroClienteScalarWhereInput | CobroClienteScalarWhereInput[]
    id?: IntFilter<"CobroCliente"> | number
    presupuestoId?: IntFilter<"CobroCliente"> | number
    monto?: DecimalFilter<"CobroCliente"> | Decimal | DecimalJsLike | number | string
    monedaId?: IntFilter<"CobroCliente"> | number
    fecha?: DateTimeFilter<"CobroCliente"> | Date | string
    metodoPago?: StringFilter<"CobroCliente"> | string
    concepto?: StringNullableFilter<"CobroCliente"> | string | null
    createdAt?: DateTimeFilter<"CobroCliente"> | Date | string
    updatedAt?: DateTimeFilter<"CobroCliente"> | Date | string
  }

  export type TipoCambioUpsertWithWhereUniqueWithoutMonedaDesdeInput = {
    where: TipoCambioWhereUniqueInput
    update: XOR<TipoCambioUpdateWithoutMonedaDesdeInput, TipoCambioUncheckedUpdateWithoutMonedaDesdeInput>
    create: XOR<TipoCambioCreateWithoutMonedaDesdeInput, TipoCambioUncheckedCreateWithoutMonedaDesdeInput>
  }

  export type TipoCambioUpdateWithWhereUniqueWithoutMonedaDesdeInput = {
    where: TipoCambioWhereUniqueInput
    data: XOR<TipoCambioUpdateWithoutMonedaDesdeInput, TipoCambioUncheckedUpdateWithoutMonedaDesdeInput>
  }

  export type TipoCambioUpdateManyWithWhereWithoutMonedaDesdeInput = {
    where: TipoCambioScalarWhereInput
    data: XOR<TipoCambioUpdateManyMutationInput, TipoCambioUncheckedUpdateManyWithoutMonedaDesdeInput>
  }

  export type TipoCambioScalarWhereInput = {
    AND?: TipoCambioScalarWhereInput | TipoCambioScalarWhereInput[]
    OR?: TipoCambioScalarWhereInput[]
    NOT?: TipoCambioScalarWhereInput | TipoCambioScalarWhereInput[]
    id?: IntFilter<"TipoCambio"> | number
    monedaDesdeId?: IntFilter<"TipoCambio"> | number
    monedaHaciaId?: IntFilter<"TipoCambio"> | number
    valor?: DecimalFilter<"TipoCambio"> | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFilter<"TipoCambio"> | Date | string
    tipo?: EnumTipoCotizacionFilter<"TipoCambio"> | $Enums.TipoCotizacion
    fuente?: StringNullableFilter<"TipoCambio"> | string | null
    createdAt?: DateTimeFilter<"TipoCambio"> | Date | string
  }

  export type TipoCambioUpsertWithWhereUniqueWithoutMonedaHaciaInput = {
    where: TipoCambioWhereUniqueInput
    update: XOR<TipoCambioUpdateWithoutMonedaHaciaInput, TipoCambioUncheckedUpdateWithoutMonedaHaciaInput>
    create: XOR<TipoCambioCreateWithoutMonedaHaciaInput, TipoCambioUncheckedCreateWithoutMonedaHaciaInput>
  }

  export type TipoCambioUpdateWithWhereUniqueWithoutMonedaHaciaInput = {
    where: TipoCambioWhereUniqueInput
    data: XOR<TipoCambioUpdateWithoutMonedaHaciaInput, TipoCambioUncheckedUpdateWithoutMonedaHaciaInput>
  }

  export type TipoCambioUpdateManyWithWhereWithoutMonedaHaciaInput = {
    where: TipoCambioScalarWhereInput
    data: XOR<TipoCambioUpdateManyMutationInput, TipoCambioUncheckedUpdateManyWithoutMonedaHaciaInput>
  }

  export type PresupuestoCreateWithoutCobrosClienteInput = {
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoCreateNestedManyWithoutPresupuestoInput
    facturas?: FacturaCreateNestedManyWithoutPresupuestoInput
    items?: ItemCreateNestedManyWithoutPresupuestoInput
    cliente: PersonaCreateNestedOneWithoutPresupuestosInput
    empresa?: EmpresaCreateNestedOneWithoutPresupuestosInput
    moneda?: MonedaCreateNestedOneWithoutPresupuestosInput
    presupuestoImpuestos?: PresupuestoImpuestoCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoUncheckedCreateWithoutCobrosClienteInput = {
    id?: number
    clienteId: number
    empresaId?: number | null
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedCreateNestedManyWithoutPresupuestoInput
    facturas?: FacturaUncheckedCreateNestedManyWithoutPresupuestoInput
    items?: ItemUncheckedCreateNestedManyWithoutPresupuestoInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoCreateOrConnectWithoutCobrosClienteInput = {
    where: PresupuestoWhereUniqueInput
    create: XOR<PresupuestoCreateWithoutCobrosClienteInput, PresupuestoUncheckedCreateWithoutCobrosClienteInput>
  }

  export type MonedaCreateWithoutCobrosClienteInput = {
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoCreateNestedManyWithoutMonedaInput
    productos?: ProductoCreateNestedManyWithoutMonedaInput
    servicios?: ServicioCreateNestedManyWithoutMonedaInput
    recibos?: ReciboCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaUncheckedCreateWithoutCobrosClienteInput = {
    id?: number
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaUncheckedCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoUncheckedCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutMonedaInput
    productos?: ProductoUncheckedCreateNestedManyWithoutMonedaInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutMonedaInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioUncheckedCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioUncheckedCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaCreateOrConnectWithoutCobrosClienteInput = {
    where: MonedaWhereUniqueInput
    create: XOR<MonedaCreateWithoutCobrosClienteInput, MonedaUncheckedCreateWithoutCobrosClienteInput>
  }

  export type PresupuestoUpsertWithoutCobrosClienteInput = {
    update: XOR<PresupuestoUpdateWithoutCobrosClienteInput, PresupuestoUncheckedUpdateWithoutCobrosClienteInput>
    create: XOR<PresupuestoCreateWithoutCobrosClienteInput, PresupuestoUncheckedCreateWithoutCobrosClienteInput>
    where?: PresupuestoWhereInput
  }

  export type PresupuestoUpdateToOneWithWhereWithoutCobrosClienteInput = {
    where?: PresupuestoWhereInput
    data: XOR<PresupuestoUpdateWithoutCobrosClienteInput, PresupuestoUncheckedUpdateWithoutCobrosClienteInput>
  }

  export type PresupuestoUpdateWithoutCobrosClienteInput = {
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUpdateManyWithoutPresupuestoNestedInput
    facturas?: FacturaUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUpdateManyWithoutPresupuestoNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutPresupuestosNestedInput
    empresa?: EmpresaUpdateOneWithoutPresupuestosNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutPresupuestosNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutPresupuestoNestedInput
  }

  export type PresupuestoUncheckedUpdateWithoutCobrosClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedUpdateManyWithoutPresupuestoNestedInput
    facturas?: FacturaUncheckedUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUncheckedUpdateManyWithoutPresupuestoNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutPresupuestoNestedInput
  }

  export type MonedaUpsertWithoutCobrosClienteInput = {
    update: XOR<MonedaUpdateWithoutCobrosClienteInput, MonedaUncheckedUpdateWithoutCobrosClienteInput>
    create: XOR<MonedaCreateWithoutCobrosClienteInput, MonedaUncheckedCreateWithoutCobrosClienteInput>
    where?: MonedaWhereInput
  }

  export type MonedaUpdateToOneWithWhereWithoutCobrosClienteInput = {
    where?: MonedaWhereInput
    data: XOR<MonedaUpdateWithoutCobrosClienteInput, MonedaUncheckedUpdateWithoutCobrosClienteInput>
  }

  export type MonedaUpdateWithoutCobrosClienteInput = {
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type MonedaUncheckedUpdateWithoutCobrosClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUncheckedUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUncheckedUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUncheckedUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUncheckedUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type MonedaCreateWithoutTiposCambioInput = {
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoCreateNestedManyWithoutMonedaInput
    productos?: ProductoCreateNestedManyWithoutMonedaInput
    servicios?: ServicioCreateNestedManyWithoutMonedaInput
    recibos?: ReciboCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutMonedaInput
    tiposCambioDestino?: TipoCambioCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaUncheckedCreateWithoutTiposCambioInput = {
    id?: number
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaUncheckedCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoUncheckedCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutMonedaInput
    productos?: ProductoUncheckedCreateNestedManyWithoutMonedaInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutMonedaInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutMonedaInput
    tiposCambioDestino?: TipoCambioUncheckedCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaCreateOrConnectWithoutTiposCambioInput = {
    where: MonedaWhereUniqueInput
    create: XOR<MonedaCreateWithoutTiposCambioInput, MonedaUncheckedCreateWithoutTiposCambioInput>
  }

  export type MonedaCreateWithoutTiposCambioDestinoInput = {
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoCreateNestedManyWithoutMonedaInput
    productos?: ProductoCreateNestedManyWithoutMonedaInput
    servicios?: ServicioCreateNestedManyWithoutMonedaInput
    recibos?: ReciboCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioCreateNestedManyWithoutMonedaDesdeInput
  }

  export type MonedaUncheckedCreateWithoutTiposCambioDestinoInput = {
    id?: number
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaUncheckedCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoUncheckedCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutMonedaInput
    productos?: ProductoUncheckedCreateNestedManyWithoutMonedaInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutMonedaInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioUncheckedCreateNestedManyWithoutMonedaDesdeInput
  }

  export type MonedaCreateOrConnectWithoutTiposCambioDestinoInput = {
    where: MonedaWhereUniqueInput
    create: XOR<MonedaCreateWithoutTiposCambioDestinoInput, MonedaUncheckedCreateWithoutTiposCambioDestinoInput>
  }

  export type MonedaUpsertWithoutTiposCambioInput = {
    update: XOR<MonedaUpdateWithoutTiposCambioInput, MonedaUncheckedUpdateWithoutTiposCambioInput>
    create: XOR<MonedaCreateWithoutTiposCambioInput, MonedaUncheckedCreateWithoutTiposCambioInput>
    where?: MonedaWhereInput
  }

  export type MonedaUpdateToOneWithWhereWithoutTiposCambioInput = {
    where?: MonedaWhereInput
    data: XOR<MonedaUpdateWithoutTiposCambioInput, MonedaUncheckedUpdateWithoutTiposCambioInput>
  }

  export type MonedaUpdateWithoutTiposCambioInput = {
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutMonedaNestedInput
    tiposCambioDestino?: TipoCambioUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type MonedaUncheckedUpdateWithoutTiposCambioInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUncheckedUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUncheckedUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutMonedaNestedInput
    tiposCambioDestino?: TipoCambioUncheckedUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type MonedaUpsertWithoutTiposCambioDestinoInput = {
    update: XOR<MonedaUpdateWithoutTiposCambioDestinoInput, MonedaUncheckedUpdateWithoutTiposCambioDestinoInput>
    create: XOR<MonedaCreateWithoutTiposCambioDestinoInput, MonedaUncheckedCreateWithoutTiposCambioDestinoInput>
    where?: MonedaWhereInput
  }

  export type MonedaUpdateToOneWithWhereWithoutTiposCambioDestinoInput = {
    where?: MonedaWhereInput
    data: XOR<MonedaUpdateWithoutTiposCambioDestinoInput, MonedaUncheckedUpdateWithoutTiposCambioDestinoInput>
  }

  export type MonedaUpdateWithoutTiposCambioDestinoInput = {
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUpdateManyWithoutMonedaDesdeNestedInput
  }

  export type MonedaUncheckedUpdateWithoutTiposCambioDestinoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUncheckedUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUncheckedUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUncheckedUpdateManyWithoutMonedaDesdeNestedInput
  }

  export type GastoOperativoCreateWithoutProveedorInput = {
    concepto: string
    descripcion?: string | null
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    categoria: $Enums.CategoriaGasto
    esRecurrente?: boolean
    frecuencia?: string | null
    comprobante?: string | null
    observaciones?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    asignaciones?: AsignacionGastoProyectoCreateNestedManyWithoutGastoInput
    moneda: MonedaCreateNestedOneWithoutGastosOperativosInput
  }

  export type GastoOperativoUncheckedCreateWithoutProveedorInput = {
    id?: number
    concepto: string
    descripcion?: string | null
    monto: Decimal | DecimalJsLike | number | string
    monedaId: number
    fecha: Date | string
    categoria: $Enums.CategoriaGasto
    esRecurrente?: boolean
    frecuencia?: string | null
    comprobante?: string | null
    observaciones?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    asignaciones?: AsignacionGastoProyectoUncheckedCreateNestedManyWithoutGastoInput
  }

  export type GastoOperativoCreateOrConnectWithoutProveedorInput = {
    where: GastoOperativoWhereUniqueInput
    create: XOR<GastoOperativoCreateWithoutProveedorInput, GastoOperativoUncheckedCreateWithoutProveedorInput>
  }

  export type GastoOperativoCreateManyProveedorInputEnvelope = {
    data: GastoOperativoCreateManyProveedorInput | GastoOperativoCreateManyProveedorInput[]
    skipDuplicates?: boolean
  }

  export type HistorialPrecioCreateWithoutUsuarioInput = {
    precio: Decimal | DecimalJsLike | number | string
    fechaDesde: Date | string
    fechaHasta?: Date | string | null
    motivoCambio?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    moneda: MonedaCreateNestedOneWithoutHistorialPreciosInput
    producto?: ProductoCreateNestedOneWithoutHistorialPreciosInput
    servicio?: ServicioCreateNestedOneWithoutHistorialPreciosInput
  }

  export type HistorialPrecioUncheckedCreateWithoutUsuarioInput = {
    id?: number
    productoId?: number | null
    servicioId?: number | null
    monedaId: number
    precio: Decimal | DecimalJsLike | number | string
    fechaDesde: Date | string
    fechaHasta?: Date | string | null
    motivoCambio?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HistorialPrecioCreateOrConnectWithoutUsuarioInput = {
    where: HistorialPrecioWhereUniqueInput
    create: XOR<HistorialPrecioCreateWithoutUsuarioInput, HistorialPrecioUncheckedCreateWithoutUsuarioInput>
  }

  export type HistorialPrecioCreateManyUsuarioInputEnvelope = {
    data: HistorialPrecioCreateManyUsuarioInput | HistorialPrecioCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type PresupuestoCreateWithoutClienteInput = {
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoCreateNestedManyWithoutPresupuestoInput
    facturas?: FacturaCreateNestedManyWithoutPresupuestoInput
    items?: ItemCreateNestedManyWithoutPresupuestoInput
    empresa?: EmpresaCreateNestedOneWithoutPresupuestosInput
    moneda?: MonedaCreateNestedOneWithoutPresupuestosInput
    presupuestoImpuestos?: PresupuestoImpuestoCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoUncheckedCreateWithoutClienteInput = {
    id?: number
    empresaId?: number | null
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedCreateNestedManyWithoutPresupuestoInput
    facturas?: FacturaUncheckedCreateNestedManyWithoutPresupuestoInput
    items?: ItemUncheckedCreateNestedManyWithoutPresupuestoInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoCreateOrConnectWithoutClienteInput = {
    where: PresupuestoWhereUniqueInput
    create: XOR<PresupuestoCreateWithoutClienteInput, PresupuestoUncheckedCreateWithoutClienteInput>
  }

  export type PresupuestoCreateManyClienteInputEnvelope = {
    data: PresupuestoCreateManyClienteInput | PresupuestoCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type ProductoCreateWithoutProveedorInput = {
    nombre: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutProductoInput
    items?: ItemCreateNestedManyWithoutProductoInput
    moneda?: MonedaCreateNestedOneWithoutProductosInput
  }

  export type ProductoUncheckedCreateWithoutProveedorInput = {
    id?: number
    nombre: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
    items?: ItemUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutProveedorInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutProveedorInput, ProductoUncheckedCreateWithoutProveedorInput>
  }

  export type ProductoCreateManyProveedorInputEnvelope = {
    data: ProductoCreateManyProveedorInput | ProductoCreateManyProveedorInput[]
    skipDuplicates?: boolean
  }

  export type ReciboCreateWithoutPersonaInput = {
    concepto: string
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    tipo?: $Enums.ReciboTipo
    createdAt?: Date | string
    updatedAt?: Date | string
    presupuesto?: PresupuestoCreateNestedOneWithoutRecibosInput
    moneda?: MonedaCreateNestedOneWithoutRecibosInput
  }

  export type ReciboUncheckedCreateWithoutPersonaInput = {
    id?: number
    presupuestoId?: number | null
    concepto: string
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    tipo?: $Enums.ReciboTipo
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
  }

  export type ReciboCreateOrConnectWithoutPersonaInput = {
    where: ReciboWhereUniqueInput
    create: XOR<ReciboCreateWithoutPersonaInput, ReciboUncheckedCreateWithoutPersonaInput>
  }

  export type ReciboCreateManyPersonaInputEnvelope = {
    data: ReciboCreateManyPersonaInput | ReciboCreateManyPersonaInput[]
    skipDuplicates?: boolean
  }

  export type PagoAdminCreateWithoutAdminInput = {
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    presupuesto: PresupuestoCreateNestedOneWithoutPagosAdminInput
    moneda?: MonedaCreateNestedOneWithoutPagosAdminInput
  }

  export type PagoAdminUncheckedCreateWithoutAdminInput = {
    id?: number
    presupuestoId: number
    monto: Decimal | DecimalJsLike | number | string
    monedaId?: number
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PagoAdminCreateOrConnectWithoutAdminInput = {
    where: PagoAdminWhereUniqueInput
    create: XOR<PagoAdminCreateWithoutAdminInput, PagoAdminUncheckedCreateWithoutAdminInput>
  }

  export type PagoAdminCreateManyAdminInputEnvelope = {
    data: PagoAdminCreateManyAdminInput | PagoAdminCreateManyAdminInput[]
    skipDuplicates?: boolean
  }

  export type ServicioCreateWithoutProveedorInput = {
    nombre: string
    descripcion: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutServicioInput
    items?: ItemCreateNestedManyWithoutServicioInput
    moneda?: MonedaCreateNestedOneWithoutServiciosInput
  }

  export type ServicioUncheckedCreateWithoutProveedorInput = {
    id?: number
    nombre: string
    descripcion: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutServicioInput
    items?: ItemUncheckedCreateNestedManyWithoutServicioInput
  }

  export type ServicioCreateOrConnectWithoutProveedorInput = {
    where: ServicioWhereUniqueInput
    create: XOR<ServicioCreateWithoutProveedorInput, ServicioUncheckedCreateWithoutProveedorInput>
  }

  export type ServicioCreateManyProveedorInputEnvelope = {
    data: ServicioCreateManyProveedorInput | ServicioCreateManyProveedorInput[]
    skipDuplicates?: boolean
  }

  export type EmpresaCreateWithoutClienteInput = {
    nombre: string
    razonSocial?: string | null
    cuit?: string | null
    telefono?: string | null
    email?: string | null
    direccion?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    presupuestos?: PresupuestoCreateNestedManyWithoutEmpresaInput
    facturas?: FacturaCreateNestedManyWithoutEmpresaInput
  }

  export type EmpresaUncheckedCreateWithoutClienteInput = {
    id?: number
    nombre: string
    razonSocial?: string | null
    cuit?: string | null
    telefono?: string | null
    email?: string | null
    direccion?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutEmpresaInput
    facturas?: FacturaUncheckedCreateNestedManyWithoutEmpresaInput
  }

  export type EmpresaCreateOrConnectWithoutClienteInput = {
    where: EmpresaWhereUniqueInput
    create: XOR<EmpresaCreateWithoutClienteInput, EmpresaUncheckedCreateWithoutClienteInput>
  }

  export type EmpresaCreateManyClienteInputEnvelope = {
    data: EmpresaCreateManyClienteInput | EmpresaCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type GastoOperativoUpsertWithWhereUniqueWithoutProveedorInput = {
    where: GastoOperativoWhereUniqueInput
    update: XOR<GastoOperativoUpdateWithoutProveedorInput, GastoOperativoUncheckedUpdateWithoutProveedorInput>
    create: XOR<GastoOperativoCreateWithoutProveedorInput, GastoOperativoUncheckedCreateWithoutProveedorInput>
  }

  export type GastoOperativoUpdateWithWhereUniqueWithoutProveedorInput = {
    where: GastoOperativoWhereUniqueInput
    data: XOR<GastoOperativoUpdateWithoutProveedorInput, GastoOperativoUncheckedUpdateWithoutProveedorInput>
  }

  export type GastoOperativoUpdateManyWithWhereWithoutProveedorInput = {
    where: GastoOperativoScalarWhereInput
    data: XOR<GastoOperativoUpdateManyMutationInput, GastoOperativoUncheckedUpdateManyWithoutProveedorInput>
  }

  export type HistorialPrecioUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: HistorialPrecioWhereUniqueInput
    update: XOR<HistorialPrecioUpdateWithoutUsuarioInput, HistorialPrecioUncheckedUpdateWithoutUsuarioInput>
    create: XOR<HistorialPrecioCreateWithoutUsuarioInput, HistorialPrecioUncheckedCreateWithoutUsuarioInput>
  }

  export type HistorialPrecioUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: HistorialPrecioWhereUniqueInput
    data: XOR<HistorialPrecioUpdateWithoutUsuarioInput, HistorialPrecioUncheckedUpdateWithoutUsuarioInput>
  }

  export type HistorialPrecioUpdateManyWithWhereWithoutUsuarioInput = {
    where: HistorialPrecioScalarWhereInput
    data: XOR<HistorialPrecioUpdateManyMutationInput, HistorialPrecioUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type PresupuestoUpsertWithWhereUniqueWithoutClienteInput = {
    where: PresupuestoWhereUniqueInput
    update: XOR<PresupuestoUpdateWithoutClienteInput, PresupuestoUncheckedUpdateWithoutClienteInput>
    create: XOR<PresupuestoCreateWithoutClienteInput, PresupuestoUncheckedCreateWithoutClienteInput>
  }

  export type PresupuestoUpdateWithWhereUniqueWithoutClienteInput = {
    where: PresupuestoWhereUniqueInput
    data: XOR<PresupuestoUpdateWithoutClienteInput, PresupuestoUncheckedUpdateWithoutClienteInput>
  }

  export type PresupuestoUpdateManyWithWhereWithoutClienteInput = {
    where: PresupuestoScalarWhereInput
    data: XOR<PresupuestoUpdateManyMutationInput, PresupuestoUncheckedUpdateManyWithoutClienteInput>
  }

  export type ProductoUpsertWithWhereUniqueWithoutProveedorInput = {
    where: ProductoWhereUniqueInput
    update: XOR<ProductoUpdateWithoutProveedorInput, ProductoUncheckedUpdateWithoutProveedorInput>
    create: XOR<ProductoCreateWithoutProveedorInput, ProductoUncheckedCreateWithoutProveedorInput>
  }

  export type ProductoUpdateWithWhereUniqueWithoutProveedorInput = {
    where: ProductoWhereUniqueInput
    data: XOR<ProductoUpdateWithoutProveedorInput, ProductoUncheckedUpdateWithoutProveedorInput>
  }

  export type ProductoUpdateManyWithWhereWithoutProveedorInput = {
    where: ProductoScalarWhereInput
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyWithoutProveedorInput>
  }

  export type ReciboUpsertWithWhereUniqueWithoutPersonaInput = {
    where: ReciboWhereUniqueInput
    update: XOR<ReciboUpdateWithoutPersonaInput, ReciboUncheckedUpdateWithoutPersonaInput>
    create: XOR<ReciboCreateWithoutPersonaInput, ReciboUncheckedCreateWithoutPersonaInput>
  }

  export type ReciboUpdateWithWhereUniqueWithoutPersonaInput = {
    where: ReciboWhereUniqueInput
    data: XOR<ReciboUpdateWithoutPersonaInput, ReciboUncheckedUpdateWithoutPersonaInput>
  }

  export type ReciboUpdateManyWithWhereWithoutPersonaInput = {
    where: ReciboScalarWhereInput
    data: XOR<ReciboUpdateManyMutationInput, ReciboUncheckedUpdateManyWithoutPersonaInput>
  }

  export type PagoAdminUpsertWithWhereUniqueWithoutAdminInput = {
    where: PagoAdminWhereUniqueInput
    update: XOR<PagoAdminUpdateWithoutAdminInput, PagoAdminUncheckedUpdateWithoutAdminInput>
    create: XOR<PagoAdminCreateWithoutAdminInput, PagoAdminUncheckedCreateWithoutAdminInput>
  }

  export type PagoAdminUpdateWithWhereUniqueWithoutAdminInput = {
    where: PagoAdminWhereUniqueInput
    data: XOR<PagoAdminUpdateWithoutAdminInput, PagoAdminUncheckedUpdateWithoutAdminInput>
  }

  export type PagoAdminUpdateManyWithWhereWithoutAdminInput = {
    where: PagoAdminScalarWhereInput
    data: XOR<PagoAdminUpdateManyMutationInput, PagoAdminUncheckedUpdateManyWithoutAdminInput>
  }

  export type ServicioUpsertWithWhereUniqueWithoutProveedorInput = {
    where: ServicioWhereUniqueInput
    update: XOR<ServicioUpdateWithoutProveedorInput, ServicioUncheckedUpdateWithoutProveedorInput>
    create: XOR<ServicioCreateWithoutProveedorInput, ServicioUncheckedCreateWithoutProveedorInput>
  }

  export type ServicioUpdateWithWhereUniqueWithoutProveedorInput = {
    where: ServicioWhereUniqueInput
    data: XOR<ServicioUpdateWithoutProveedorInput, ServicioUncheckedUpdateWithoutProveedorInput>
  }

  export type ServicioUpdateManyWithWhereWithoutProveedorInput = {
    where: ServicioScalarWhereInput
    data: XOR<ServicioUpdateManyMutationInput, ServicioUncheckedUpdateManyWithoutProveedorInput>
  }

  export type EmpresaUpsertWithWhereUniqueWithoutClienteInput = {
    where: EmpresaWhereUniqueInput
    update: XOR<EmpresaUpdateWithoutClienteInput, EmpresaUncheckedUpdateWithoutClienteInput>
    create: XOR<EmpresaCreateWithoutClienteInput, EmpresaUncheckedCreateWithoutClienteInput>
  }

  export type EmpresaUpdateWithWhereUniqueWithoutClienteInput = {
    where: EmpresaWhereUniqueInput
    data: XOR<EmpresaUpdateWithoutClienteInput, EmpresaUncheckedUpdateWithoutClienteInput>
  }

  export type EmpresaUpdateManyWithWhereWithoutClienteInput = {
    where: EmpresaScalarWhereInput
    data: XOR<EmpresaUpdateManyMutationInput, EmpresaUncheckedUpdateManyWithoutClienteInput>
  }

  export type EmpresaScalarWhereInput = {
    AND?: EmpresaScalarWhereInput | EmpresaScalarWhereInput[]
    OR?: EmpresaScalarWhereInput[]
    NOT?: EmpresaScalarWhereInput | EmpresaScalarWhereInput[]
    id?: IntFilter<"Empresa"> | number
    nombre?: StringFilter<"Empresa"> | string
    razonSocial?: StringNullableFilter<"Empresa"> | string | null
    cuit?: StringNullableFilter<"Empresa"> | string | null
    telefono?: StringNullableFilter<"Empresa"> | string | null
    email?: StringNullableFilter<"Empresa"> | string | null
    direccion?: StringNullableFilter<"Empresa"> | string | null
    clienteId?: IntFilter<"Empresa"> | number
    activo?: BoolFilter<"Empresa"> | boolean
    createdAt?: DateTimeFilter<"Empresa"> | Date | string
    updatedAt?: DateTimeFilter<"Empresa"> | Date | string
  }

  export type PersonaCreateWithoutEmpresasInput = {
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
    gastosComoProveedor?: GastoOperativoCreateNestedManyWithoutProveedorInput
    historialPreciosUsuario?: HistorialPrecioCreateNestedManyWithoutUsuarioInput
    presupuestos?: PresupuestoCreateNestedManyWithoutClienteInput
    productos?: ProductoCreateNestedManyWithoutProveedorInput
    recibos?: ReciboCreateNestedManyWithoutPersonaInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutAdminInput
    servicios?: ServicioCreateNestedManyWithoutProveedorInput
  }

  export type PersonaUncheckedCreateWithoutEmpresasInput = {
    id?: number
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
    gastosComoProveedor?: GastoOperativoUncheckedCreateNestedManyWithoutProveedorInput
    historialPreciosUsuario?: HistorialPrecioUncheckedCreateNestedManyWithoutUsuarioInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutClienteInput
    productos?: ProductoUncheckedCreateNestedManyWithoutProveedorInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutPersonaInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutAdminInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutProveedorInput
  }

  export type PersonaCreateOrConnectWithoutEmpresasInput = {
    where: PersonaWhereUniqueInput
    create: XOR<PersonaCreateWithoutEmpresasInput, PersonaUncheckedCreateWithoutEmpresasInput>
  }

  export type PresupuestoCreateWithoutEmpresaInput = {
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoCreateNestedManyWithoutPresupuestoInput
    facturas?: FacturaCreateNestedManyWithoutPresupuestoInput
    items?: ItemCreateNestedManyWithoutPresupuestoInput
    cliente: PersonaCreateNestedOneWithoutPresupuestosInput
    moneda?: MonedaCreateNestedOneWithoutPresupuestosInput
    presupuestoImpuestos?: PresupuestoImpuestoCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoUncheckedCreateWithoutEmpresaInput = {
    id?: number
    clienteId: number
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedCreateNestedManyWithoutPresupuestoInput
    facturas?: FacturaUncheckedCreateNestedManyWithoutPresupuestoInput
    items?: ItemUncheckedCreateNestedManyWithoutPresupuestoInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoCreateOrConnectWithoutEmpresaInput = {
    where: PresupuestoWhereUniqueInput
    create: XOR<PresupuestoCreateWithoutEmpresaInput, PresupuestoUncheckedCreateWithoutEmpresaInput>
  }

  export type PresupuestoCreateManyEmpresaInputEnvelope = {
    data: PresupuestoCreateManyEmpresaInput | PresupuestoCreateManyEmpresaInput[]
    skipDuplicates?: boolean
  }

  export type FacturaCreateWithoutEmpresaInput = {
    numero: string
    fecha: Date | string
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado: $Enums.EstadoFactura
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
    impuestoAplicado: ImpuestoCreateNestedOneWithoutFacturasInput
    moneda?: MonedaCreateNestedOneWithoutFacturasInput
    presupuesto: PresupuestoCreateNestedOneWithoutFacturasInput
  }

  export type FacturaUncheckedCreateWithoutEmpresaInput = {
    id?: number
    numero: string
    presupuestoId: number
    fecha: Date | string
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado: $Enums.EstadoFactura
    impuestoAplicadoId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
  }

  export type FacturaCreateOrConnectWithoutEmpresaInput = {
    where: FacturaWhereUniqueInput
    create: XOR<FacturaCreateWithoutEmpresaInput, FacturaUncheckedCreateWithoutEmpresaInput>
  }

  export type FacturaCreateManyEmpresaInputEnvelope = {
    data: FacturaCreateManyEmpresaInput | FacturaCreateManyEmpresaInput[]
    skipDuplicates?: boolean
  }

  export type PersonaUpsertWithoutEmpresasInput = {
    update: XOR<PersonaUpdateWithoutEmpresasInput, PersonaUncheckedUpdateWithoutEmpresasInput>
    create: XOR<PersonaCreateWithoutEmpresasInput, PersonaUncheckedCreateWithoutEmpresasInput>
    where?: PersonaWhereInput
  }

  export type PersonaUpdateToOneWithWhereWithoutEmpresasInput = {
    where?: PersonaWhereInput
    data: XOR<PersonaUpdateWithoutEmpresasInput, PersonaUncheckedUpdateWithoutEmpresasInput>
  }

  export type PersonaUpdateWithoutEmpresasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
    gastosComoProveedor?: GastoOperativoUpdateManyWithoutProveedorNestedInput
    historialPreciosUsuario?: HistorialPrecioUpdateManyWithoutUsuarioNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutClienteNestedInput
    productos?: ProductoUpdateManyWithoutProveedorNestedInput
    recibos?: ReciboUpdateManyWithoutPersonaNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutAdminNestedInput
    servicios?: ServicioUpdateManyWithoutProveedorNestedInput
  }

  export type PersonaUncheckedUpdateWithoutEmpresasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
    gastosComoProveedor?: GastoOperativoUncheckedUpdateManyWithoutProveedorNestedInput
    historialPreciosUsuario?: HistorialPrecioUncheckedUpdateManyWithoutUsuarioNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutClienteNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutProveedorNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutPersonaNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutAdminNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutProveedorNestedInput
  }

  export type PresupuestoUpsertWithWhereUniqueWithoutEmpresaInput = {
    where: PresupuestoWhereUniqueInput
    update: XOR<PresupuestoUpdateWithoutEmpresaInput, PresupuestoUncheckedUpdateWithoutEmpresaInput>
    create: XOR<PresupuestoCreateWithoutEmpresaInput, PresupuestoUncheckedCreateWithoutEmpresaInput>
  }

  export type PresupuestoUpdateWithWhereUniqueWithoutEmpresaInput = {
    where: PresupuestoWhereUniqueInput
    data: XOR<PresupuestoUpdateWithoutEmpresaInput, PresupuestoUncheckedUpdateWithoutEmpresaInput>
  }

  export type PresupuestoUpdateManyWithWhereWithoutEmpresaInput = {
    where: PresupuestoScalarWhereInput
    data: XOR<PresupuestoUpdateManyMutationInput, PresupuestoUncheckedUpdateManyWithoutEmpresaInput>
  }

  export type FacturaUpsertWithWhereUniqueWithoutEmpresaInput = {
    where: FacturaWhereUniqueInput
    update: XOR<FacturaUpdateWithoutEmpresaInput, FacturaUncheckedUpdateWithoutEmpresaInput>
    create: XOR<FacturaCreateWithoutEmpresaInput, FacturaUncheckedCreateWithoutEmpresaInput>
  }

  export type FacturaUpdateWithWhereUniqueWithoutEmpresaInput = {
    where: FacturaWhereUniqueInput
    data: XOR<FacturaUpdateWithoutEmpresaInput, FacturaUncheckedUpdateWithoutEmpresaInput>
  }

  export type FacturaUpdateManyWithWhereWithoutEmpresaInput = {
    where: FacturaScalarWhereInput
    data: XOR<FacturaUpdateManyMutationInput, FacturaUncheckedUpdateManyWithoutEmpresaInput>
  }

  export type HistorialPrecioCreateWithoutProductoInput = {
    precio: Decimal | DecimalJsLike | number | string
    fechaDesde: Date | string
    fechaHasta?: Date | string | null
    motivoCambio?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    moneda: MonedaCreateNestedOneWithoutHistorialPreciosInput
    servicio?: ServicioCreateNestedOneWithoutHistorialPreciosInput
    usuario?: PersonaCreateNestedOneWithoutHistorialPreciosUsuarioInput
  }

  export type HistorialPrecioUncheckedCreateWithoutProductoInput = {
    id?: number
    servicioId?: number | null
    monedaId: number
    precio: Decimal | DecimalJsLike | number | string
    fechaDesde: Date | string
    fechaHasta?: Date | string | null
    motivoCambio?: string | null
    usuarioId?: number | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HistorialPrecioCreateOrConnectWithoutProductoInput = {
    where: HistorialPrecioWhereUniqueInput
    create: XOR<HistorialPrecioCreateWithoutProductoInput, HistorialPrecioUncheckedCreateWithoutProductoInput>
  }

  export type HistorialPrecioCreateManyProductoInputEnvelope = {
    data: HistorialPrecioCreateManyProductoInput | HistorialPrecioCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type ItemCreateWithoutProductoInput = {
    cantidad: number
    precioUnitario: Decimal | DecimalJsLike | number | string
    presupuesto: PresupuestoCreateNestedOneWithoutItemsInput
    servicio?: ServicioCreateNestedOneWithoutItemsInput
  }

  export type ItemUncheckedCreateWithoutProductoInput = {
    id?: number
    presupuestoId: number
    servicioId?: number | null
    cantidad: number
    precioUnitario: Decimal | DecimalJsLike | number | string
  }

  export type ItemCreateOrConnectWithoutProductoInput = {
    where: ItemWhereUniqueInput
    create: XOR<ItemCreateWithoutProductoInput, ItemUncheckedCreateWithoutProductoInput>
  }

  export type ItemCreateManyProductoInputEnvelope = {
    data: ItemCreateManyProductoInput | ItemCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type MonedaCreateWithoutProductosInput = {
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoCreateNestedManyWithoutMonedaInput
    servicios?: ServicioCreateNestedManyWithoutMonedaInput
    recibos?: ReciboCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaUncheckedCreateWithoutProductosInput = {
    id?: number
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaUncheckedCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoUncheckedCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutMonedaInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutMonedaInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioUncheckedCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioUncheckedCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaCreateOrConnectWithoutProductosInput = {
    where: MonedaWhereUniqueInput
    create: XOR<MonedaCreateWithoutProductosInput, MonedaUncheckedCreateWithoutProductosInput>
  }

  export type PersonaCreateWithoutProductosInput = {
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
    gastosComoProveedor?: GastoOperativoCreateNestedManyWithoutProveedorInput
    historialPreciosUsuario?: HistorialPrecioCreateNestedManyWithoutUsuarioInput
    presupuestos?: PresupuestoCreateNestedManyWithoutClienteInput
    recibos?: ReciboCreateNestedManyWithoutPersonaInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutAdminInput
    servicios?: ServicioCreateNestedManyWithoutProveedorInput
    empresas?: EmpresaCreateNestedManyWithoutClienteInput
  }

  export type PersonaUncheckedCreateWithoutProductosInput = {
    id?: number
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
    gastosComoProveedor?: GastoOperativoUncheckedCreateNestedManyWithoutProveedorInput
    historialPreciosUsuario?: HistorialPrecioUncheckedCreateNestedManyWithoutUsuarioInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutClienteInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutPersonaInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutAdminInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutProveedorInput
    empresas?: EmpresaUncheckedCreateNestedManyWithoutClienteInput
  }

  export type PersonaCreateOrConnectWithoutProductosInput = {
    where: PersonaWhereUniqueInput
    create: XOR<PersonaCreateWithoutProductosInput, PersonaUncheckedCreateWithoutProductosInput>
  }

  export type HistorialPrecioUpsertWithWhereUniqueWithoutProductoInput = {
    where: HistorialPrecioWhereUniqueInput
    update: XOR<HistorialPrecioUpdateWithoutProductoInput, HistorialPrecioUncheckedUpdateWithoutProductoInput>
    create: XOR<HistorialPrecioCreateWithoutProductoInput, HistorialPrecioUncheckedCreateWithoutProductoInput>
  }

  export type HistorialPrecioUpdateWithWhereUniqueWithoutProductoInput = {
    where: HistorialPrecioWhereUniqueInput
    data: XOR<HistorialPrecioUpdateWithoutProductoInput, HistorialPrecioUncheckedUpdateWithoutProductoInput>
  }

  export type HistorialPrecioUpdateManyWithWhereWithoutProductoInput = {
    where: HistorialPrecioScalarWhereInput
    data: XOR<HistorialPrecioUpdateManyMutationInput, HistorialPrecioUncheckedUpdateManyWithoutProductoInput>
  }

  export type ItemUpsertWithWhereUniqueWithoutProductoInput = {
    where: ItemWhereUniqueInput
    update: XOR<ItemUpdateWithoutProductoInput, ItemUncheckedUpdateWithoutProductoInput>
    create: XOR<ItemCreateWithoutProductoInput, ItemUncheckedCreateWithoutProductoInput>
  }

  export type ItemUpdateWithWhereUniqueWithoutProductoInput = {
    where: ItemWhereUniqueInput
    data: XOR<ItemUpdateWithoutProductoInput, ItemUncheckedUpdateWithoutProductoInput>
  }

  export type ItemUpdateManyWithWhereWithoutProductoInput = {
    where: ItemScalarWhereInput
    data: XOR<ItemUpdateManyMutationInput, ItemUncheckedUpdateManyWithoutProductoInput>
  }

  export type ItemScalarWhereInput = {
    AND?: ItemScalarWhereInput | ItemScalarWhereInput[]
    OR?: ItemScalarWhereInput[]
    NOT?: ItemScalarWhereInput | ItemScalarWhereInput[]
    id?: IntFilter<"Item"> | number
    presupuestoId?: IntFilter<"Item"> | number
    productoId?: IntNullableFilter<"Item"> | number | null
    servicioId?: IntNullableFilter<"Item"> | number | null
    cantidad?: IntFilter<"Item"> | number
    precioUnitario?: DecimalFilter<"Item"> | Decimal | DecimalJsLike | number | string
  }

  export type MonedaUpsertWithoutProductosInput = {
    update: XOR<MonedaUpdateWithoutProductosInput, MonedaUncheckedUpdateWithoutProductosInput>
    create: XOR<MonedaCreateWithoutProductosInput, MonedaUncheckedCreateWithoutProductosInput>
    where?: MonedaWhereInput
  }

  export type MonedaUpdateToOneWithWhereWithoutProductosInput = {
    where?: MonedaWhereInput
    data: XOR<MonedaUpdateWithoutProductosInput, MonedaUncheckedUpdateWithoutProductosInput>
  }

  export type MonedaUpdateWithoutProductosInput = {
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type MonedaUncheckedUpdateWithoutProductosInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUncheckedUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUncheckedUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUncheckedUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUncheckedUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type PersonaUpsertWithoutProductosInput = {
    update: XOR<PersonaUpdateWithoutProductosInput, PersonaUncheckedUpdateWithoutProductosInput>
    create: XOR<PersonaCreateWithoutProductosInput, PersonaUncheckedCreateWithoutProductosInput>
    where?: PersonaWhereInput
  }

  export type PersonaUpdateToOneWithWhereWithoutProductosInput = {
    where?: PersonaWhereInput
    data: XOR<PersonaUpdateWithoutProductosInput, PersonaUncheckedUpdateWithoutProductosInput>
  }

  export type PersonaUpdateWithoutProductosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
    gastosComoProveedor?: GastoOperativoUpdateManyWithoutProveedorNestedInput
    historialPreciosUsuario?: HistorialPrecioUpdateManyWithoutUsuarioNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutClienteNestedInput
    recibos?: ReciboUpdateManyWithoutPersonaNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutAdminNestedInput
    servicios?: ServicioUpdateManyWithoutProveedorNestedInput
    empresas?: EmpresaUpdateManyWithoutClienteNestedInput
  }

  export type PersonaUncheckedUpdateWithoutProductosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
    gastosComoProveedor?: GastoOperativoUncheckedUpdateManyWithoutProveedorNestedInput
    historialPreciosUsuario?: HistorialPrecioUncheckedUpdateManyWithoutUsuarioNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutClienteNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutPersonaNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutAdminNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutProveedorNestedInput
    empresas?: EmpresaUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type HistorialPrecioCreateWithoutServicioInput = {
    precio: Decimal | DecimalJsLike | number | string
    fechaDesde: Date | string
    fechaHasta?: Date | string | null
    motivoCambio?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    moneda: MonedaCreateNestedOneWithoutHistorialPreciosInput
    producto?: ProductoCreateNestedOneWithoutHistorialPreciosInput
    usuario?: PersonaCreateNestedOneWithoutHistorialPreciosUsuarioInput
  }

  export type HistorialPrecioUncheckedCreateWithoutServicioInput = {
    id?: number
    productoId?: number | null
    monedaId: number
    precio: Decimal | DecimalJsLike | number | string
    fechaDesde: Date | string
    fechaHasta?: Date | string | null
    motivoCambio?: string | null
    usuarioId?: number | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HistorialPrecioCreateOrConnectWithoutServicioInput = {
    where: HistorialPrecioWhereUniqueInput
    create: XOR<HistorialPrecioCreateWithoutServicioInput, HistorialPrecioUncheckedCreateWithoutServicioInput>
  }

  export type HistorialPrecioCreateManyServicioInputEnvelope = {
    data: HistorialPrecioCreateManyServicioInput | HistorialPrecioCreateManyServicioInput[]
    skipDuplicates?: boolean
  }

  export type ItemCreateWithoutServicioInput = {
    cantidad: number
    precioUnitario: Decimal | DecimalJsLike | number | string
    presupuesto: PresupuestoCreateNestedOneWithoutItemsInput
    producto?: ProductoCreateNestedOneWithoutItemsInput
  }

  export type ItemUncheckedCreateWithoutServicioInput = {
    id?: number
    presupuestoId: number
    productoId?: number | null
    cantidad: number
    precioUnitario: Decimal | DecimalJsLike | number | string
  }

  export type ItemCreateOrConnectWithoutServicioInput = {
    where: ItemWhereUniqueInput
    create: XOR<ItemCreateWithoutServicioInput, ItemUncheckedCreateWithoutServicioInput>
  }

  export type ItemCreateManyServicioInputEnvelope = {
    data: ItemCreateManyServicioInput | ItemCreateManyServicioInput[]
    skipDuplicates?: boolean
  }

  export type MonedaCreateWithoutServiciosInput = {
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoCreateNestedManyWithoutMonedaInput
    productos?: ProductoCreateNestedManyWithoutMonedaInput
    recibos?: ReciboCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaUncheckedCreateWithoutServiciosInput = {
    id?: number
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaUncheckedCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoUncheckedCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutMonedaInput
    productos?: ProductoUncheckedCreateNestedManyWithoutMonedaInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioUncheckedCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioUncheckedCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaCreateOrConnectWithoutServiciosInput = {
    where: MonedaWhereUniqueInput
    create: XOR<MonedaCreateWithoutServiciosInput, MonedaUncheckedCreateWithoutServiciosInput>
  }

  export type PersonaCreateWithoutServiciosInput = {
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
    gastosComoProveedor?: GastoOperativoCreateNestedManyWithoutProveedorInput
    historialPreciosUsuario?: HistorialPrecioCreateNestedManyWithoutUsuarioInput
    presupuestos?: PresupuestoCreateNestedManyWithoutClienteInput
    productos?: ProductoCreateNestedManyWithoutProveedorInput
    recibos?: ReciboCreateNestedManyWithoutPersonaInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutAdminInput
    empresas?: EmpresaCreateNestedManyWithoutClienteInput
  }

  export type PersonaUncheckedCreateWithoutServiciosInput = {
    id?: number
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
    gastosComoProveedor?: GastoOperativoUncheckedCreateNestedManyWithoutProveedorInput
    historialPreciosUsuario?: HistorialPrecioUncheckedCreateNestedManyWithoutUsuarioInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutClienteInput
    productos?: ProductoUncheckedCreateNestedManyWithoutProveedorInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutPersonaInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutAdminInput
    empresas?: EmpresaUncheckedCreateNestedManyWithoutClienteInput
  }

  export type PersonaCreateOrConnectWithoutServiciosInput = {
    where: PersonaWhereUniqueInput
    create: XOR<PersonaCreateWithoutServiciosInput, PersonaUncheckedCreateWithoutServiciosInput>
  }

  export type HistorialPrecioUpsertWithWhereUniqueWithoutServicioInput = {
    where: HistorialPrecioWhereUniqueInput
    update: XOR<HistorialPrecioUpdateWithoutServicioInput, HistorialPrecioUncheckedUpdateWithoutServicioInput>
    create: XOR<HistorialPrecioCreateWithoutServicioInput, HistorialPrecioUncheckedCreateWithoutServicioInput>
  }

  export type HistorialPrecioUpdateWithWhereUniqueWithoutServicioInput = {
    where: HistorialPrecioWhereUniqueInput
    data: XOR<HistorialPrecioUpdateWithoutServicioInput, HistorialPrecioUncheckedUpdateWithoutServicioInput>
  }

  export type HistorialPrecioUpdateManyWithWhereWithoutServicioInput = {
    where: HistorialPrecioScalarWhereInput
    data: XOR<HistorialPrecioUpdateManyMutationInput, HistorialPrecioUncheckedUpdateManyWithoutServicioInput>
  }

  export type ItemUpsertWithWhereUniqueWithoutServicioInput = {
    where: ItemWhereUniqueInput
    update: XOR<ItemUpdateWithoutServicioInput, ItemUncheckedUpdateWithoutServicioInput>
    create: XOR<ItemCreateWithoutServicioInput, ItemUncheckedCreateWithoutServicioInput>
  }

  export type ItemUpdateWithWhereUniqueWithoutServicioInput = {
    where: ItemWhereUniqueInput
    data: XOR<ItemUpdateWithoutServicioInput, ItemUncheckedUpdateWithoutServicioInput>
  }

  export type ItemUpdateManyWithWhereWithoutServicioInput = {
    where: ItemScalarWhereInput
    data: XOR<ItemUpdateManyMutationInput, ItemUncheckedUpdateManyWithoutServicioInput>
  }

  export type MonedaUpsertWithoutServiciosInput = {
    update: XOR<MonedaUpdateWithoutServiciosInput, MonedaUncheckedUpdateWithoutServiciosInput>
    create: XOR<MonedaCreateWithoutServiciosInput, MonedaUncheckedCreateWithoutServiciosInput>
    where?: MonedaWhereInput
  }

  export type MonedaUpdateToOneWithWhereWithoutServiciosInput = {
    where?: MonedaWhereInput
    data: XOR<MonedaUpdateWithoutServiciosInput, MonedaUncheckedUpdateWithoutServiciosInput>
  }

  export type MonedaUpdateWithoutServiciosInput = {
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type MonedaUncheckedUpdateWithoutServiciosInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUncheckedUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUncheckedUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUncheckedUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUncheckedUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type PersonaUpsertWithoutServiciosInput = {
    update: XOR<PersonaUpdateWithoutServiciosInput, PersonaUncheckedUpdateWithoutServiciosInput>
    create: XOR<PersonaCreateWithoutServiciosInput, PersonaUncheckedCreateWithoutServiciosInput>
    where?: PersonaWhereInput
  }

  export type PersonaUpdateToOneWithWhereWithoutServiciosInput = {
    where?: PersonaWhereInput
    data: XOR<PersonaUpdateWithoutServiciosInput, PersonaUncheckedUpdateWithoutServiciosInput>
  }

  export type PersonaUpdateWithoutServiciosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
    gastosComoProveedor?: GastoOperativoUpdateManyWithoutProveedorNestedInput
    historialPreciosUsuario?: HistorialPrecioUpdateManyWithoutUsuarioNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutClienteNestedInput
    productos?: ProductoUpdateManyWithoutProveedorNestedInput
    recibos?: ReciboUpdateManyWithoutPersonaNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutAdminNestedInput
    empresas?: EmpresaUpdateManyWithoutClienteNestedInput
  }

  export type PersonaUncheckedUpdateWithoutServiciosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
    gastosComoProveedor?: GastoOperativoUncheckedUpdateManyWithoutProveedorNestedInput
    historialPreciosUsuario?: HistorialPrecioUncheckedUpdateManyWithoutUsuarioNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutClienteNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutProveedorNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutPersonaNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutAdminNestedInput
    empresas?: EmpresaUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type AsignacionGastoProyectoCreateWithoutPresupuestoInput = {
    porcentaje: Decimal | DecimalJsLike | number | string
    montoAsignado: Decimal | DecimalJsLike | number | string
    justificacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    gasto: GastoOperativoCreateNestedOneWithoutAsignacionesInput
  }

  export type AsignacionGastoProyectoUncheckedCreateWithoutPresupuestoInput = {
    id?: number
    gastoId: number
    porcentaje: Decimal | DecimalJsLike | number | string
    montoAsignado: Decimal | DecimalJsLike | number | string
    justificacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AsignacionGastoProyectoCreateOrConnectWithoutPresupuestoInput = {
    where: AsignacionGastoProyectoWhereUniqueInput
    create: XOR<AsignacionGastoProyectoCreateWithoutPresupuestoInput, AsignacionGastoProyectoUncheckedCreateWithoutPresupuestoInput>
  }

  export type AsignacionGastoProyectoCreateManyPresupuestoInputEnvelope = {
    data: AsignacionGastoProyectoCreateManyPresupuestoInput | AsignacionGastoProyectoCreateManyPresupuestoInput[]
    skipDuplicates?: boolean
  }

  export type FacturaCreateWithoutPresupuestoInput = {
    numero: string
    fecha: Date | string
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado: $Enums.EstadoFactura
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
    empresa?: EmpresaCreateNestedOneWithoutFacturasInput
    impuestoAplicado: ImpuestoCreateNestedOneWithoutFacturasInput
    moneda?: MonedaCreateNestedOneWithoutFacturasInput
  }

  export type FacturaUncheckedCreateWithoutPresupuestoInput = {
    id?: number
    numero: string
    empresaId?: number | null
    fecha: Date | string
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado: $Enums.EstadoFactura
    impuestoAplicadoId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
  }

  export type FacturaCreateOrConnectWithoutPresupuestoInput = {
    where: FacturaWhereUniqueInput
    create: XOR<FacturaCreateWithoutPresupuestoInput, FacturaUncheckedCreateWithoutPresupuestoInput>
  }

  export type FacturaCreateManyPresupuestoInputEnvelope = {
    data: FacturaCreateManyPresupuestoInput | FacturaCreateManyPresupuestoInput[]
    skipDuplicates?: boolean
  }

  export type ItemCreateWithoutPresupuestoInput = {
    cantidad: number
    precioUnitario: Decimal | DecimalJsLike | number | string
    producto?: ProductoCreateNestedOneWithoutItemsInput
    servicio?: ServicioCreateNestedOneWithoutItemsInput
  }

  export type ItemUncheckedCreateWithoutPresupuestoInput = {
    id?: number
    productoId?: number | null
    servicioId?: number | null
    cantidad: number
    precioUnitario: Decimal | DecimalJsLike | number | string
  }

  export type ItemCreateOrConnectWithoutPresupuestoInput = {
    where: ItemWhereUniqueInput
    create: XOR<ItemCreateWithoutPresupuestoInput, ItemUncheckedCreateWithoutPresupuestoInput>
  }

  export type ItemCreateManyPresupuestoInputEnvelope = {
    data: ItemCreateManyPresupuestoInput | ItemCreateManyPresupuestoInput[]
    skipDuplicates?: boolean
  }

  export type PersonaCreateWithoutPresupuestosInput = {
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
    gastosComoProveedor?: GastoOperativoCreateNestedManyWithoutProveedorInput
    historialPreciosUsuario?: HistorialPrecioCreateNestedManyWithoutUsuarioInput
    productos?: ProductoCreateNestedManyWithoutProveedorInput
    recibos?: ReciboCreateNestedManyWithoutPersonaInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutAdminInput
    servicios?: ServicioCreateNestedManyWithoutProveedorInput
    empresas?: EmpresaCreateNestedManyWithoutClienteInput
  }

  export type PersonaUncheckedCreateWithoutPresupuestosInput = {
    id?: number
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
    gastosComoProveedor?: GastoOperativoUncheckedCreateNestedManyWithoutProveedorInput
    historialPreciosUsuario?: HistorialPrecioUncheckedCreateNestedManyWithoutUsuarioInput
    productos?: ProductoUncheckedCreateNestedManyWithoutProveedorInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutPersonaInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutAdminInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutProveedorInput
    empresas?: EmpresaUncheckedCreateNestedManyWithoutClienteInput
  }

  export type PersonaCreateOrConnectWithoutPresupuestosInput = {
    where: PersonaWhereUniqueInput
    create: XOR<PersonaCreateWithoutPresupuestosInput, PersonaUncheckedCreateWithoutPresupuestosInput>
  }

  export type EmpresaCreateWithoutPresupuestosInput = {
    nombre: string
    razonSocial?: string | null
    cuit?: string | null
    telefono?: string | null
    email?: string | null
    direccion?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    cliente: PersonaCreateNestedOneWithoutEmpresasInput
    facturas?: FacturaCreateNestedManyWithoutEmpresaInput
  }

  export type EmpresaUncheckedCreateWithoutPresupuestosInput = {
    id?: number
    nombre: string
    razonSocial?: string | null
    cuit?: string | null
    telefono?: string | null
    email?: string | null
    direccion?: string | null
    clienteId: number
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaUncheckedCreateNestedManyWithoutEmpresaInput
  }

  export type EmpresaCreateOrConnectWithoutPresupuestosInput = {
    where: EmpresaWhereUniqueInput
    create: XOR<EmpresaCreateWithoutPresupuestosInput, EmpresaUncheckedCreateWithoutPresupuestosInput>
  }

  export type MonedaCreateWithoutPresupuestosInput = {
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutMonedaInput
    productos?: ProductoCreateNestedManyWithoutMonedaInput
    servicios?: ServicioCreateNestedManyWithoutMonedaInput
    recibos?: ReciboCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaUncheckedCreateWithoutPresupuestosInput = {
    id?: number
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaUncheckedCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoUncheckedCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutMonedaInput
    productos?: ProductoUncheckedCreateNestedManyWithoutMonedaInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutMonedaInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioUncheckedCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioUncheckedCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaCreateOrConnectWithoutPresupuestosInput = {
    where: MonedaWhereUniqueInput
    create: XOR<MonedaCreateWithoutPresupuestosInput, MonedaUncheckedCreateWithoutPresupuestosInput>
  }

  export type PresupuestoImpuestoCreateWithoutPresupuestoInput = {
    monto: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    impuesto: ImpuestoCreateNestedOneWithoutPresupuestoImpuestosInput
  }

  export type PresupuestoImpuestoUncheckedCreateWithoutPresupuestoInput = {
    id?: number
    impuestoId: number
    monto: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PresupuestoImpuestoCreateOrConnectWithoutPresupuestoInput = {
    where: PresupuestoImpuestoWhereUniqueInput
    create: XOR<PresupuestoImpuestoCreateWithoutPresupuestoInput, PresupuestoImpuestoUncheckedCreateWithoutPresupuestoInput>
  }

  export type PresupuestoImpuestoCreateManyPresupuestoInputEnvelope = {
    data: PresupuestoImpuestoCreateManyPresupuestoInput | PresupuestoImpuestoCreateManyPresupuestoInput[]
    skipDuplicates?: boolean
  }

  export type ReciboCreateWithoutPresupuestoInput = {
    concepto: string
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    tipo?: $Enums.ReciboTipo
    createdAt?: Date | string
    updatedAt?: Date | string
    persona: PersonaCreateNestedOneWithoutRecibosInput
    moneda?: MonedaCreateNestedOneWithoutRecibosInput
  }

  export type ReciboUncheckedCreateWithoutPresupuestoInput = {
    id?: number
    personaId: number
    concepto: string
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    tipo?: $Enums.ReciboTipo
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
  }

  export type ReciboCreateOrConnectWithoutPresupuestoInput = {
    where: ReciboWhereUniqueInput
    create: XOR<ReciboCreateWithoutPresupuestoInput, ReciboUncheckedCreateWithoutPresupuestoInput>
  }

  export type ReciboCreateManyPresupuestoInputEnvelope = {
    data: ReciboCreateManyPresupuestoInput | ReciboCreateManyPresupuestoInput[]
    skipDuplicates?: boolean
  }

  export type PagoAdminCreateWithoutPresupuestoInput = {
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admin: PersonaCreateNestedOneWithoutPagosAdminInput
    moneda?: MonedaCreateNestedOneWithoutPagosAdminInput
  }

  export type PagoAdminUncheckedCreateWithoutPresupuestoInput = {
    id?: number
    adminId: number
    monto: Decimal | DecimalJsLike | number | string
    monedaId?: number
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PagoAdminCreateOrConnectWithoutPresupuestoInput = {
    where: PagoAdminWhereUniqueInput
    create: XOR<PagoAdminCreateWithoutPresupuestoInput, PagoAdminUncheckedCreateWithoutPresupuestoInput>
  }

  export type PagoAdminCreateManyPresupuestoInputEnvelope = {
    data: PagoAdminCreateManyPresupuestoInput | PagoAdminCreateManyPresupuestoInput[]
    skipDuplicates?: boolean
  }

  export type CobroClienteCreateWithoutPresupuestoInput = {
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    moneda?: MonedaCreateNestedOneWithoutCobrosClienteInput
  }

  export type CobroClienteUncheckedCreateWithoutPresupuestoInput = {
    id?: number
    monto: Decimal | DecimalJsLike | number | string
    monedaId?: number
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CobroClienteCreateOrConnectWithoutPresupuestoInput = {
    where: CobroClienteWhereUniqueInput
    create: XOR<CobroClienteCreateWithoutPresupuestoInput, CobroClienteUncheckedCreateWithoutPresupuestoInput>
  }

  export type CobroClienteCreateManyPresupuestoInputEnvelope = {
    data: CobroClienteCreateManyPresupuestoInput | CobroClienteCreateManyPresupuestoInput[]
    skipDuplicates?: boolean
  }

  export type AsignacionGastoProyectoUpsertWithWhereUniqueWithoutPresupuestoInput = {
    where: AsignacionGastoProyectoWhereUniqueInput
    update: XOR<AsignacionGastoProyectoUpdateWithoutPresupuestoInput, AsignacionGastoProyectoUncheckedUpdateWithoutPresupuestoInput>
    create: XOR<AsignacionGastoProyectoCreateWithoutPresupuestoInput, AsignacionGastoProyectoUncheckedCreateWithoutPresupuestoInput>
  }

  export type AsignacionGastoProyectoUpdateWithWhereUniqueWithoutPresupuestoInput = {
    where: AsignacionGastoProyectoWhereUniqueInput
    data: XOR<AsignacionGastoProyectoUpdateWithoutPresupuestoInput, AsignacionGastoProyectoUncheckedUpdateWithoutPresupuestoInput>
  }

  export type AsignacionGastoProyectoUpdateManyWithWhereWithoutPresupuestoInput = {
    where: AsignacionGastoProyectoScalarWhereInput
    data: XOR<AsignacionGastoProyectoUpdateManyMutationInput, AsignacionGastoProyectoUncheckedUpdateManyWithoutPresupuestoInput>
  }

  export type AsignacionGastoProyectoScalarWhereInput = {
    AND?: AsignacionGastoProyectoScalarWhereInput | AsignacionGastoProyectoScalarWhereInput[]
    OR?: AsignacionGastoProyectoScalarWhereInput[]
    NOT?: AsignacionGastoProyectoScalarWhereInput | AsignacionGastoProyectoScalarWhereInput[]
    id?: IntFilter<"AsignacionGastoProyecto"> | number
    gastoId?: IntFilter<"AsignacionGastoProyecto"> | number
    presupuestoId?: IntFilter<"AsignacionGastoProyecto"> | number
    porcentaje?: DecimalFilter<"AsignacionGastoProyecto"> | Decimal | DecimalJsLike | number | string
    montoAsignado?: DecimalFilter<"AsignacionGastoProyecto"> | Decimal | DecimalJsLike | number | string
    justificacion?: StringNullableFilter<"AsignacionGastoProyecto"> | string | null
    createdAt?: DateTimeFilter<"AsignacionGastoProyecto"> | Date | string
    updatedAt?: DateTimeFilter<"AsignacionGastoProyecto"> | Date | string
  }

  export type FacturaUpsertWithWhereUniqueWithoutPresupuestoInput = {
    where: FacturaWhereUniqueInput
    update: XOR<FacturaUpdateWithoutPresupuestoInput, FacturaUncheckedUpdateWithoutPresupuestoInput>
    create: XOR<FacturaCreateWithoutPresupuestoInput, FacturaUncheckedCreateWithoutPresupuestoInput>
  }

  export type FacturaUpdateWithWhereUniqueWithoutPresupuestoInput = {
    where: FacturaWhereUniqueInput
    data: XOR<FacturaUpdateWithoutPresupuestoInput, FacturaUncheckedUpdateWithoutPresupuestoInput>
  }

  export type FacturaUpdateManyWithWhereWithoutPresupuestoInput = {
    where: FacturaScalarWhereInput
    data: XOR<FacturaUpdateManyMutationInput, FacturaUncheckedUpdateManyWithoutPresupuestoInput>
  }

  export type ItemUpsertWithWhereUniqueWithoutPresupuestoInput = {
    where: ItemWhereUniqueInput
    update: XOR<ItemUpdateWithoutPresupuestoInput, ItemUncheckedUpdateWithoutPresupuestoInput>
    create: XOR<ItemCreateWithoutPresupuestoInput, ItemUncheckedCreateWithoutPresupuestoInput>
  }

  export type ItemUpdateWithWhereUniqueWithoutPresupuestoInput = {
    where: ItemWhereUniqueInput
    data: XOR<ItemUpdateWithoutPresupuestoInput, ItemUncheckedUpdateWithoutPresupuestoInput>
  }

  export type ItemUpdateManyWithWhereWithoutPresupuestoInput = {
    where: ItemScalarWhereInput
    data: XOR<ItemUpdateManyMutationInput, ItemUncheckedUpdateManyWithoutPresupuestoInput>
  }

  export type PersonaUpsertWithoutPresupuestosInput = {
    update: XOR<PersonaUpdateWithoutPresupuestosInput, PersonaUncheckedUpdateWithoutPresupuestosInput>
    create: XOR<PersonaCreateWithoutPresupuestosInput, PersonaUncheckedCreateWithoutPresupuestosInput>
    where?: PersonaWhereInput
  }

  export type PersonaUpdateToOneWithWhereWithoutPresupuestosInput = {
    where?: PersonaWhereInput
    data: XOR<PersonaUpdateWithoutPresupuestosInput, PersonaUncheckedUpdateWithoutPresupuestosInput>
  }

  export type PersonaUpdateWithoutPresupuestosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
    gastosComoProveedor?: GastoOperativoUpdateManyWithoutProveedorNestedInput
    historialPreciosUsuario?: HistorialPrecioUpdateManyWithoutUsuarioNestedInput
    productos?: ProductoUpdateManyWithoutProveedorNestedInput
    recibos?: ReciboUpdateManyWithoutPersonaNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutAdminNestedInput
    servicios?: ServicioUpdateManyWithoutProveedorNestedInput
    empresas?: EmpresaUpdateManyWithoutClienteNestedInput
  }

  export type PersonaUncheckedUpdateWithoutPresupuestosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
    gastosComoProveedor?: GastoOperativoUncheckedUpdateManyWithoutProveedorNestedInput
    historialPreciosUsuario?: HistorialPrecioUncheckedUpdateManyWithoutUsuarioNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutProveedorNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutPersonaNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutAdminNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutProveedorNestedInput
    empresas?: EmpresaUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type EmpresaUpsertWithoutPresupuestosInput = {
    update: XOR<EmpresaUpdateWithoutPresupuestosInput, EmpresaUncheckedUpdateWithoutPresupuestosInput>
    create: XOR<EmpresaCreateWithoutPresupuestosInput, EmpresaUncheckedCreateWithoutPresupuestosInput>
    where?: EmpresaWhereInput
  }

  export type EmpresaUpdateToOneWithWhereWithoutPresupuestosInput = {
    where?: EmpresaWhereInput
    data: XOR<EmpresaUpdateWithoutPresupuestosInput, EmpresaUncheckedUpdateWithoutPresupuestosInput>
  }

  export type EmpresaUpdateWithoutPresupuestosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    cuit?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: PersonaUpdateOneRequiredWithoutEmpresasNestedInput
    facturas?: FacturaUpdateManyWithoutEmpresaNestedInput
  }

  export type EmpresaUncheckedUpdateWithoutPresupuestosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    cuit?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUncheckedUpdateManyWithoutEmpresaNestedInput
  }

  export type MonedaUpsertWithoutPresupuestosInput = {
    update: XOR<MonedaUpdateWithoutPresupuestosInput, MonedaUncheckedUpdateWithoutPresupuestosInput>
    create: XOR<MonedaCreateWithoutPresupuestosInput, MonedaUncheckedCreateWithoutPresupuestosInput>
    where?: MonedaWhereInput
  }

  export type MonedaUpdateToOneWithWhereWithoutPresupuestosInput = {
    where?: MonedaWhereInput
    data: XOR<MonedaUpdateWithoutPresupuestosInput, MonedaUncheckedUpdateWithoutPresupuestosInput>
  }

  export type MonedaUpdateWithoutPresupuestosInput = {
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type MonedaUncheckedUpdateWithoutPresupuestosInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUncheckedUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUncheckedUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUncheckedUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUncheckedUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type PresupuestoImpuestoUpsertWithWhereUniqueWithoutPresupuestoInput = {
    where: PresupuestoImpuestoWhereUniqueInput
    update: XOR<PresupuestoImpuestoUpdateWithoutPresupuestoInput, PresupuestoImpuestoUncheckedUpdateWithoutPresupuestoInput>
    create: XOR<PresupuestoImpuestoCreateWithoutPresupuestoInput, PresupuestoImpuestoUncheckedCreateWithoutPresupuestoInput>
  }

  export type PresupuestoImpuestoUpdateWithWhereUniqueWithoutPresupuestoInput = {
    where: PresupuestoImpuestoWhereUniqueInput
    data: XOR<PresupuestoImpuestoUpdateWithoutPresupuestoInput, PresupuestoImpuestoUncheckedUpdateWithoutPresupuestoInput>
  }

  export type PresupuestoImpuestoUpdateManyWithWhereWithoutPresupuestoInput = {
    where: PresupuestoImpuestoScalarWhereInput
    data: XOR<PresupuestoImpuestoUpdateManyMutationInput, PresupuestoImpuestoUncheckedUpdateManyWithoutPresupuestoInput>
  }

  export type PresupuestoImpuestoScalarWhereInput = {
    AND?: PresupuestoImpuestoScalarWhereInput | PresupuestoImpuestoScalarWhereInput[]
    OR?: PresupuestoImpuestoScalarWhereInput[]
    NOT?: PresupuestoImpuestoScalarWhereInput | PresupuestoImpuestoScalarWhereInput[]
    id?: IntFilter<"PresupuestoImpuesto"> | number
    presupuestoId?: IntFilter<"PresupuestoImpuesto"> | number
    impuestoId?: IntFilter<"PresupuestoImpuesto"> | number
    monto?: DecimalFilter<"PresupuestoImpuesto"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"PresupuestoImpuesto"> | Date | string
    updatedAt?: DateTimeFilter<"PresupuestoImpuesto"> | Date | string
  }

  export type ReciboUpsertWithWhereUniqueWithoutPresupuestoInput = {
    where: ReciboWhereUniqueInput
    update: XOR<ReciboUpdateWithoutPresupuestoInput, ReciboUncheckedUpdateWithoutPresupuestoInput>
    create: XOR<ReciboCreateWithoutPresupuestoInput, ReciboUncheckedCreateWithoutPresupuestoInput>
  }

  export type ReciboUpdateWithWhereUniqueWithoutPresupuestoInput = {
    where: ReciboWhereUniqueInput
    data: XOR<ReciboUpdateWithoutPresupuestoInput, ReciboUncheckedUpdateWithoutPresupuestoInput>
  }

  export type ReciboUpdateManyWithWhereWithoutPresupuestoInput = {
    where: ReciboScalarWhereInput
    data: XOR<ReciboUpdateManyMutationInput, ReciboUncheckedUpdateManyWithoutPresupuestoInput>
  }

  export type PagoAdminUpsertWithWhereUniqueWithoutPresupuestoInput = {
    where: PagoAdminWhereUniqueInput
    update: XOR<PagoAdminUpdateWithoutPresupuestoInput, PagoAdminUncheckedUpdateWithoutPresupuestoInput>
    create: XOR<PagoAdminCreateWithoutPresupuestoInput, PagoAdminUncheckedCreateWithoutPresupuestoInput>
  }

  export type PagoAdminUpdateWithWhereUniqueWithoutPresupuestoInput = {
    where: PagoAdminWhereUniqueInput
    data: XOR<PagoAdminUpdateWithoutPresupuestoInput, PagoAdminUncheckedUpdateWithoutPresupuestoInput>
  }

  export type PagoAdminUpdateManyWithWhereWithoutPresupuestoInput = {
    where: PagoAdminScalarWhereInput
    data: XOR<PagoAdminUpdateManyMutationInput, PagoAdminUncheckedUpdateManyWithoutPresupuestoInput>
  }

  export type CobroClienteUpsertWithWhereUniqueWithoutPresupuestoInput = {
    where: CobroClienteWhereUniqueInput
    update: XOR<CobroClienteUpdateWithoutPresupuestoInput, CobroClienteUncheckedUpdateWithoutPresupuestoInput>
    create: XOR<CobroClienteCreateWithoutPresupuestoInput, CobroClienteUncheckedCreateWithoutPresupuestoInput>
  }

  export type CobroClienteUpdateWithWhereUniqueWithoutPresupuestoInput = {
    where: CobroClienteWhereUniqueInput
    data: XOR<CobroClienteUpdateWithoutPresupuestoInput, CobroClienteUncheckedUpdateWithoutPresupuestoInput>
  }

  export type CobroClienteUpdateManyWithWhereWithoutPresupuestoInput = {
    where: CobroClienteScalarWhereInput
    data: XOR<CobroClienteUpdateManyMutationInput, CobroClienteUncheckedUpdateManyWithoutPresupuestoInput>
  }

  export type PresupuestoCreateWithoutItemsInput = {
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoCreateNestedManyWithoutPresupuestoInput
    facturas?: FacturaCreateNestedManyWithoutPresupuestoInput
    cliente: PersonaCreateNestedOneWithoutPresupuestosInput
    empresa?: EmpresaCreateNestedOneWithoutPresupuestosInput
    moneda?: MonedaCreateNestedOneWithoutPresupuestosInput
    presupuestoImpuestos?: PresupuestoImpuestoCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoUncheckedCreateWithoutItemsInput = {
    id?: number
    clienteId: number
    empresaId?: number | null
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedCreateNestedManyWithoutPresupuestoInput
    facturas?: FacturaUncheckedCreateNestedManyWithoutPresupuestoInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoCreateOrConnectWithoutItemsInput = {
    where: PresupuestoWhereUniqueInput
    create: XOR<PresupuestoCreateWithoutItemsInput, PresupuestoUncheckedCreateWithoutItemsInput>
  }

  export type ProductoCreateWithoutItemsInput = {
    nombre: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutProductoInput
    moneda?: MonedaCreateNestedOneWithoutProductosInput
    proveedor: PersonaCreateNestedOneWithoutProductosInput
  }

  export type ProductoUncheckedCreateWithoutItemsInput = {
    id?: number
    nombre: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    proveedorId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutItemsInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutItemsInput, ProductoUncheckedCreateWithoutItemsInput>
  }

  export type ServicioCreateWithoutItemsInput = {
    nombre: string
    descripcion: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutServicioInput
    moneda?: MonedaCreateNestedOneWithoutServiciosInput
    proveedor: PersonaCreateNestedOneWithoutServiciosInput
  }

  export type ServicioUncheckedCreateWithoutItemsInput = {
    id?: number
    nombre: string
    descripcion: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    proveedorId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutServicioInput
  }

  export type ServicioCreateOrConnectWithoutItemsInput = {
    where: ServicioWhereUniqueInput
    create: XOR<ServicioCreateWithoutItemsInput, ServicioUncheckedCreateWithoutItemsInput>
  }

  export type PresupuestoUpsertWithoutItemsInput = {
    update: XOR<PresupuestoUpdateWithoutItemsInput, PresupuestoUncheckedUpdateWithoutItemsInput>
    create: XOR<PresupuestoCreateWithoutItemsInput, PresupuestoUncheckedCreateWithoutItemsInput>
    where?: PresupuestoWhereInput
  }

  export type PresupuestoUpdateToOneWithWhereWithoutItemsInput = {
    where?: PresupuestoWhereInput
    data: XOR<PresupuestoUpdateWithoutItemsInput, PresupuestoUncheckedUpdateWithoutItemsInput>
  }

  export type PresupuestoUpdateWithoutItemsInput = {
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUpdateManyWithoutPresupuestoNestedInput
    facturas?: FacturaUpdateManyWithoutPresupuestoNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutPresupuestosNestedInput
    empresa?: EmpresaUpdateOneWithoutPresupuestosNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutPresupuestosNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutPresupuestoNestedInput
  }

  export type PresupuestoUncheckedUpdateWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedUpdateManyWithoutPresupuestoNestedInput
    facturas?: FacturaUncheckedUpdateManyWithoutPresupuestoNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutPresupuestoNestedInput
  }

  export type ProductoUpsertWithoutItemsInput = {
    update: XOR<ProductoUpdateWithoutItemsInput, ProductoUncheckedUpdateWithoutItemsInput>
    create: XOR<ProductoCreateWithoutItemsInput, ProductoUncheckedCreateWithoutItemsInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutItemsInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutItemsInput, ProductoUncheckedUpdateWithoutItemsInput>
  }

  export type ProductoUpdateWithoutItemsInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    historialPrecios?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutProductosNestedInput
    proveedor?: PersonaUpdateOneRequiredWithoutProductosNestedInput
  }

  export type ProductoUncheckedUpdateWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    proveedorId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ServicioUpsertWithoutItemsInput = {
    update: XOR<ServicioUpdateWithoutItemsInput, ServicioUncheckedUpdateWithoutItemsInput>
    create: XOR<ServicioCreateWithoutItemsInput, ServicioUncheckedCreateWithoutItemsInput>
    where?: ServicioWhereInput
  }

  export type ServicioUpdateToOneWithWhereWithoutItemsInput = {
    where?: ServicioWhereInput
    data: XOR<ServicioUpdateWithoutItemsInput, ServicioUncheckedUpdateWithoutItemsInput>
  }

  export type ServicioUpdateWithoutItemsInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    historialPrecios?: HistorialPrecioUpdateManyWithoutServicioNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutServiciosNestedInput
    proveedor?: PersonaUpdateOneRequiredWithoutServiciosNestedInput
  }

  export type ServicioUncheckedUpdateWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    proveedorId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutServicioNestedInput
  }

  export type EmpresaCreateWithoutFacturasInput = {
    nombre: string
    razonSocial?: string | null
    cuit?: string | null
    telefono?: string | null
    email?: string | null
    direccion?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    cliente: PersonaCreateNestedOneWithoutEmpresasInput
    presupuestos?: PresupuestoCreateNestedManyWithoutEmpresaInput
  }

  export type EmpresaUncheckedCreateWithoutFacturasInput = {
    id?: number
    nombre: string
    razonSocial?: string | null
    cuit?: string | null
    telefono?: string | null
    email?: string | null
    direccion?: string | null
    clienteId: number
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutEmpresaInput
  }

  export type EmpresaCreateOrConnectWithoutFacturasInput = {
    where: EmpresaWhereUniqueInput
    create: XOR<EmpresaCreateWithoutFacturasInput, EmpresaUncheckedCreateWithoutFacturasInput>
  }

  export type ImpuestoCreateWithoutFacturasInput = {
    nombre: string
    porcentaje: Decimal | DecimalJsLike | number | string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    descripcion?: string | null
    presupuestoImpuestos?: PresupuestoImpuestoCreateNestedManyWithoutImpuestoInput
  }

  export type ImpuestoUncheckedCreateWithoutFacturasInput = {
    id?: number
    nombre: string
    porcentaje: Decimal | DecimalJsLike | number | string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    descripcion?: string | null
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedCreateNestedManyWithoutImpuestoInput
  }

  export type ImpuestoCreateOrConnectWithoutFacturasInput = {
    where: ImpuestoWhereUniqueInput
    create: XOR<ImpuestoCreateWithoutFacturasInput, ImpuestoUncheckedCreateWithoutFacturasInput>
  }

  export type MonedaCreateWithoutFacturasInput = {
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    gastosOperativos?: GastoOperativoCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoCreateNestedManyWithoutMonedaInput
    productos?: ProductoCreateNestedManyWithoutMonedaInput
    servicios?: ServicioCreateNestedManyWithoutMonedaInput
    recibos?: ReciboCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaUncheckedCreateWithoutFacturasInput = {
    id?: number
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    gastosOperativos?: GastoOperativoUncheckedCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutMonedaInput
    productos?: ProductoUncheckedCreateNestedManyWithoutMonedaInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutMonedaInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioUncheckedCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioUncheckedCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaCreateOrConnectWithoutFacturasInput = {
    where: MonedaWhereUniqueInput
    create: XOR<MonedaCreateWithoutFacturasInput, MonedaUncheckedCreateWithoutFacturasInput>
  }

  export type PresupuestoCreateWithoutFacturasInput = {
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoCreateNestedManyWithoutPresupuestoInput
    items?: ItemCreateNestedManyWithoutPresupuestoInput
    cliente: PersonaCreateNestedOneWithoutPresupuestosInput
    empresa?: EmpresaCreateNestedOneWithoutPresupuestosInput
    moneda?: MonedaCreateNestedOneWithoutPresupuestosInput
    presupuestoImpuestos?: PresupuestoImpuestoCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoUncheckedCreateWithoutFacturasInput = {
    id?: number
    clienteId: number
    empresaId?: number | null
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedCreateNestedManyWithoutPresupuestoInput
    items?: ItemUncheckedCreateNestedManyWithoutPresupuestoInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoCreateOrConnectWithoutFacturasInput = {
    where: PresupuestoWhereUniqueInput
    create: XOR<PresupuestoCreateWithoutFacturasInput, PresupuestoUncheckedCreateWithoutFacturasInput>
  }

  export type EmpresaUpsertWithoutFacturasInput = {
    update: XOR<EmpresaUpdateWithoutFacturasInput, EmpresaUncheckedUpdateWithoutFacturasInput>
    create: XOR<EmpresaCreateWithoutFacturasInput, EmpresaUncheckedCreateWithoutFacturasInput>
    where?: EmpresaWhereInput
  }

  export type EmpresaUpdateToOneWithWhereWithoutFacturasInput = {
    where?: EmpresaWhereInput
    data: XOR<EmpresaUpdateWithoutFacturasInput, EmpresaUncheckedUpdateWithoutFacturasInput>
  }

  export type EmpresaUpdateWithoutFacturasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    cuit?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: PersonaUpdateOneRequiredWithoutEmpresasNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutEmpresaNestedInput
  }

  export type EmpresaUncheckedUpdateWithoutFacturasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    cuit?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: IntFieldUpdateOperationsInput | number
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutEmpresaNestedInput
  }

  export type ImpuestoUpsertWithoutFacturasInput = {
    update: XOR<ImpuestoUpdateWithoutFacturasInput, ImpuestoUncheckedUpdateWithoutFacturasInput>
    create: XOR<ImpuestoCreateWithoutFacturasInput, ImpuestoUncheckedCreateWithoutFacturasInput>
    where?: ImpuestoWhereInput
  }

  export type ImpuestoUpdateToOneWithWhereWithoutFacturasInput = {
    where?: ImpuestoWhereInput
    data: XOR<ImpuestoUpdateWithoutFacturasInput, ImpuestoUncheckedUpdateWithoutFacturasInput>
  }

  export type ImpuestoUpdateWithoutFacturasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    presupuestoImpuestos?: PresupuestoImpuestoUpdateManyWithoutImpuestoNestedInput
  }

  export type ImpuestoUncheckedUpdateWithoutFacturasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedUpdateManyWithoutImpuestoNestedInput
  }

  export type MonedaUpsertWithoutFacturasInput = {
    update: XOR<MonedaUpdateWithoutFacturasInput, MonedaUncheckedUpdateWithoutFacturasInput>
    create: XOR<MonedaCreateWithoutFacturasInput, MonedaUncheckedCreateWithoutFacturasInput>
    where?: MonedaWhereInput
  }

  export type MonedaUpdateToOneWithWhereWithoutFacturasInput = {
    where?: MonedaWhereInput
    data: XOR<MonedaUpdateWithoutFacturasInput, MonedaUncheckedUpdateWithoutFacturasInput>
  }

  export type MonedaUpdateWithoutFacturasInput = {
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    gastosOperativos?: GastoOperativoUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type MonedaUncheckedUpdateWithoutFacturasInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    gastosOperativos?: GastoOperativoUncheckedUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUncheckedUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUncheckedUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type PresupuestoUpsertWithoutFacturasInput = {
    update: XOR<PresupuestoUpdateWithoutFacturasInput, PresupuestoUncheckedUpdateWithoutFacturasInput>
    create: XOR<PresupuestoCreateWithoutFacturasInput, PresupuestoUncheckedCreateWithoutFacturasInput>
    where?: PresupuestoWhereInput
  }

  export type PresupuestoUpdateToOneWithWhereWithoutFacturasInput = {
    where?: PresupuestoWhereInput
    data: XOR<PresupuestoUpdateWithoutFacturasInput, PresupuestoUncheckedUpdateWithoutFacturasInput>
  }

  export type PresupuestoUpdateWithoutFacturasInput = {
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUpdateManyWithoutPresupuestoNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutPresupuestosNestedInput
    empresa?: EmpresaUpdateOneWithoutPresupuestosNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutPresupuestosNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutPresupuestoNestedInput
  }

  export type PresupuestoUncheckedUpdateWithoutFacturasInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUncheckedUpdateManyWithoutPresupuestoNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutPresupuestoNestedInput
  }

  export type PersonaCreateWithoutRecibosInput = {
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
    gastosComoProveedor?: GastoOperativoCreateNestedManyWithoutProveedorInput
    historialPreciosUsuario?: HistorialPrecioCreateNestedManyWithoutUsuarioInput
    presupuestos?: PresupuestoCreateNestedManyWithoutClienteInput
    productos?: ProductoCreateNestedManyWithoutProveedorInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutAdminInput
    servicios?: ServicioCreateNestedManyWithoutProveedorInput
    empresas?: EmpresaCreateNestedManyWithoutClienteInput
  }

  export type PersonaUncheckedCreateWithoutRecibosInput = {
    id?: number
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
    gastosComoProveedor?: GastoOperativoUncheckedCreateNestedManyWithoutProveedorInput
    historialPreciosUsuario?: HistorialPrecioUncheckedCreateNestedManyWithoutUsuarioInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutClienteInput
    productos?: ProductoUncheckedCreateNestedManyWithoutProveedorInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutAdminInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutProveedorInput
    empresas?: EmpresaUncheckedCreateNestedManyWithoutClienteInput
  }

  export type PersonaCreateOrConnectWithoutRecibosInput = {
    where: PersonaWhereUniqueInput
    create: XOR<PersonaCreateWithoutRecibosInput, PersonaUncheckedCreateWithoutRecibosInput>
  }

  export type PresupuestoCreateWithoutRecibosInput = {
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoCreateNestedManyWithoutPresupuestoInput
    facturas?: FacturaCreateNestedManyWithoutPresupuestoInput
    items?: ItemCreateNestedManyWithoutPresupuestoInput
    cliente: PersonaCreateNestedOneWithoutPresupuestosInput
    empresa?: EmpresaCreateNestedOneWithoutPresupuestosInput
    moneda?: MonedaCreateNestedOneWithoutPresupuestosInput
    presupuestoImpuestos?: PresupuestoImpuestoCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoUncheckedCreateWithoutRecibosInput = {
    id?: number
    clienteId: number
    empresaId?: number | null
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedCreateNestedManyWithoutPresupuestoInput
    facturas?: FacturaUncheckedCreateNestedManyWithoutPresupuestoInput
    items?: ItemUncheckedCreateNestedManyWithoutPresupuestoInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoCreateOrConnectWithoutRecibosInput = {
    where: PresupuestoWhereUniqueInput
    create: XOR<PresupuestoCreateWithoutRecibosInput, PresupuestoUncheckedCreateWithoutRecibosInput>
  }

  export type MonedaCreateWithoutRecibosInput = {
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoCreateNestedManyWithoutMonedaInput
    productos?: ProductoCreateNestedManyWithoutMonedaInput
    servicios?: ServicioCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaUncheckedCreateWithoutRecibosInput = {
    id?: number
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaUncheckedCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoUncheckedCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutMonedaInput
    productos?: ProductoUncheckedCreateNestedManyWithoutMonedaInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioUncheckedCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioUncheckedCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaCreateOrConnectWithoutRecibosInput = {
    where: MonedaWhereUniqueInput
    create: XOR<MonedaCreateWithoutRecibosInput, MonedaUncheckedCreateWithoutRecibosInput>
  }

  export type PersonaUpsertWithoutRecibosInput = {
    update: XOR<PersonaUpdateWithoutRecibosInput, PersonaUncheckedUpdateWithoutRecibosInput>
    create: XOR<PersonaCreateWithoutRecibosInput, PersonaUncheckedCreateWithoutRecibosInput>
    where?: PersonaWhereInput
  }

  export type PersonaUpdateToOneWithWhereWithoutRecibosInput = {
    where?: PersonaWhereInput
    data: XOR<PersonaUpdateWithoutRecibosInput, PersonaUncheckedUpdateWithoutRecibosInput>
  }

  export type PersonaUpdateWithoutRecibosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
    gastosComoProveedor?: GastoOperativoUpdateManyWithoutProveedorNestedInput
    historialPreciosUsuario?: HistorialPrecioUpdateManyWithoutUsuarioNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutClienteNestedInput
    productos?: ProductoUpdateManyWithoutProveedorNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutAdminNestedInput
    servicios?: ServicioUpdateManyWithoutProveedorNestedInput
    empresas?: EmpresaUpdateManyWithoutClienteNestedInput
  }

  export type PersonaUncheckedUpdateWithoutRecibosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
    gastosComoProveedor?: GastoOperativoUncheckedUpdateManyWithoutProveedorNestedInput
    historialPreciosUsuario?: HistorialPrecioUncheckedUpdateManyWithoutUsuarioNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutClienteNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutProveedorNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutAdminNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutProveedorNestedInput
    empresas?: EmpresaUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type PresupuestoUpsertWithoutRecibosInput = {
    update: XOR<PresupuestoUpdateWithoutRecibosInput, PresupuestoUncheckedUpdateWithoutRecibosInput>
    create: XOR<PresupuestoCreateWithoutRecibosInput, PresupuestoUncheckedCreateWithoutRecibosInput>
    where?: PresupuestoWhereInput
  }

  export type PresupuestoUpdateToOneWithWhereWithoutRecibosInput = {
    where?: PresupuestoWhereInput
    data: XOR<PresupuestoUpdateWithoutRecibosInput, PresupuestoUncheckedUpdateWithoutRecibosInput>
  }

  export type PresupuestoUpdateWithoutRecibosInput = {
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUpdateManyWithoutPresupuestoNestedInput
    facturas?: FacturaUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUpdateManyWithoutPresupuestoNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutPresupuestosNestedInput
    empresa?: EmpresaUpdateOneWithoutPresupuestosNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutPresupuestosNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutPresupuestoNestedInput
  }

  export type PresupuestoUncheckedUpdateWithoutRecibosInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedUpdateManyWithoutPresupuestoNestedInput
    facturas?: FacturaUncheckedUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUncheckedUpdateManyWithoutPresupuestoNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutPresupuestoNestedInput
  }

  export type MonedaUpsertWithoutRecibosInput = {
    update: XOR<MonedaUpdateWithoutRecibosInput, MonedaUncheckedUpdateWithoutRecibosInput>
    create: XOR<MonedaCreateWithoutRecibosInput, MonedaUncheckedCreateWithoutRecibosInput>
    where?: MonedaWhereInput
  }

  export type MonedaUpdateToOneWithWhereWithoutRecibosInput = {
    where?: MonedaWhereInput
    data: XOR<MonedaUpdateWithoutRecibosInput, MonedaUncheckedUpdateWithoutRecibosInput>
  }

  export type MonedaUpdateWithoutRecibosInput = {
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type MonedaUncheckedUpdateWithoutRecibosInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUncheckedUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUncheckedUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUncheckedUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUncheckedUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type FacturaCreateWithoutImpuestoAplicadoInput = {
    numero: string
    fecha: Date | string
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado: $Enums.EstadoFactura
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
    empresa?: EmpresaCreateNestedOneWithoutFacturasInput
    moneda?: MonedaCreateNestedOneWithoutFacturasInput
    presupuesto: PresupuestoCreateNestedOneWithoutFacturasInput
  }

  export type FacturaUncheckedCreateWithoutImpuestoAplicadoInput = {
    id?: number
    numero: string
    presupuestoId: number
    empresaId?: number | null
    fecha: Date | string
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado: $Enums.EstadoFactura
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
  }

  export type FacturaCreateOrConnectWithoutImpuestoAplicadoInput = {
    where: FacturaWhereUniqueInput
    create: XOR<FacturaCreateWithoutImpuestoAplicadoInput, FacturaUncheckedCreateWithoutImpuestoAplicadoInput>
  }

  export type FacturaCreateManyImpuestoAplicadoInputEnvelope = {
    data: FacturaCreateManyImpuestoAplicadoInput | FacturaCreateManyImpuestoAplicadoInput[]
    skipDuplicates?: boolean
  }

  export type PresupuestoImpuestoCreateWithoutImpuestoInput = {
    monto: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    presupuesto: PresupuestoCreateNestedOneWithoutPresupuestoImpuestosInput
  }

  export type PresupuestoImpuestoUncheckedCreateWithoutImpuestoInput = {
    id?: number
    presupuestoId: number
    monto: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PresupuestoImpuestoCreateOrConnectWithoutImpuestoInput = {
    where: PresupuestoImpuestoWhereUniqueInput
    create: XOR<PresupuestoImpuestoCreateWithoutImpuestoInput, PresupuestoImpuestoUncheckedCreateWithoutImpuestoInput>
  }

  export type PresupuestoImpuestoCreateManyImpuestoInputEnvelope = {
    data: PresupuestoImpuestoCreateManyImpuestoInput | PresupuestoImpuestoCreateManyImpuestoInput[]
    skipDuplicates?: boolean
  }

  export type FacturaUpsertWithWhereUniqueWithoutImpuestoAplicadoInput = {
    where: FacturaWhereUniqueInput
    update: XOR<FacturaUpdateWithoutImpuestoAplicadoInput, FacturaUncheckedUpdateWithoutImpuestoAplicadoInput>
    create: XOR<FacturaCreateWithoutImpuestoAplicadoInput, FacturaUncheckedCreateWithoutImpuestoAplicadoInput>
  }

  export type FacturaUpdateWithWhereUniqueWithoutImpuestoAplicadoInput = {
    where: FacturaWhereUniqueInput
    data: XOR<FacturaUpdateWithoutImpuestoAplicadoInput, FacturaUncheckedUpdateWithoutImpuestoAplicadoInput>
  }

  export type FacturaUpdateManyWithWhereWithoutImpuestoAplicadoInput = {
    where: FacturaScalarWhereInput
    data: XOR<FacturaUpdateManyMutationInput, FacturaUncheckedUpdateManyWithoutImpuestoAplicadoInput>
  }

  export type PresupuestoImpuestoUpsertWithWhereUniqueWithoutImpuestoInput = {
    where: PresupuestoImpuestoWhereUniqueInput
    update: XOR<PresupuestoImpuestoUpdateWithoutImpuestoInput, PresupuestoImpuestoUncheckedUpdateWithoutImpuestoInput>
    create: XOR<PresupuestoImpuestoCreateWithoutImpuestoInput, PresupuestoImpuestoUncheckedCreateWithoutImpuestoInput>
  }

  export type PresupuestoImpuestoUpdateWithWhereUniqueWithoutImpuestoInput = {
    where: PresupuestoImpuestoWhereUniqueInput
    data: XOR<PresupuestoImpuestoUpdateWithoutImpuestoInput, PresupuestoImpuestoUncheckedUpdateWithoutImpuestoInput>
  }

  export type PresupuestoImpuestoUpdateManyWithWhereWithoutImpuestoInput = {
    where: PresupuestoImpuestoScalarWhereInput
    data: XOR<PresupuestoImpuestoUpdateManyMutationInput, PresupuestoImpuestoUncheckedUpdateManyWithoutImpuestoInput>
  }

  export type ImpuestoCreateWithoutPresupuestoImpuestosInput = {
    nombre: string
    porcentaje: Decimal | DecimalJsLike | number | string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    descripcion?: string | null
    facturas?: FacturaCreateNestedManyWithoutImpuestoAplicadoInput
  }

  export type ImpuestoUncheckedCreateWithoutPresupuestoImpuestosInput = {
    id?: number
    nombre: string
    porcentaje: Decimal | DecimalJsLike | number | string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    descripcion?: string | null
    facturas?: FacturaUncheckedCreateNestedManyWithoutImpuestoAplicadoInput
  }

  export type ImpuestoCreateOrConnectWithoutPresupuestoImpuestosInput = {
    where: ImpuestoWhereUniqueInput
    create: XOR<ImpuestoCreateWithoutPresupuestoImpuestosInput, ImpuestoUncheckedCreateWithoutPresupuestoImpuestosInput>
  }

  export type PresupuestoCreateWithoutPresupuestoImpuestosInput = {
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoCreateNestedManyWithoutPresupuestoInput
    facturas?: FacturaCreateNestedManyWithoutPresupuestoInput
    items?: ItemCreateNestedManyWithoutPresupuestoInput
    cliente: PersonaCreateNestedOneWithoutPresupuestosInput
    empresa?: EmpresaCreateNestedOneWithoutPresupuestosInput
    moneda?: MonedaCreateNestedOneWithoutPresupuestosInput
    recibos?: ReciboCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoUncheckedCreateWithoutPresupuestoImpuestosInput = {
    id?: number
    clienteId: number
    empresaId?: number | null
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedCreateNestedManyWithoutPresupuestoInput
    facturas?: FacturaUncheckedCreateNestedManyWithoutPresupuestoInput
    items?: ItemUncheckedCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoCreateOrConnectWithoutPresupuestoImpuestosInput = {
    where: PresupuestoWhereUniqueInput
    create: XOR<PresupuestoCreateWithoutPresupuestoImpuestosInput, PresupuestoUncheckedCreateWithoutPresupuestoImpuestosInput>
  }

  export type ImpuestoUpsertWithoutPresupuestoImpuestosInput = {
    update: XOR<ImpuestoUpdateWithoutPresupuestoImpuestosInput, ImpuestoUncheckedUpdateWithoutPresupuestoImpuestosInput>
    create: XOR<ImpuestoCreateWithoutPresupuestoImpuestosInput, ImpuestoUncheckedCreateWithoutPresupuestoImpuestosInput>
    where?: ImpuestoWhereInput
  }

  export type ImpuestoUpdateToOneWithWhereWithoutPresupuestoImpuestosInput = {
    where?: ImpuestoWhereInput
    data: XOR<ImpuestoUpdateWithoutPresupuestoImpuestosInput, ImpuestoUncheckedUpdateWithoutPresupuestoImpuestosInput>
  }

  export type ImpuestoUpdateWithoutPresupuestoImpuestosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    facturas?: FacturaUpdateManyWithoutImpuestoAplicadoNestedInput
  }

  export type ImpuestoUncheckedUpdateWithoutPresupuestoImpuestosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    facturas?: FacturaUncheckedUpdateManyWithoutImpuestoAplicadoNestedInput
  }

  export type PresupuestoUpsertWithoutPresupuestoImpuestosInput = {
    update: XOR<PresupuestoUpdateWithoutPresupuestoImpuestosInput, PresupuestoUncheckedUpdateWithoutPresupuestoImpuestosInput>
    create: XOR<PresupuestoCreateWithoutPresupuestoImpuestosInput, PresupuestoUncheckedCreateWithoutPresupuestoImpuestosInput>
    where?: PresupuestoWhereInput
  }

  export type PresupuestoUpdateToOneWithWhereWithoutPresupuestoImpuestosInput = {
    where?: PresupuestoWhereInput
    data: XOR<PresupuestoUpdateWithoutPresupuestoImpuestosInput, PresupuestoUncheckedUpdateWithoutPresupuestoImpuestosInput>
  }

  export type PresupuestoUpdateWithoutPresupuestoImpuestosInput = {
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUpdateManyWithoutPresupuestoNestedInput
    facturas?: FacturaUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUpdateManyWithoutPresupuestoNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutPresupuestosNestedInput
    empresa?: EmpresaUpdateOneWithoutPresupuestosNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutPresupuestosNestedInput
    recibos?: ReciboUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutPresupuestoNestedInput
  }

  export type PresupuestoUncheckedUpdateWithoutPresupuestoImpuestosInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedUpdateManyWithoutPresupuestoNestedInput
    facturas?: FacturaUncheckedUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUncheckedUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutPresupuestoNestedInput
  }

  export type AsignacionGastoProyectoCreateWithoutGastoInput = {
    porcentaje: Decimal | DecimalJsLike | number | string
    montoAsignado: Decimal | DecimalJsLike | number | string
    justificacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    presupuesto: PresupuestoCreateNestedOneWithoutAsignacionesGastoInput
  }

  export type AsignacionGastoProyectoUncheckedCreateWithoutGastoInput = {
    id?: number
    presupuestoId: number
    porcentaje: Decimal | DecimalJsLike | number | string
    montoAsignado: Decimal | DecimalJsLike | number | string
    justificacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AsignacionGastoProyectoCreateOrConnectWithoutGastoInput = {
    where: AsignacionGastoProyectoWhereUniqueInput
    create: XOR<AsignacionGastoProyectoCreateWithoutGastoInput, AsignacionGastoProyectoUncheckedCreateWithoutGastoInput>
  }

  export type AsignacionGastoProyectoCreateManyGastoInputEnvelope = {
    data: AsignacionGastoProyectoCreateManyGastoInput | AsignacionGastoProyectoCreateManyGastoInput[]
    skipDuplicates?: boolean
  }

  export type MonedaCreateWithoutGastosOperativosInput = {
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoCreateNestedManyWithoutMonedaInput
    productos?: ProductoCreateNestedManyWithoutMonedaInput
    servicios?: ServicioCreateNestedManyWithoutMonedaInput
    recibos?: ReciboCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaUncheckedCreateWithoutGastosOperativosInput = {
    id?: number
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaUncheckedCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutMonedaInput
    productos?: ProductoUncheckedCreateNestedManyWithoutMonedaInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutMonedaInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioUncheckedCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioUncheckedCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaCreateOrConnectWithoutGastosOperativosInput = {
    where: MonedaWhereUniqueInput
    create: XOR<MonedaCreateWithoutGastosOperativosInput, MonedaUncheckedCreateWithoutGastosOperativosInput>
  }

  export type PersonaCreateWithoutGastosComoProveedorInput = {
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
    historialPreciosUsuario?: HistorialPrecioCreateNestedManyWithoutUsuarioInput
    presupuestos?: PresupuestoCreateNestedManyWithoutClienteInput
    productos?: ProductoCreateNestedManyWithoutProveedorInput
    recibos?: ReciboCreateNestedManyWithoutPersonaInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutAdminInput
    servicios?: ServicioCreateNestedManyWithoutProveedorInput
    empresas?: EmpresaCreateNestedManyWithoutClienteInput
  }

  export type PersonaUncheckedCreateWithoutGastosComoProveedorInput = {
    id?: number
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
    historialPreciosUsuario?: HistorialPrecioUncheckedCreateNestedManyWithoutUsuarioInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutClienteInput
    productos?: ProductoUncheckedCreateNestedManyWithoutProveedorInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutPersonaInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutAdminInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutProveedorInput
    empresas?: EmpresaUncheckedCreateNestedManyWithoutClienteInput
  }

  export type PersonaCreateOrConnectWithoutGastosComoProveedorInput = {
    where: PersonaWhereUniqueInput
    create: XOR<PersonaCreateWithoutGastosComoProveedorInput, PersonaUncheckedCreateWithoutGastosComoProveedorInput>
  }

  export type AsignacionGastoProyectoUpsertWithWhereUniqueWithoutGastoInput = {
    where: AsignacionGastoProyectoWhereUniqueInput
    update: XOR<AsignacionGastoProyectoUpdateWithoutGastoInput, AsignacionGastoProyectoUncheckedUpdateWithoutGastoInput>
    create: XOR<AsignacionGastoProyectoCreateWithoutGastoInput, AsignacionGastoProyectoUncheckedCreateWithoutGastoInput>
  }

  export type AsignacionGastoProyectoUpdateWithWhereUniqueWithoutGastoInput = {
    where: AsignacionGastoProyectoWhereUniqueInput
    data: XOR<AsignacionGastoProyectoUpdateWithoutGastoInput, AsignacionGastoProyectoUncheckedUpdateWithoutGastoInput>
  }

  export type AsignacionGastoProyectoUpdateManyWithWhereWithoutGastoInput = {
    where: AsignacionGastoProyectoScalarWhereInput
    data: XOR<AsignacionGastoProyectoUpdateManyMutationInput, AsignacionGastoProyectoUncheckedUpdateManyWithoutGastoInput>
  }

  export type MonedaUpsertWithoutGastosOperativosInput = {
    update: XOR<MonedaUpdateWithoutGastosOperativosInput, MonedaUncheckedUpdateWithoutGastosOperativosInput>
    create: XOR<MonedaCreateWithoutGastosOperativosInput, MonedaUncheckedCreateWithoutGastosOperativosInput>
    where?: MonedaWhereInput
  }

  export type MonedaUpdateToOneWithWhereWithoutGastosOperativosInput = {
    where?: MonedaWhereInput
    data: XOR<MonedaUpdateWithoutGastosOperativosInput, MonedaUncheckedUpdateWithoutGastosOperativosInput>
  }

  export type MonedaUpdateWithoutGastosOperativosInput = {
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type MonedaUncheckedUpdateWithoutGastosOperativosInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUncheckedUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUncheckedUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUncheckedUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type PersonaUpsertWithoutGastosComoProveedorInput = {
    update: XOR<PersonaUpdateWithoutGastosComoProveedorInput, PersonaUncheckedUpdateWithoutGastosComoProveedorInput>
    create: XOR<PersonaCreateWithoutGastosComoProveedorInput, PersonaUncheckedCreateWithoutGastosComoProveedorInput>
    where?: PersonaWhereInput
  }

  export type PersonaUpdateToOneWithWhereWithoutGastosComoProveedorInput = {
    where?: PersonaWhereInput
    data: XOR<PersonaUpdateWithoutGastosComoProveedorInput, PersonaUncheckedUpdateWithoutGastosComoProveedorInput>
  }

  export type PersonaUpdateWithoutGastosComoProveedorInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
    historialPreciosUsuario?: HistorialPrecioUpdateManyWithoutUsuarioNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutClienteNestedInput
    productos?: ProductoUpdateManyWithoutProveedorNestedInput
    recibos?: ReciboUpdateManyWithoutPersonaNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutAdminNestedInput
    servicios?: ServicioUpdateManyWithoutProveedorNestedInput
    empresas?: EmpresaUpdateManyWithoutClienteNestedInput
  }

  export type PersonaUncheckedUpdateWithoutGastosComoProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
    historialPreciosUsuario?: HistorialPrecioUncheckedUpdateManyWithoutUsuarioNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutClienteNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutProveedorNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutPersonaNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutAdminNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutProveedorNestedInput
    empresas?: EmpresaUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type GastoOperativoCreateWithoutAsignacionesInput = {
    concepto: string
    descripcion?: string | null
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    categoria: $Enums.CategoriaGasto
    esRecurrente?: boolean
    frecuencia?: string | null
    comprobante?: string | null
    observaciones?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    moneda: MonedaCreateNestedOneWithoutGastosOperativosInput
    proveedor?: PersonaCreateNestedOneWithoutGastosComoProveedorInput
  }

  export type GastoOperativoUncheckedCreateWithoutAsignacionesInput = {
    id?: number
    concepto: string
    descripcion?: string | null
    monto: Decimal | DecimalJsLike | number | string
    monedaId: number
    fecha: Date | string
    categoria: $Enums.CategoriaGasto
    esRecurrente?: boolean
    frecuencia?: string | null
    proveedorId?: number | null
    comprobante?: string | null
    observaciones?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GastoOperativoCreateOrConnectWithoutAsignacionesInput = {
    where: GastoOperativoWhereUniqueInput
    create: XOR<GastoOperativoCreateWithoutAsignacionesInput, GastoOperativoUncheckedCreateWithoutAsignacionesInput>
  }

  export type PresupuestoCreateWithoutAsignacionesGastoInput = {
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    facturas?: FacturaCreateNestedManyWithoutPresupuestoInput
    items?: ItemCreateNestedManyWithoutPresupuestoInput
    cliente: PersonaCreateNestedOneWithoutPresupuestosInput
    empresa?: EmpresaCreateNestedOneWithoutPresupuestosInput
    moneda?: MonedaCreateNestedOneWithoutPresupuestosInput
    presupuestoImpuestos?: PresupuestoImpuestoCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoUncheckedCreateWithoutAsignacionesGastoInput = {
    id?: number
    clienteId: number
    empresaId?: number | null
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    facturas?: FacturaUncheckedCreateNestedManyWithoutPresupuestoInput
    items?: ItemUncheckedCreateNestedManyWithoutPresupuestoInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutPresupuestoInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoCreateOrConnectWithoutAsignacionesGastoInput = {
    where: PresupuestoWhereUniqueInput
    create: XOR<PresupuestoCreateWithoutAsignacionesGastoInput, PresupuestoUncheckedCreateWithoutAsignacionesGastoInput>
  }

  export type GastoOperativoUpsertWithoutAsignacionesInput = {
    update: XOR<GastoOperativoUpdateWithoutAsignacionesInput, GastoOperativoUncheckedUpdateWithoutAsignacionesInput>
    create: XOR<GastoOperativoCreateWithoutAsignacionesInput, GastoOperativoUncheckedCreateWithoutAsignacionesInput>
    where?: GastoOperativoWhereInput
  }

  export type GastoOperativoUpdateToOneWithWhereWithoutAsignacionesInput = {
    where?: GastoOperativoWhereInput
    data: XOR<GastoOperativoUpdateWithoutAsignacionesInput, GastoOperativoUncheckedUpdateWithoutAsignacionesInput>
  }

  export type GastoOperativoUpdateWithoutAsignacionesInput = {
    concepto?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: EnumCategoriaGastoFieldUpdateOperationsInput | $Enums.CategoriaGasto
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableStringFieldUpdateOperationsInput | string | null
    comprobante?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    moneda?: MonedaUpdateOneRequiredWithoutGastosOperativosNestedInput
    proveedor?: PersonaUpdateOneWithoutGastosComoProveedorNestedInput
  }

  export type GastoOperativoUncheckedUpdateWithoutAsignacionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    concepto?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monedaId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: EnumCategoriaGastoFieldUpdateOperationsInput | $Enums.CategoriaGasto
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableStringFieldUpdateOperationsInput | string | null
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
    comprobante?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PresupuestoUpsertWithoutAsignacionesGastoInput = {
    update: XOR<PresupuestoUpdateWithoutAsignacionesGastoInput, PresupuestoUncheckedUpdateWithoutAsignacionesGastoInput>
    create: XOR<PresupuestoCreateWithoutAsignacionesGastoInput, PresupuestoUncheckedCreateWithoutAsignacionesGastoInput>
    where?: PresupuestoWhereInput
  }

  export type PresupuestoUpdateToOneWithWhereWithoutAsignacionesGastoInput = {
    where?: PresupuestoWhereInput
    data: XOR<PresupuestoUpdateWithoutAsignacionesGastoInput, PresupuestoUncheckedUpdateWithoutAsignacionesGastoInput>
  }

  export type PresupuestoUpdateWithoutAsignacionesGastoInput = {
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    facturas?: FacturaUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUpdateManyWithoutPresupuestoNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutPresupuestosNestedInput
    empresa?: EmpresaUpdateOneWithoutPresupuestosNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutPresupuestosNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutPresupuestoNestedInput
  }

  export type PresupuestoUncheckedUpdateWithoutAsignacionesGastoInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    facturas?: FacturaUncheckedUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUncheckedUpdateManyWithoutPresupuestoNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutPresupuestoNestedInput
  }

  export type MonedaCreateWithoutHistorialPreciosInput = {
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoCreateNestedManyWithoutMonedaInput
    productos?: ProductoCreateNestedManyWithoutMonedaInput
    servicios?: ServicioCreateNestedManyWithoutMonedaInput
    recibos?: ReciboCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaUncheckedCreateWithoutHistorialPreciosInput = {
    id?: number
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaUncheckedCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoUncheckedCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutMonedaInput
    productos?: ProductoUncheckedCreateNestedManyWithoutMonedaInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutMonedaInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutMonedaInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioUncheckedCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioUncheckedCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaCreateOrConnectWithoutHistorialPreciosInput = {
    where: MonedaWhereUniqueInput
    create: XOR<MonedaCreateWithoutHistorialPreciosInput, MonedaUncheckedCreateWithoutHistorialPreciosInput>
  }

  export type ProductoCreateWithoutHistorialPreciosInput = {
    nombre: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: ItemCreateNestedManyWithoutProductoInput
    moneda?: MonedaCreateNestedOneWithoutProductosInput
    proveedor: PersonaCreateNestedOneWithoutProductosInput
  }

  export type ProductoUncheckedCreateWithoutHistorialPreciosInput = {
    id?: number
    nombre: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    proveedorId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    items?: ItemUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutHistorialPreciosInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutHistorialPreciosInput, ProductoUncheckedCreateWithoutHistorialPreciosInput>
  }

  export type ServicioCreateWithoutHistorialPreciosInput = {
    nombre: string
    descripcion: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: ItemCreateNestedManyWithoutServicioInput
    moneda?: MonedaCreateNestedOneWithoutServiciosInput
    proveedor: PersonaCreateNestedOneWithoutServiciosInput
  }

  export type ServicioUncheckedCreateWithoutHistorialPreciosInput = {
    id?: number
    nombre: string
    descripcion: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    proveedorId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    items?: ItemUncheckedCreateNestedManyWithoutServicioInput
  }

  export type ServicioCreateOrConnectWithoutHistorialPreciosInput = {
    where: ServicioWhereUniqueInput
    create: XOR<ServicioCreateWithoutHistorialPreciosInput, ServicioUncheckedCreateWithoutHistorialPreciosInput>
  }

  export type PersonaCreateWithoutHistorialPreciosUsuarioInput = {
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
    gastosComoProveedor?: GastoOperativoCreateNestedManyWithoutProveedorInput
    presupuestos?: PresupuestoCreateNestedManyWithoutClienteInput
    productos?: ProductoCreateNestedManyWithoutProveedorInput
    recibos?: ReciboCreateNestedManyWithoutPersonaInput
    pagosAdmin?: PagoAdminCreateNestedManyWithoutAdminInput
    servicios?: ServicioCreateNestedManyWithoutProveedorInput
    empresas?: EmpresaCreateNestedManyWithoutClienteInput
  }

  export type PersonaUncheckedCreateWithoutHistorialPreciosUsuarioInput = {
    id?: number
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
    gastosComoProveedor?: GastoOperativoUncheckedCreateNestedManyWithoutProveedorInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutClienteInput
    productos?: ProductoUncheckedCreateNestedManyWithoutProveedorInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutPersonaInput
    pagosAdmin?: PagoAdminUncheckedCreateNestedManyWithoutAdminInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutProveedorInput
    empresas?: EmpresaUncheckedCreateNestedManyWithoutClienteInput
  }

  export type PersonaCreateOrConnectWithoutHistorialPreciosUsuarioInput = {
    where: PersonaWhereUniqueInput
    create: XOR<PersonaCreateWithoutHistorialPreciosUsuarioInput, PersonaUncheckedCreateWithoutHistorialPreciosUsuarioInput>
  }

  export type MonedaUpsertWithoutHistorialPreciosInput = {
    update: XOR<MonedaUpdateWithoutHistorialPreciosInput, MonedaUncheckedUpdateWithoutHistorialPreciosInput>
    create: XOR<MonedaCreateWithoutHistorialPreciosInput, MonedaUncheckedCreateWithoutHistorialPreciosInput>
    where?: MonedaWhereInput
  }

  export type MonedaUpdateToOneWithWhereWithoutHistorialPreciosInput = {
    where?: MonedaWhereInput
    data: XOR<MonedaUpdateWithoutHistorialPreciosInput, MonedaUncheckedUpdateWithoutHistorialPreciosInput>
  }

  export type MonedaUpdateWithoutHistorialPreciosInput = {
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type MonedaUncheckedUpdateWithoutHistorialPreciosInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUncheckedUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUncheckedUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutMonedaNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUncheckedUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUncheckedUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type ProductoUpsertWithoutHistorialPreciosInput = {
    update: XOR<ProductoUpdateWithoutHistorialPreciosInput, ProductoUncheckedUpdateWithoutHistorialPreciosInput>
    create: XOR<ProductoCreateWithoutHistorialPreciosInput, ProductoUncheckedCreateWithoutHistorialPreciosInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutHistorialPreciosInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutHistorialPreciosInput, ProductoUncheckedUpdateWithoutHistorialPreciosInput>
  }

  export type ProductoUpdateWithoutHistorialPreciosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: ItemUpdateManyWithoutProductoNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutProductosNestedInput
    proveedor?: PersonaUpdateOneRequiredWithoutProductosNestedInput
  }

  export type ProductoUncheckedUpdateWithoutHistorialPreciosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    proveedorId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    items?: ItemUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ServicioUpsertWithoutHistorialPreciosInput = {
    update: XOR<ServicioUpdateWithoutHistorialPreciosInput, ServicioUncheckedUpdateWithoutHistorialPreciosInput>
    create: XOR<ServicioCreateWithoutHistorialPreciosInput, ServicioUncheckedCreateWithoutHistorialPreciosInput>
    where?: ServicioWhereInput
  }

  export type ServicioUpdateToOneWithWhereWithoutHistorialPreciosInput = {
    where?: ServicioWhereInput
    data: XOR<ServicioUpdateWithoutHistorialPreciosInput, ServicioUncheckedUpdateWithoutHistorialPreciosInput>
  }

  export type ServicioUpdateWithoutHistorialPreciosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: ItemUpdateManyWithoutServicioNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutServiciosNestedInput
    proveedor?: PersonaUpdateOneRequiredWithoutServiciosNestedInput
  }

  export type ServicioUncheckedUpdateWithoutHistorialPreciosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    proveedorId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    items?: ItemUncheckedUpdateManyWithoutServicioNestedInput
  }

  export type PersonaUpsertWithoutHistorialPreciosUsuarioInput = {
    update: XOR<PersonaUpdateWithoutHistorialPreciosUsuarioInput, PersonaUncheckedUpdateWithoutHistorialPreciosUsuarioInput>
    create: XOR<PersonaCreateWithoutHistorialPreciosUsuarioInput, PersonaUncheckedCreateWithoutHistorialPreciosUsuarioInput>
    where?: PersonaWhereInput
  }

  export type PersonaUpdateToOneWithWhereWithoutHistorialPreciosUsuarioInput = {
    where?: PersonaWhereInput
    data: XOR<PersonaUpdateWithoutHistorialPreciosUsuarioInput, PersonaUncheckedUpdateWithoutHistorialPreciosUsuarioInput>
  }

  export type PersonaUpdateWithoutHistorialPreciosUsuarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
    gastosComoProveedor?: GastoOperativoUpdateManyWithoutProveedorNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutClienteNestedInput
    productos?: ProductoUpdateManyWithoutProveedorNestedInput
    recibos?: ReciboUpdateManyWithoutPersonaNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutAdminNestedInput
    servicios?: ServicioUpdateManyWithoutProveedorNestedInput
    empresas?: EmpresaUpdateManyWithoutClienteNestedInput
  }

  export type PersonaUncheckedUpdateWithoutHistorialPreciosUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
    gastosComoProveedor?: GastoOperativoUncheckedUpdateManyWithoutProveedorNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutClienteNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutProveedorNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutPersonaNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutAdminNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutProveedorNestedInput
    empresas?: EmpresaUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type PersonaCreateWithoutPagosAdminInput = {
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
    gastosComoProveedor?: GastoOperativoCreateNestedManyWithoutProveedorInput
    historialPreciosUsuario?: HistorialPrecioCreateNestedManyWithoutUsuarioInput
    presupuestos?: PresupuestoCreateNestedManyWithoutClienteInput
    productos?: ProductoCreateNestedManyWithoutProveedorInput
    recibos?: ReciboCreateNestedManyWithoutPersonaInput
    servicios?: ServicioCreateNestedManyWithoutProveedorInput
    empresas?: EmpresaCreateNestedManyWithoutClienteInput
  }

  export type PersonaUncheckedCreateWithoutPagosAdminInput = {
    id?: number
    nombre: string
    tipo: $Enums.TipoPersona
    telefono?: string | null
    cvu?: string | null
    roles?: PersonaCreaterolesInput | $Enums.RolUsuario[]
    password?: string | null
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    activo?: boolean
    esUsuario?: boolean
    gastosComoProveedor?: GastoOperativoUncheckedCreateNestedManyWithoutProveedorInput
    historialPreciosUsuario?: HistorialPrecioUncheckedCreateNestedManyWithoutUsuarioInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutClienteInput
    productos?: ProductoUncheckedCreateNestedManyWithoutProveedorInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutPersonaInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutProveedorInput
    empresas?: EmpresaUncheckedCreateNestedManyWithoutClienteInput
  }

  export type PersonaCreateOrConnectWithoutPagosAdminInput = {
    where: PersonaWhereUniqueInput
    create: XOR<PersonaCreateWithoutPagosAdminInput, PersonaUncheckedCreateWithoutPagosAdminInput>
  }

  export type PresupuestoCreateWithoutPagosAdminInput = {
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoCreateNestedManyWithoutPresupuestoInput
    facturas?: FacturaCreateNestedManyWithoutPresupuestoInput
    items?: ItemCreateNestedManyWithoutPresupuestoInput
    cliente: PersonaCreateNestedOneWithoutPresupuestosInput
    empresa?: EmpresaCreateNestedOneWithoutPresupuestosInput
    moneda?: MonedaCreateNestedOneWithoutPresupuestosInput
    presupuestoImpuestos?: PresupuestoImpuestoCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoUncheckedCreateWithoutPagosAdminInput = {
    id?: number
    clienteId: number
    empresaId?: number | null
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedCreateNestedManyWithoutPresupuestoInput
    facturas?: FacturaUncheckedCreateNestedManyWithoutPresupuestoInput
    items?: ItemUncheckedCreateNestedManyWithoutPresupuestoInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedCreateNestedManyWithoutPresupuestoInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutPresupuestoInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutPresupuestoInput
  }

  export type PresupuestoCreateOrConnectWithoutPagosAdminInput = {
    where: PresupuestoWhereUniqueInput
    create: XOR<PresupuestoCreateWithoutPagosAdminInput, PresupuestoUncheckedCreateWithoutPagosAdminInput>
  }

  export type MonedaCreateWithoutPagosAdminInput = {
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoCreateNestedManyWithoutMonedaInput
    productos?: ProductoCreateNestedManyWithoutMonedaInput
    servicios?: ServicioCreateNestedManyWithoutMonedaInput
    recibos?: ReciboCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaUncheckedCreateWithoutPagosAdminInput = {
    id?: number
    codigo: $Enums.CodigoMoneda
    nombre: string
    simbolo: string
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    facturas?: FacturaUncheckedCreateNestedManyWithoutMonedaInput
    gastosOperativos?: GastoOperativoUncheckedCreateNestedManyWithoutMonedaInput
    historialPrecios?: HistorialPrecioUncheckedCreateNestedManyWithoutMonedaInput
    presupuestos?: PresupuestoUncheckedCreateNestedManyWithoutMonedaInput
    productos?: ProductoUncheckedCreateNestedManyWithoutMonedaInput
    servicios?: ServicioUncheckedCreateNestedManyWithoutMonedaInput
    recibos?: ReciboUncheckedCreateNestedManyWithoutMonedaInput
    cobrosCliente?: CobroClienteUncheckedCreateNestedManyWithoutMonedaInput
    tiposCambio?: TipoCambioUncheckedCreateNestedManyWithoutMonedaDesdeInput
    tiposCambioDestino?: TipoCambioUncheckedCreateNestedManyWithoutMonedaHaciaInput
  }

  export type MonedaCreateOrConnectWithoutPagosAdminInput = {
    where: MonedaWhereUniqueInput
    create: XOR<MonedaCreateWithoutPagosAdminInput, MonedaUncheckedCreateWithoutPagosAdminInput>
  }

  export type PersonaUpsertWithoutPagosAdminInput = {
    update: XOR<PersonaUpdateWithoutPagosAdminInput, PersonaUncheckedUpdateWithoutPagosAdminInput>
    create: XOR<PersonaCreateWithoutPagosAdminInput, PersonaUncheckedCreateWithoutPagosAdminInput>
    where?: PersonaWhereInput
  }

  export type PersonaUpdateToOneWithWhereWithoutPagosAdminInput = {
    where?: PersonaWhereInput
    data: XOR<PersonaUpdateWithoutPagosAdminInput, PersonaUncheckedUpdateWithoutPagosAdminInput>
  }

  export type PersonaUpdateWithoutPagosAdminInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
    gastosComoProveedor?: GastoOperativoUpdateManyWithoutProveedorNestedInput
    historialPreciosUsuario?: HistorialPrecioUpdateManyWithoutUsuarioNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutClienteNestedInput
    productos?: ProductoUpdateManyWithoutProveedorNestedInput
    recibos?: ReciboUpdateManyWithoutPersonaNestedInput
    servicios?: ServicioUpdateManyWithoutProveedorNestedInput
    empresas?: EmpresaUpdateManyWithoutClienteNestedInput
  }

  export type PersonaUncheckedUpdateWithoutPagosAdminInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPersonaFieldUpdateOperationsInput | $Enums.TipoPersona
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    cvu?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: PersonaUpdaterolesInput | $Enums.RolUsuario[]
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    esUsuario?: BoolFieldUpdateOperationsInput | boolean
    gastosComoProveedor?: GastoOperativoUncheckedUpdateManyWithoutProveedorNestedInput
    historialPreciosUsuario?: HistorialPrecioUncheckedUpdateManyWithoutUsuarioNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutClienteNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutProveedorNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutPersonaNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutProveedorNestedInput
    empresas?: EmpresaUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type PresupuestoUpsertWithoutPagosAdminInput = {
    update: XOR<PresupuestoUpdateWithoutPagosAdminInput, PresupuestoUncheckedUpdateWithoutPagosAdminInput>
    create: XOR<PresupuestoCreateWithoutPagosAdminInput, PresupuestoUncheckedCreateWithoutPagosAdminInput>
    where?: PresupuestoWhereInput
  }

  export type PresupuestoUpdateToOneWithWhereWithoutPagosAdminInput = {
    where?: PresupuestoWhereInput
    data: XOR<PresupuestoUpdateWithoutPagosAdminInput, PresupuestoUncheckedUpdateWithoutPagosAdminInput>
  }

  export type PresupuestoUpdateWithoutPagosAdminInput = {
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUpdateManyWithoutPresupuestoNestedInput
    facturas?: FacturaUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUpdateManyWithoutPresupuestoNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutPresupuestosNestedInput
    empresa?: EmpresaUpdateOneWithoutPresupuestosNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutPresupuestosNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutPresupuestoNestedInput
  }

  export type PresupuestoUncheckedUpdateWithoutPagosAdminInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedUpdateManyWithoutPresupuestoNestedInput
    facturas?: FacturaUncheckedUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUncheckedUpdateManyWithoutPresupuestoNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutPresupuestoNestedInput
  }

  export type MonedaUpsertWithoutPagosAdminInput = {
    update: XOR<MonedaUpdateWithoutPagosAdminInput, MonedaUncheckedUpdateWithoutPagosAdminInput>
    create: XOR<MonedaCreateWithoutPagosAdminInput, MonedaUncheckedCreateWithoutPagosAdminInput>
    where?: MonedaWhereInput
  }

  export type MonedaUpdateToOneWithWhereWithoutPagosAdminInput = {
    where?: MonedaWhereInput
    data: XOR<MonedaUpdateWithoutPagosAdminInput, MonedaUncheckedUpdateWithoutPagosAdminInput>
  }

  export type MonedaUpdateWithoutPagosAdminInput = {
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type MonedaUncheckedUpdateWithoutPagosAdminInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: EnumCodigoMonedaFieldUpdateOperationsInput | $Enums.CodigoMoneda
    nombre?: StringFieldUpdateOperationsInput | string
    simbolo?: StringFieldUpdateOperationsInput | string
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: FacturaUncheckedUpdateManyWithoutMonedaNestedInput
    gastosOperativos?: GastoOperativoUncheckedUpdateManyWithoutMonedaNestedInput
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutMonedaNestedInput
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutMonedaNestedInput
    productos?: ProductoUncheckedUpdateManyWithoutMonedaNestedInput
    servicios?: ServicioUncheckedUpdateManyWithoutMonedaNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutMonedaNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutMonedaNestedInput
    tiposCambio?: TipoCambioUncheckedUpdateManyWithoutMonedaDesdeNestedInput
    tiposCambioDestino?: TipoCambioUncheckedUpdateManyWithoutMonedaHaciaNestedInput
  }

  export type FacturaCreateManyMonedaInput = {
    id?: number
    numero: string
    presupuestoId: number
    empresaId?: number | null
    fecha: Date | string
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado: $Enums.EstadoFactura
    impuestoAplicadoId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
  }

  export type GastoOperativoCreateManyMonedaInput = {
    id?: number
    concepto: string
    descripcion?: string | null
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    categoria: $Enums.CategoriaGasto
    esRecurrente?: boolean
    frecuencia?: string | null
    proveedorId?: number | null
    comprobante?: string | null
    observaciones?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HistorialPrecioCreateManyMonedaInput = {
    id?: number
    productoId?: number | null
    servicioId?: number | null
    precio: Decimal | DecimalJsLike | number | string
    fechaDesde: Date | string
    fechaHasta?: Date | string | null
    motivoCambio?: string | null
    usuarioId?: number | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PresupuestoCreateManyMonedaInput = {
    id?: number
    clienteId: number
    empresaId?: number | null
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
  }

  export type ProductoCreateManyMonedaInput = {
    id?: number
    nombre: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    proveedorId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ServicioCreateManyMonedaInput = {
    id?: number
    nombre: string
    descripcion: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    proveedorId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReciboCreateManyMonedaInput = {
    id?: number
    personaId: number
    presupuestoId?: number | null
    concepto: string
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    tipo?: $Enums.ReciboTipo
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PagoAdminCreateManyMonedaInput = {
    id?: number
    adminId: number
    presupuestoId: number
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CobroClienteCreateManyMonedaInput = {
    id?: number
    presupuestoId: number
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TipoCambioCreateManyMonedaDesdeInput = {
    id?: number
    monedaHaciaId: number
    valor: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    tipo?: $Enums.TipoCotizacion
    fuente?: string | null
    createdAt?: Date | string
  }

  export type TipoCambioCreateManyMonedaHaciaInput = {
    id?: number
    monedaDesdeId: number
    valor: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    tipo?: $Enums.TipoCotizacion
    fuente?: string | null
    createdAt?: Date | string
  }

  export type FacturaUpdateWithoutMonedaInput = {
    numero?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFieldUpdateOperationsInput | $Enums.EstadoFactura
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empresa?: EmpresaUpdateOneWithoutFacturasNestedInput
    impuestoAplicado?: ImpuestoUpdateOneRequiredWithoutFacturasNestedInput
    presupuesto?: PresupuestoUpdateOneRequiredWithoutFacturasNestedInput
  }

  export type FacturaUncheckedUpdateWithoutMonedaInput = {
    id?: IntFieldUpdateOperationsInput | number
    numero?: StringFieldUpdateOperationsInput | string
    presupuestoId?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFieldUpdateOperationsInput | $Enums.EstadoFactura
    impuestoAplicadoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FacturaUncheckedUpdateManyWithoutMonedaInput = {
    id?: IntFieldUpdateOperationsInput | number
    numero?: StringFieldUpdateOperationsInput | string
    presupuestoId?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFieldUpdateOperationsInput | $Enums.EstadoFactura
    impuestoAplicadoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type GastoOperativoUpdateWithoutMonedaInput = {
    concepto?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: EnumCategoriaGastoFieldUpdateOperationsInput | $Enums.CategoriaGasto
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableStringFieldUpdateOperationsInput | string | null
    comprobante?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asignaciones?: AsignacionGastoProyectoUpdateManyWithoutGastoNestedInput
    proveedor?: PersonaUpdateOneWithoutGastosComoProveedorNestedInput
  }

  export type GastoOperativoUncheckedUpdateWithoutMonedaInput = {
    id?: IntFieldUpdateOperationsInput | number
    concepto?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: EnumCategoriaGastoFieldUpdateOperationsInput | $Enums.CategoriaGasto
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableStringFieldUpdateOperationsInput | string | null
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
    comprobante?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asignaciones?: AsignacionGastoProyectoUncheckedUpdateManyWithoutGastoNestedInput
  }

  export type GastoOperativoUncheckedUpdateManyWithoutMonedaInput = {
    id?: IntFieldUpdateOperationsInput | number
    concepto?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: EnumCategoriaGastoFieldUpdateOperationsInput | $Enums.CategoriaGasto
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableStringFieldUpdateOperationsInput | string | null
    proveedorId?: NullableIntFieldUpdateOperationsInput | number | null
    comprobante?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialPrecioUpdateWithoutMonedaInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivoCambio?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductoUpdateOneWithoutHistorialPreciosNestedInput
    servicio?: ServicioUpdateOneWithoutHistorialPreciosNestedInput
    usuario?: PersonaUpdateOneWithoutHistorialPreciosUsuarioNestedInput
  }

  export type HistorialPrecioUncheckedUpdateWithoutMonedaInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    servicioId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivoCambio?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialPrecioUncheckedUpdateManyWithoutMonedaInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    servicioId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivoCambio?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PresupuestoUpdateWithoutMonedaInput = {
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUpdateManyWithoutPresupuestoNestedInput
    facturas?: FacturaUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUpdateManyWithoutPresupuestoNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutPresupuestosNestedInput
    empresa?: EmpresaUpdateOneWithoutPresupuestosNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutPresupuestoNestedInput
  }

  export type PresupuestoUncheckedUpdateWithoutMonedaInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedUpdateManyWithoutPresupuestoNestedInput
    facturas?: FacturaUncheckedUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUncheckedUpdateManyWithoutPresupuestoNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutPresupuestoNestedInput
  }

  export type PresupuestoUncheckedUpdateManyWithoutMonedaInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type ProductoUpdateWithoutMonedaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    historialPrecios?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    items?: ItemUpdateManyWithoutProductoNestedInput
    proveedor?: PersonaUpdateOneRequiredWithoutProductosNestedInput
  }

  export type ProductoUncheckedUpdateWithoutMonedaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    proveedorId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    items?: ItemUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateManyWithoutMonedaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    proveedorId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ServicioUpdateWithoutMonedaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    historialPrecios?: HistorialPrecioUpdateManyWithoutServicioNestedInput
    items?: ItemUpdateManyWithoutServicioNestedInput
    proveedor?: PersonaUpdateOneRequiredWithoutServiciosNestedInput
  }

  export type ServicioUncheckedUpdateWithoutMonedaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    proveedorId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutServicioNestedInput
    items?: ItemUncheckedUpdateManyWithoutServicioNestedInput
  }

  export type ServicioUncheckedUpdateManyWithoutMonedaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    proveedorId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReciboUpdateWithoutMonedaInput = {
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    tipo?: EnumReciboTipoFieldUpdateOperationsInput | $Enums.ReciboTipo
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    persona?: PersonaUpdateOneRequiredWithoutRecibosNestedInput
    presupuesto?: PresupuestoUpdateOneWithoutRecibosNestedInput
  }

  export type ReciboUncheckedUpdateWithoutMonedaInput = {
    id?: IntFieldUpdateOperationsInput | number
    personaId?: IntFieldUpdateOperationsInput | number
    presupuestoId?: NullableIntFieldUpdateOperationsInput | number | null
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    tipo?: EnumReciboTipoFieldUpdateOperationsInput | $Enums.ReciboTipo
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReciboUncheckedUpdateManyWithoutMonedaInput = {
    id?: IntFieldUpdateOperationsInput | number
    personaId?: IntFieldUpdateOperationsInput | number
    presupuestoId?: NullableIntFieldUpdateOperationsInput | number | null
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    tipo?: EnumReciboTipoFieldUpdateOperationsInput | $Enums.ReciboTipo
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagoAdminUpdateWithoutMonedaInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admin?: PersonaUpdateOneRequiredWithoutPagosAdminNestedInput
    presupuesto?: PresupuestoUpdateOneRequiredWithoutPagosAdminNestedInput
  }

  export type PagoAdminUncheckedUpdateWithoutMonedaInput = {
    id?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagoAdminUncheckedUpdateManyWithoutMonedaInput = {
    id?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CobroClienteUpdateWithoutMonedaInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    presupuesto?: PresupuestoUpdateOneRequiredWithoutCobrosClienteNestedInput
  }

  export type CobroClienteUncheckedUpdateWithoutMonedaInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CobroClienteUncheckedUpdateManyWithoutMonedaInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TipoCambioUpdateWithoutMonedaDesdeInput = {
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoCotizacionFieldUpdateOperationsInput | $Enums.TipoCotizacion
    fuente?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaHacia?: MonedaUpdateOneRequiredWithoutTiposCambioDestinoNestedInput
  }

  export type TipoCambioUncheckedUpdateWithoutMonedaDesdeInput = {
    id?: IntFieldUpdateOperationsInput | number
    monedaHaciaId?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoCotizacionFieldUpdateOperationsInput | $Enums.TipoCotizacion
    fuente?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TipoCambioUncheckedUpdateManyWithoutMonedaDesdeInput = {
    id?: IntFieldUpdateOperationsInput | number
    monedaHaciaId?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoCotizacionFieldUpdateOperationsInput | $Enums.TipoCotizacion
    fuente?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TipoCambioUpdateWithoutMonedaHaciaInput = {
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoCotizacionFieldUpdateOperationsInput | $Enums.TipoCotizacion
    fuente?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaDesde?: MonedaUpdateOneRequiredWithoutTiposCambioNestedInput
  }

  export type TipoCambioUncheckedUpdateWithoutMonedaHaciaInput = {
    id?: IntFieldUpdateOperationsInput | number
    monedaDesdeId?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoCotizacionFieldUpdateOperationsInput | $Enums.TipoCotizacion
    fuente?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TipoCambioUncheckedUpdateManyWithoutMonedaHaciaInput = {
    id?: IntFieldUpdateOperationsInput | number
    monedaDesdeId?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoCotizacionFieldUpdateOperationsInput | $Enums.TipoCotizacion
    fuente?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GastoOperativoCreateManyProveedorInput = {
    id?: number
    concepto: string
    descripcion?: string | null
    monto: Decimal | DecimalJsLike | number | string
    monedaId: number
    fecha: Date | string
    categoria: $Enums.CategoriaGasto
    esRecurrente?: boolean
    frecuencia?: string | null
    comprobante?: string | null
    observaciones?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HistorialPrecioCreateManyUsuarioInput = {
    id?: number
    productoId?: number | null
    servicioId?: number | null
    monedaId: number
    precio: Decimal | DecimalJsLike | number | string
    fechaDesde: Date | string
    fechaHasta?: Date | string | null
    motivoCambio?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PresupuestoCreateManyClienteInput = {
    id?: number
    empresaId?: number | null
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
  }

  export type ProductoCreateManyProveedorInput = {
    id?: number
    nombre: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
  }

  export type ReciboCreateManyPersonaInput = {
    id?: number
    presupuestoId?: number | null
    concepto: string
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    tipo?: $Enums.ReciboTipo
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
  }

  export type PagoAdminCreateManyAdminInput = {
    id?: number
    presupuestoId: number
    monto: Decimal | DecimalJsLike | number | string
    monedaId?: number
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ServicioCreateManyProveedorInput = {
    id?: number
    nombre: string
    descripcion: string
    costoProveedor: Decimal | DecimalJsLike | number | string
    margenAgencia: Decimal | DecimalJsLike | number | string
    precio: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
  }

  export type EmpresaCreateManyClienteInput = {
    id?: number
    nombre: string
    razonSocial?: string | null
    cuit?: string | null
    telefono?: string | null
    email?: string | null
    direccion?: string | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GastoOperativoUpdateWithoutProveedorInput = {
    concepto?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: EnumCategoriaGastoFieldUpdateOperationsInput | $Enums.CategoriaGasto
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableStringFieldUpdateOperationsInput | string | null
    comprobante?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asignaciones?: AsignacionGastoProyectoUpdateManyWithoutGastoNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutGastosOperativosNestedInput
  }

  export type GastoOperativoUncheckedUpdateWithoutProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    concepto?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monedaId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: EnumCategoriaGastoFieldUpdateOperationsInput | $Enums.CategoriaGasto
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableStringFieldUpdateOperationsInput | string | null
    comprobante?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asignaciones?: AsignacionGastoProyectoUncheckedUpdateManyWithoutGastoNestedInput
  }

  export type GastoOperativoUncheckedUpdateManyWithoutProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    concepto?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monedaId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: EnumCategoriaGastoFieldUpdateOperationsInput | $Enums.CategoriaGasto
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableStringFieldUpdateOperationsInput | string | null
    comprobante?: NullableStringFieldUpdateOperationsInput | string | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialPrecioUpdateWithoutUsuarioInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivoCambio?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    moneda?: MonedaUpdateOneRequiredWithoutHistorialPreciosNestedInput
    producto?: ProductoUpdateOneWithoutHistorialPreciosNestedInput
    servicio?: ServicioUpdateOneWithoutHistorialPreciosNestedInput
  }

  export type HistorialPrecioUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    servicioId?: NullableIntFieldUpdateOperationsInput | number | null
    monedaId?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivoCambio?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialPrecioUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    servicioId?: NullableIntFieldUpdateOperationsInput | number | null
    monedaId?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivoCambio?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PresupuestoUpdateWithoutClienteInput = {
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUpdateManyWithoutPresupuestoNestedInput
    facturas?: FacturaUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUpdateManyWithoutPresupuestoNestedInput
    empresa?: EmpresaUpdateOneWithoutPresupuestosNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutPresupuestosNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutPresupuestoNestedInput
  }

  export type PresupuestoUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedUpdateManyWithoutPresupuestoNestedInput
    facturas?: FacturaUncheckedUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUncheckedUpdateManyWithoutPresupuestoNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutPresupuestoNestedInput
  }

  export type PresupuestoUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type ProductoUpdateWithoutProveedorInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    historialPrecios?: HistorialPrecioUpdateManyWithoutProductoNestedInput
    items?: ItemUpdateManyWithoutProductoNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutProductosNestedInput
  }

  export type ProductoUncheckedUpdateWithoutProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutProductoNestedInput
    items?: ItemUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateManyWithoutProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
  }

  export type ReciboUpdateWithoutPersonaInput = {
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    tipo?: EnumReciboTipoFieldUpdateOperationsInput | $Enums.ReciboTipo
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    presupuesto?: PresupuestoUpdateOneWithoutRecibosNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutRecibosNestedInput
  }

  export type ReciboUncheckedUpdateWithoutPersonaInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: NullableIntFieldUpdateOperationsInput | number | null
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    tipo?: EnumReciboTipoFieldUpdateOperationsInput | $Enums.ReciboTipo
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
  }

  export type ReciboUncheckedUpdateManyWithoutPersonaInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: NullableIntFieldUpdateOperationsInput | number | null
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    tipo?: EnumReciboTipoFieldUpdateOperationsInput | $Enums.ReciboTipo
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
  }

  export type PagoAdminUpdateWithoutAdminInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    presupuesto?: PresupuestoUpdateOneRequiredWithoutPagosAdminNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutPagosAdminNestedInput
  }

  export type PagoAdminUncheckedUpdateWithoutAdminInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monedaId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagoAdminUncheckedUpdateManyWithoutAdminInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monedaId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ServicioUpdateWithoutProveedorInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    historialPrecios?: HistorialPrecioUpdateManyWithoutServicioNestedInput
    items?: ItemUpdateManyWithoutServicioNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutServiciosNestedInput
  }

  export type ServicioUncheckedUpdateWithoutProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    historialPrecios?: HistorialPrecioUncheckedUpdateManyWithoutServicioNestedInput
    items?: ItemUncheckedUpdateManyWithoutServicioNestedInput
  }

  export type ServicioUncheckedUpdateManyWithoutProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    costoProveedor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    margenAgencia?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
  }

  export type EmpresaUpdateWithoutClienteInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    cuit?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    presupuestos?: PresupuestoUpdateManyWithoutEmpresaNestedInput
    facturas?: FacturaUpdateManyWithoutEmpresaNestedInput
  }

  export type EmpresaUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    cuit?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    presupuestos?: PresupuestoUncheckedUpdateManyWithoutEmpresaNestedInput
    facturas?: FacturaUncheckedUpdateManyWithoutEmpresaNestedInput
  }

  export type EmpresaUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    razonSocial?: NullableStringFieldUpdateOperationsInput | string | null
    cuit?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PresupuestoCreateManyEmpresaInput = {
    id?: number
    clienteId: number
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado?: $Enums.EstadoPresupuesto
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
    periodoInicio?: Date | string | null
    periodoFin?: Date | string | null
    esRecurrente?: boolean
    frecuencia?: $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: boolean
    precioPeriodo?: Decimal | DecimalJsLike | number | string | null
  }

  export type FacturaCreateManyEmpresaInput = {
    id?: number
    numero: string
    presupuestoId: number
    fecha: Date | string
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado: $Enums.EstadoFactura
    impuestoAplicadoId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
  }

  export type PresupuestoUpdateWithoutEmpresaInput = {
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUpdateManyWithoutPresupuestoNestedInput
    facturas?: FacturaUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUpdateManyWithoutPresupuestoNestedInput
    cliente?: PersonaUpdateOneRequiredWithoutPresupuestosNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutPresupuestosNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUpdateManyWithoutPresupuestoNestedInput
  }

  export type PresupuestoUncheckedUpdateWithoutEmpresaInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    asignacionesGasto?: AsignacionGastoProyectoUncheckedUpdateManyWithoutPresupuestoNestedInput
    facturas?: FacturaUncheckedUpdateManyWithoutPresupuestoNestedInput
    items?: ItemUncheckedUpdateManyWithoutPresupuestoNestedInput
    presupuestoImpuestos?: PresupuestoImpuestoUncheckedUpdateManyWithoutPresupuestoNestedInput
    recibos?: ReciboUncheckedUpdateManyWithoutPresupuestoNestedInput
    pagosAdmin?: PagoAdminUncheckedUpdateManyWithoutPresupuestoNestedInput
    cobrosCliente?: CobroClienteUncheckedUpdateManyWithoutPresupuestoNestedInput
  }

  export type PresupuestoUncheckedUpdateManyWithoutEmpresaInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoPresupuestoFieldUpdateOperationsInput | $Enums.EstadoPresupuesto
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    periodoFin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esRecurrente?: BoolFieldUpdateOperationsInput | boolean
    frecuencia?: NullableEnumFrecuenciaContratoFieldUpdateOperationsInput | $Enums.FrecuenciaContrato | null
    renovacionAutomatica?: BoolFieldUpdateOperationsInput | boolean
    precioPeriodo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type FacturaUpdateWithoutEmpresaInput = {
    numero?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFieldUpdateOperationsInput | $Enums.EstadoFactura
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    impuestoAplicado?: ImpuestoUpdateOneRequiredWithoutFacturasNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutFacturasNestedInput
    presupuesto?: PresupuestoUpdateOneRequiredWithoutFacturasNestedInput
  }

  export type FacturaUncheckedUpdateWithoutEmpresaInput = {
    id?: IntFieldUpdateOperationsInput | number
    numero?: StringFieldUpdateOperationsInput | string
    presupuestoId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFieldUpdateOperationsInput | $Enums.EstadoFactura
    impuestoAplicadoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FacturaUncheckedUpdateManyWithoutEmpresaInput = {
    id?: IntFieldUpdateOperationsInput | number
    numero?: StringFieldUpdateOperationsInput | string
    presupuestoId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFieldUpdateOperationsInput | $Enums.EstadoFactura
    impuestoAplicadoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HistorialPrecioCreateManyProductoInput = {
    id?: number
    servicioId?: number | null
    monedaId: number
    precio: Decimal | DecimalJsLike | number | string
    fechaDesde: Date | string
    fechaHasta?: Date | string | null
    motivoCambio?: string | null
    usuarioId?: number | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ItemCreateManyProductoInput = {
    id?: number
    presupuestoId: number
    servicioId?: number | null
    cantidad: number
    precioUnitario: Decimal | DecimalJsLike | number | string
  }

  export type HistorialPrecioUpdateWithoutProductoInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivoCambio?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    moneda?: MonedaUpdateOneRequiredWithoutHistorialPreciosNestedInput
    servicio?: ServicioUpdateOneWithoutHistorialPreciosNestedInput
    usuario?: PersonaUpdateOneWithoutHistorialPreciosUsuarioNestedInput
  }

  export type HistorialPrecioUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    servicioId?: NullableIntFieldUpdateOperationsInput | number | null
    monedaId?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivoCambio?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialPrecioUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    servicioId?: NullableIntFieldUpdateOperationsInput | number | null
    monedaId?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivoCambio?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ItemUpdateWithoutProductoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    presupuesto?: PresupuestoUpdateOneRequiredWithoutItemsNestedInput
    servicio?: ServicioUpdateOneWithoutItemsNestedInput
  }

  export type ItemUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    servicioId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ItemUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    servicioId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type HistorialPrecioCreateManyServicioInput = {
    id?: number
    productoId?: number | null
    monedaId: number
    precio: Decimal | DecimalJsLike | number | string
    fechaDesde: Date | string
    fechaHasta?: Date | string | null
    motivoCambio?: string | null
    usuarioId?: number | null
    activo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ItemCreateManyServicioInput = {
    id?: number
    presupuestoId: number
    productoId?: number | null
    cantidad: number
    precioUnitario: Decimal | DecimalJsLike | number | string
  }

  export type HistorialPrecioUpdateWithoutServicioInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivoCambio?: NullableStringFieldUpdateOperationsInput | string | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    moneda?: MonedaUpdateOneRequiredWithoutHistorialPreciosNestedInput
    producto?: ProductoUpdateOneWithoutHistorialPreciosNestedInput
    usuario?: PersonaUpdateOneWithoutHistorialPreciosUsuarioNestedInput
  }

  export type HistorialPrecioUncheckedUpdateWithoutServicioInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    monedaId?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivoCambio?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialPrecioUncheckedUpdateManyWithoutServicioInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    monedaId?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fechaDesde?: DateTimeFieldUpdateOperationsInput | Date | string
    fechaHasta?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivoCambio?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    activo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ItemUpdateWithoutServicioInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    presupuesto?: PresupuestoUpdateOneRequiredWithoutItemsNestedInput
    producto?: ProductoUpdateOneWithoutItemsNestedInput
  }

  export type ItemUncheckedUpdateWithoutServicioInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ItemUncheckedUpdateManyWithoutServicioInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type AsignacionGastoProyectoCreateManyPresupuestoInput = {
    id?: number
    gastoId: number
    porcentaje: Decimal | DecimalJsLike | number | string
    montoAsignado: Decimal | DecimalJsLike | number | string
    justificacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FacturaCreateManyPresupuestoInput = {
    id?: number
    numero: string
    empresaId?: number | null
    fecha: Date | string
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado: $Enums.EstadoFactura
    impuestoAplicadoId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
  }

  export type ItemCreateManyPresupuestoInput = {
    id?: number
    productoId?: number | null
    servicioId?: number | null
    cantidad: number
    precioUnitario: Decimal | DecimalJsLike | number | string
  }

  export type PresupuestoImpuestoCreateManyPresupuestoInput = {
    id?: number
    impuestoId: number
    monto: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReciboCreateManyPresupuestoInput = {
    id?: number
    personaId: number
    concepto: string
    monto: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    metodoPago: string
    tipo?: $Enums.ReciboTipo
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
  }

  export type PagoAdminCreateManyPresupuestoInput = {
    id?: number
    adminId: number
    monto: Decimal | DecimalJsLike | number | string
    monedaId?: number
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CobroClienteCreateManyPresupuestoInput = {
    id?: number
    monto: Decimal | DecimalJsLike | number | string
    monedaId?: number
    fecha: Date | string
    metodoPago: string
    concepto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AsignacionGastoProyectoUpdateWithoutPresupuestoInput = {
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    montoAsignado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    justificacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    gasto?: GastoOperativoUpdateOneRequiredWithoutAsignacionesNestedInput
  }

  export type AsignacionGastoProyectoUncheckedUpdateWithoutPresupuestoInput = {
    id?: IntFieldUpdateOperationsInput | number
    gastoId?: IntFieldUpdateOperationsInput | number
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    montoAsignado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    justificacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AsignacionGastoProyectoUncheckedUpdateManyWithoutPresupuestoInput = {
    id?: IntFieldUpdateOperationsInput | number
    gastoId?: IntFieldUpdateOperationsInput | number
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    montoAsignado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    justificacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FacturaUpdateWithoutPresupuestoInput = {
    numero?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFieldUpdateOperationsInput | $Enums.EstadoFactura
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empresa?: EmpresaUpdateOneWithoutFacturasNestedInput
    impuestoAplicado?: ImpuestoUpdateOneRequiredWithoutFacturasNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutFacturasNestedInput
  }

  export type FacturaUncheckedUpdateWithoutPresupuestoInput = {
    id?: IntFieldUpdateOperationsInput | number
    numero?: StringFieldUpdateOperationsInput | string
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFieldUpdateOperationsInput | $Enums.EstadoFactura
    impuestoAplicadoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FacturaUncheckedUpdateManyWithoutPresupuestoInput = {
    id?: IntFieldUpdateOperationsInput | number
    numero?: StringFieldUpdateOperationsInput | string
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFieldUpdateOperationsInput | $Enums.EstadoFactura
    impuestoAplicadoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ItemUpdateWithoutPresupuestoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    producto?: ProductoUpdateOneWithoutItemsNestedInput
    servicio?: ServicioUpdateOneWithoutItemsNestedInput
  }

  export type ItemUncheckedUpdateWithoutPresupuestoInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    servicioId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ItemUncheckedUpdateManyWithoutPresupuestoInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    servicioId?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precioUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type PresupuestoImpuestoUpdateWithoutPresupuestoInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    impuesto?: ImpuestoUpdateOneRequiredWithoutPresupuestoImpuestosNestedInput
  }

  export type PresupuestoImpuestoUncheckedUpdateWithoutPresupuestoInput = {
    id?: IntFieldUpdateOperationsInput | number
    impuestoId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PresupuestoImpuestoUncheckedUpdateManyWithoutPresupuestoInput = {
    id?: IntFieldUpdateOperationsInput | number
    impuestoId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReciboUpdateWithoutPresupuestoInput = {
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    tipo?: EnumReciboTipoFieldUpdateOperationsInput | $Enums.ReciboTipo
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    persona?: PersonaUpdateOneRequiredWithoutRecibosNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutRecibosNestedInput
  }

  export type ReciboUncheckedUpdateWithoutPresupuestoInput = {
    id?: IntFieldUpdateOperationsInput | number
    personaId?: IntFieldUpdateOperationsInput | number
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    tipo?: EnumReciboTipoFieldUpdateOperationsInput | $Enums.ReciboTipo
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
  }

  export type ReciboUncheckedUpdateManyWithoutPresupuestoInput = {
    id?: IntFieldUpdateOperationsInput | number
    personaId?: IntFieldUpdateOperationsInput | number
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    tipo?: EnumReciboTipoFieldUpdateOperationsInput | $Enums.ReciboTipo
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
  }

  export type PagoAdminUpdateWithoutPresupuestoInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admin?: PersonaUpdateOneRequiredWithoutPagosAdminNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutPagosAdminNestedInput
  }

  export type PagoAdminUncheckedUpdateWithoutPresupuestoInput = {
    id?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monedaId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagoAdminUncheckedUpdateManyWithoutPresupuestoInput = {
    id?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monedaId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CobroClienteUpdateWithoutPresupuestoInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    moneda?: MonedaUpdateOneRequiredWithoutCobrosClienteNestedInput
  }

  export type CobroClienteUncheckedUpdateWithoutPresupuestoInput = {
    id?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monedaId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CobroClienteUncheckedUpdateManyWithoutPresupuestoInput = {
    id?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monedaId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    metodoPago?: StringFieldUpdateOperationsInput | string
    concepto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FacturaCreateManyImpuestoAplicadoInput = {
    id?: number
    numero: string
    presupuestoId: number
    empresaId?: number | null
    fecha: Date | string
    subtotal: Decimal | DecimalJsLike | number | string
    impuestos: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    estado: $Enums.EstadoFactura
    createdAt?: Date | string
    updatedAt?: Date | string
    monedaId?: number
    tipoCambioFecha?: Date | string | null
  }

  export type PresupuestoImpuestoCreateManyImpuestoInput = {
    id?: number
    presupuestoId: number
    monto: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FacturaUpdateWithoutImpuestoAplicadoInput = {
    numero?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFieldUpdateOperationsInput | $Enums.EstadoFactura
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    empresa?: EmpresaUpdateOneWithoutFacturasNestedInput
    moneda?: MonedaUpdateOneRequiredWithoutFacturasNestedInput
    presupuesto?: PresupuestoUpdateOneRequiredWithoutFacturasNestedInput
  }

  export type FacturaUncheckedUpdateWithoutImpuestoAplicadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    numero?: StringFieldUpdateOperationsInput | string
    presupuestoId?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFieldUpdateOperationsInput | $Enums.EstadoFactura
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FacturaUncheckedUpdateManyWithoutImpuestoAplicadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    numero?: StringFieldUpdateOperationsInput | string
    presupuestoId?: IntFieldUpdateOperationsInput | number
    empresaId?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EnumEstadoFacturaFieldUpdateOperationsInput | $Enums.EstadoFactura
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    monedaId?: IntFieldUpdateOperationsInput | number
    tipoCambioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PresupuestoImpuestoUpdateWithoutImpuestoInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    presupuesto?: PresupuestoUpdateOneRequiredWithoutPresupuestoImpuestosNestedInput
  }

  export type PresupuestoImpuestoUncheckedUpdateWithoutImpuestoInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PresupuestoImpuestoUncheckedUpdateManyWithoutImpuestoInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AsignacionGastoProyectoCreateManyGastoInput = {
    id?: number
    presupuestoId: number
    porcentaje: Decimal | DecimalJsLike | number | string
    montoAsignado: Decimal | DecimalJsLike | number | string
    justificacion?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AsignacionGastoProyectoUpdateWithoutGastoInput = {
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    montoAsignado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    justificacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    presupuesto?: PresupuestoUpdateOneRequiredWithoutAsignacionesGastoNestedInput
  }

  export type AsignacionGastoProyectoUncheckedUpdateWithoutGastoInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    montoAsignado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    justificacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AsignacionGastoProyectoUncheckedUpdateManyWithoutGastoInput = {
    id?: IntFieldUpdateOperationsInput | number
    presupuestoId?: IntFieldUpdateOperationsInput | number
    porcentaje?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    montoAsignado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    justificacion?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}