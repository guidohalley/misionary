"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.gastoRoutes = void 0;
const express_1 = require("express");
const gasto_controller_1 = require("../controllers/gasto.controller");
const auth_1 = require("../middleware/auth");
const checkRole_1 = require("../middleware/checkRole");
const client_1 = require("@prisma/client");
const asyncHandler_1 = require("../utils/asyncHandler");
const router = (0, express_1.Router)();
exports.gastoRoutes = router;
router.get('/', [auth_1.auth], (0, asyncHandler_1.asyncHandler)(gasto_controller_1.gastoController.getGastosOperativos));
router.get('/categorias', [auth_1.auth], (0, asyncHandler_1.asyncHandler)(gasto_controller_1.gastoController.getCategoriasGasto));
router.get('/resumen', [auth_1.auth], (0, asyncHandler_1.asyncHandler)(gasto_controller_1.gastoController.getResumenGastosPorCategoria));
router.get('/:id', [auth_1.auth], (0, asyncHandler_1.asyncHandler)(gasto_controller_1.gastoController.getGastoOperativoById));
router.post('/', [auth_1.auth, (0, checkRole_1.checkRole)([client_1.RolUsuario.ADMIN, client_1.RolUsuario.CONTADOR])], (0, asyncHandler_1.asyncHandler)(gasto_controller_1.gastoController.createGastoOperativo));
router.put('/:id', [auth_1.auth, (0, checkRole_1.checkRole)([client_1.RolUsuario.ADMIN, client_1.RolUsuario.CONTADOR])], (0, asyncHandler_1.asyncHandler)(gasto_controller_1.gastoController.updateGastoOperativo));
router.delete('/:id', [auth_1.auth, (0, checkRole_1.checkRole)([client_1.RolUsuario.ADMIN])], (0, asyncHandler_1.asyncHandler)(gasto_controller_1.gastoController.deleteGastoOperativo));
router.get('/:gastoId/asignaciones', [auth_1.auth], (0, asyncHandler_1.asyncHandler)(gasto_controller_1.gastoController.getAsignacionesPorGasto));
router.post('/asignaciones', [auth_1.auth, (0, checkRole_1.checkRole)([client_1.RolUsuario.ADMIN, client_1.RolUsuario.CONTADOR])], (0, asyncHandler_1.asyncHandler)(gasto_controller_1.gastoController.createAsignacion));
router.put('/asignaciones/:id', [auth_1.auth, (0, checkRole_1.checkRole)([client_1.RolUsuario.ADMIN, client_1.RolUsuario.CONTADOR])], (0, asyncHandler_1.asyncHandler)(gasto_controller_1.gastoController.updateAsignacion));
router.delete('/asignaciones/:id', [auth_1.auth, (0, checkRole_1.checkRole)([client_1.RolUsuario.ADMIN])], (0, asyncHandler_1.asyncHandler)(gasto_controller_1.gastoController.deleteAsignacion));
router.get('/proyecto/:presupuestoId/asignaciones', [auth_1.auth], (0, asyncHandler_1.asyncHandler)(gasto_controller_1.gastoController.getAsignacionesPorProyecto));
router.get('/proyecto/:presupuestoId/costos', [auth_1.auth], (0, asyncHandler_1.asyncHandler)(gasto_controller_1.gastoController.getCostosOperativosPorProyecto));
//# sourceMappingURL=gasto.routes.js.map